import { c as createComponent, r as renderTemplate, a as renderComponent, u as unescapeHTML } from './astro/server__cawITtY.mjs';
import 'kleur/colors';
import { $ as $$MainLayout } from './MainLayout_BFrOPY-O.mjs';

const html = "<script type=\"module\" hoist=\"\">\nimport '/src/components/ReplPad';\n</script>\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html\">Geometry.Lines module</a></li>\n</ul></div>\n<p>A line is defined by two <a href=\"../point/\">Points</a></p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\"><code><span class=\"line\"><span style=\"color:#F97583\">type</span><span style=\"color:#B392F0\"> Line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  a</span><span style=\"color:#F97583\">:</span><span style=\"color:#B392F0\"> Point</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  b</span><span style=\"color:#F97583\">:</span><span style=\"color:#B392F0\"> Point</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>For example:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// Line from 0,0 to 200,200</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  a: {x: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,   y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\"> },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  b: {x: </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\"> }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"initialising\">Initialising</h2>\n<p>Lines can be defined with both <code>a</code> and <code>b</code> fields as shown above. Alternatively, functions can initialise a line for you:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// fromFlatArray([x1,y1,x2,y])</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> a</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromFlatArray</span><span style=\"color:#E1E4E8\">([</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// fromNumbers(x1,y1,x2,y2)</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> b</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// fromPoints(a:Point, a:Point)</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> c</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromPoints</span><span style=\"color:#E1E4E8\">({ x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\"> }, { x:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"interpolation\">Interpolation</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html\"><code>interpolate</code></a> allows you to calculate a point between the <em>a</em> and <em>b</em> points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/geometry.js'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Get { x, y } at 50% along line</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">interpolate</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0.5</span><span style=\"color:#E1E4E8\">, line);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Get {x,y} at 80% between point A and B</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">interpolate</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0.8</span><span style=\"color:#E1E4E8\">, { x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\"> }, { x:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"angles\">Angles</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Slope\">Slope (gradient)</a> of line with <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope\"><code>slope</code></a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines, degreeToRadian } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Create line 0,0 -> 200,200</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Returns number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">slope</span><span style=\"color:#E1E4E8\">(line);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">slope</span><span style=\"color:#E1E4E8\">({x:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">}, {x:</span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">}); </span><span style=\"color:#6A737D\">// Provide two points intead</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Angle in radians of line to a point</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Returns angle of line, in radians</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">angleRadian</span><span style=\"color:#E1E4E8\">(line);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Return a rotated line with <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate\"><code>rotate</code></a>.</p>\n<demo-element title=\"Point math\" src=\"/geometry/line-math/\">\n<h2 id=\"length--distances\">Length &#x26; distances</h2>\n<p>Length of the line can be calculated with <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length\"><code>length</code></a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> length</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">length</span><span style=\"color:#E1E4E8\">(line); </span><span style=\"color:#6A737D\">// Returns number</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Relation of line to a point: <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance\"><code>distance</code></a> and <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest\"><code>nearest</code></a></p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Closest distance of point to anywhere on a line</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// returns number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">distance</span><span style=\"color:#E1E4E8\">(line, {x:</span><span style=\"color:#79B8FF\">150</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Get the closest position on a line to some other point</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// returns {x,y}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">nearest</span><span style=\"color:#E1E4E8\">(line, {x:</span><span style=\"color:#79B8FF\">150</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Is a point within range of line?</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// True if 150,150 is within 100 distance of line</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">withinRange</span><span style=\"color:#E1E4E8\">(line, {x:</span><span style=\"color:#79B8FF\">150</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">150</span><span style=\"color:#E1E4E8\">}, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html\"><code>midpoint</code></a></li>\n</ul>\n<h2 id=\"areas\">Areas</h2>\n<p>Calculates a rectangle that encompasses line.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Returns Rectangle { x, y, width, height }</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  a: { x: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,   y: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">   },</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  b: { x: </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\"> }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rect</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">bbox</span><span style=\"color:#E1E4E8\">(line);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"transforming\">Transforming</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html\"><code>rotate</code></a> can, well, rotate a line.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/geometry.js'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Rotate line by 0.1 radians around point 10,10</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">rotate</span><span style=\"color:#E1E4E8\">(line, </span><span style=\"color:#79B8FF\">0.1</span><span style=\"color:#E1E4E8\">, {x:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Rotate line by 5 degrees around its center</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">rotate</span><span style=\"color:#E1E4E8\">(line, </span><span style=\"color:#B392F0\">degreeToRadian</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Rotate line by 5 degrees at 80% of the length of the line</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">rotate</span><span style=\"color:#E1E4E8\">(line, </span><span style=\"color:#B392F0\">degreeToRadian</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">), Lines.</span><span style=\"color:#B392F0\">interpolate</span><span style=\"color:#E1E4E8\">(line, </span><span style=\"color:#79B8FF\">0.8</span><span style=\"color:#E1E4E8\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Rotate line by 5 degrees by its end point</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">rotate</span><span style=\"color:#E1E4E8\">(line, </span><span style=\"color:#B392F0\">degreeToRadian</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">), line.b);</span></span>\n<span class=\"line\"></span></code></pre>\n<demo-element title=\"Point math\" src=\"/geometry/line-rotation/\">\n<p>Extend the length of the line from its start position:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// Lines.extendFromA(line:Line, distance:number): Line</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Returns a new Line, ie { a:{x,y}, b:{x,y} }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">extendFromA</span><span style=\"color:#E1E4E8\">(line, </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html\"><code>extendFromA</code></a>: Extends a line from its start</li>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html\"><code>parallel</code></a>: Returns a line parallel to an input line at some distance</li>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html\"><code>scaleFromMidpoint</code></a>: Scales a line from its midpoint</li>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html\"><code>perpendicularPoint</code></a>: Returns a point perpendicular to a line at a specified distance</li>\n</ul>\n<h2 id=\"conversions\">Conversions</h2>\n<p>Converting <em>from</em> some other shape. These all return a Line (ie. <code>{a:{x,y}, b:{x,y}}</code>)</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Returns Line {a:{x,y}, b:}</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">fromPoints</span><span style=\"color:#E1E4E8\">({x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">}, {x:</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Convert from an array</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// ie. [x1,y1,x2,y2]</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">fromArray</span><span style=\"color:#E1E4E8\">([</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Convert from positions</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// ie. x1,y1,x2,y2</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Converting <em>to</em> some other data shape</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// Yields [a.x,a.y,b.x,b.y]</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">toFlatArray</span><span style=\"color:#E1E4E8\">(line.a, line.b);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Human-friendly string representation</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">toString</span><span style=\"color:#E1E4E8\">(line);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"normalise\">Normalise</h2>\n<p>Lines can be normalised with <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html\"><code>normaliseByRect</code></a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/geometry.js'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Line 1,1 -> 10,10</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> l</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> ll</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">normaliseByRect</span><span style=\"color:#E1E4E8\">(l, </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields: 0.1,0.1 -> 1,1</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"random\">Random</h2>\n<p>To create a random line, leverage <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Points.random.html\"><code>Points.random</code></a></p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  a: Points.</span><span style=\"color:#B392F0\">random</span><span style=\"color:#E1E4E8\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  b: Points.</span><span style=\"color:#B392F0\">random</span><span style=\"color:#E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"applying-functions\">Applying functions</h2>\n<p>Apply a function to start and end points of line:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/geometry.js'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// A function that applies randomisation to x &#x26; y</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#B392F0\"> r</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> (</span><span style=\"color:#FFAB70\">p</span><span style=\"color:#E1E4E8\">) </span><span style=\"color:#F97583\">=></span><span style=\"color:#E1E4E8\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  x: p.x </span><span style=\"color:#F97583\">*</span><span style=\"color:#E1E4E8\"> Math.</span><span style=\"color:#B392F0\">random</span><span style=\"color:#E1E4E8\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  y: p.y </span><span style=\"color:#F97583\">*</span><span style=\"color:#E1E4E8\"> Math.</span><span style=\"color:#B392F0\">random</span><span style=\"color:#E1E4E8\">()</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Apply function to both start and end, returning result</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> l</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">apply</span><span style=\"color:#E1E4E8\">(line, r);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"math-operations\">Math operations</h2>\n<p>Lines has a few basic math functions: <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html\"><code>multiply</code></a>, <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html\"><code>sum</code></a>, <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html\"><code>subtract</code></a></p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Line 1,1 -> 10,10</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">,</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Multiply both start and end points by given _x_ &#x26; _y_:</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> lA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">multiply</span><span style=\"color:#E1E4E8\">(line, { x:</span><span style=\"color:#79B8FF\">2</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">3</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields: 2,20 -> 3,30</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> lB</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">sum</span><span style=\"color:#E1E4E8\">(line, { x:</span><span style=\"color:#79B8FF\">2</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">3</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields: 3,4 -> 12,13</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> lC</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Lines.</span><span style=\"color:#B392F0\">subtract</span><span style=\"color:#E1E4E8\">(line, { x:</span><span style=\"color:#79B8FF\">2</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">3</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields: -1,-2 -> 8,7</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"comparisons\">Comparisons</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html\"><code>isEqual</code></a> compares the lines by value. If two lines have the same set of start and end points, it returns <em>true</em>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Lines } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/geometry.js'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> a</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { a: {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,  y: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\"> }, b: { x: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\"> }};</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> b</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { a: {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,  y: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\"> }, b: { x: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\"> }};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">a </span><span style=\"color:#F97583\">===</span><span style=\"color:#E1E4E8\"> b; </span><span style=\"color:#6A737D\">// false, because they are different objects</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Lines.</span><span style=\"color:#B392F0\">isEqual</span><span style=\"color:#E1E4E8\">(a, b); </span><span style=\"color:#6A737D\">// true, because they have the same value</span></span>\n<span class=\"line\"></span></code></pre></demo-element></demo-element>";

				const frontmatter = {"title":"Line","layout":"../../../layouts/MainLayout.astro","setup":"import { DemoElement } from '../../../components/DemoElement.ts';\n"};
				const file = "/Users/af4766/repos/ixfx-docs/src/pages/types/geometry/line.md";
				const url = "/types/geometry/line";
				function rawContent() {
					return "\n<script type=\"module\" hoist>\nimport '/src/components/ReplPad';\n</script>\n\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Lines.html\">Geometry.Lines module</a></li>\n</div>\n\nA line is defined by two [Points](../point/)\n\n```typescript\ntype Line = {\n  a: Point,\n  b: Point\n}\n```\n\nFor example:\n```js\n// Line from 0,0 to 200,200\nconst line = {\n  a: {x: 0,   y:0 },\n  b: {x: 200, y:200 }\n}\n```\n\n## Initialising\n\nLines can be defined with both `a` and `b` fields as shown above. Alternatively, functions can initialise a line for you:\n\n```js\n// repl-pad#1\nimport { Lines } from \"https://unpkg.com/ixfx/dist/geometry.js\"\n\n// fromFlatArray([x1,y1,x2,y])\nconst a = Lines.fromFlatArray([0, 0, 200, 200]);\n\n// fromNumbers(x1,y1,x2,y2)\nconst b = Lines.fromNumbers(0, 0, 200, 200);\n\n// fromPoints(a:Point, a:Point)\nconst c = Lines.fromPoints({ x:0, y:0 }, { x:200, y:200 });\n```\n\n## Interpolation\n\n[`interpolate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html) allows you to calculate a point between the _a_ and _b_ points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.\n\n```js\n// repl-pad\nimport { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n\nconst line = Lines.fromNumbers(0, 0, 200, 200);\n\n// Get { x, y } at 50% along line\nLines.interpolate(0.5, line);\n\n// Get {x,y} at 80% between point A and B\nLines.interpolate(0.8, { x:0, y:0 }, { x:200, y:200 });\n```\n\n## Angles\n\n[Slope (gradient)](https://en.wikipedia.org/wiki/Slope) of line with [`slope`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope).\n\n```js\n// repl-pad#3\nimport { Lines, degreeToRadian } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n\n// Create line 0,0 -> 200,200\nconst line = Lines.fromNumbers(0,0,200,200);\n\n// Returns number\nLines.slope(line);\nLines.slope({x:10,y:10}, {x:20,y:20}); // Provide two points intead\n```\n\nAngle in radians of line to a point\n\n```js\n// repl-pad#3\n// Returns angle of line, in radians\nLines.angleRadian(line);\n```\n\nReturn a rotated line with [`rotate`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate).\n\n<demo-element title=\"Point math\" src=\"/geometry/line-math/\" />\n\n## Length & distances\n\nLength of the line can be calculated with [`length`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length).\n\n```js\n// repl-pad#2\nimport { Lines } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst line = Lines.fromNumbers(0,0,200,200);\nconst length = Lines.length(line); // Returns number\n```\n\nRelation of line to a point: [`distance`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance) and [`nearest`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest)\n\n```js\n// repl-pad#2\n// Closest distance of point to anywhere on a line\n// returns number\nLines.distance(line, {x:150, y:200});\n\n// Get the closest position on a line to some other point\n// returns {x,y}\nLines.nearest(line, {x:150, y:200});\n```\n\nIs a point within range of line?\n\n```js\n// repl-pad#2\n// True if 150,150 is within 100 distance of line\nLines.withinRange(line, {x:150,y:150}, 100);\n```\n\nSee also:\n* [`midpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html)\n\n## Areas\n\nCalculates a rectangle that encompasses line.\n\n```js\n// repl-pad\nimport { Lines } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n\n// Returns Rectangle { x, y, width, height }\nconst line = {\n  a: { x: 0,   y: 0   },\n  b: { x: 200, y: 200 }\n}\nconst rect = Lines.bbox(line);\n```\n\n## Transforming\n\n[`rotate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html) can, well, rotate a line.\n\n```js\n// repl-pad\nimport { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// Rotate line by 0.1 radians around point 10,10\nLines.rotate(line, 0.1, {x:10, y:10});\n\n// Rotate line by 5 degrees around its center\nLines.rotate(line, degreeToRadian(5));\n\n// Rotate line by 5 degrees at 80% of the length of the line\nLines.rotate(line, degreeToRadian(5), Lines.interpolate(line, 0.8));\n\n// Rotate line by 5 degrees by its end point\nLines.rotate(line, degreeToRadian(5), line.b);\n```\n\n<demo-element title=\"Point math\" src=\"/geometry/line-rotation/\" />\n\nExtend the length of the line from its start position:\n\n```js\n// Lines.extendFromA(line:Line, distance:number): Line\n// Returns a new Line, ie { a:{x,y}, b:{x,y} }\nLines.extendFromA(line, 20);\n```\n\nSee also:\n* [`extendFromA`](https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html): Extends a line from its start\n* [`parallel`](https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html): Returns a line parallel to an input line at some distance\n* [`scaleFromMidpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html): Scales a line from its midpoint\n* [`perpendicularPoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html): Returns a point perpendicular to a line at a specified distance\n\n\n## Conversions\n\nConverting _from_ some other shape. These all return a Line (ie. `{a:{x,y}, b:{x,y}}`)\n\n```js\n// repl-pad\nimport { Lines } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n\n// Returns Line {a:{x,y}, b:}\nLines.fromPoints({x:0,y:0}, {x:100,y:100});\n\n// Convert from an array\n// ie. [x1,y1,x2,y2]\nLines.fromArray([0,0,100,100]);\n\n// Convert from positions\n// ie. x1,y1,x2,y2\nLines.fromNumbers(0,0,100,100);\n```\n\nConverting _to_ some other data shape\n\n```js\n// Yields [a.x,a.y,b.x,b.y]\nLines.toFlatArray(line.a, line.b);\n\n// Human-friendly string representation\nLines.toString(line);\n```\n\n\n## Normalise\n\nLines can be normalised with [`normaliseByRect`](https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html).\n\n```js\n// repl-pad\nimport { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n\n// Line 1,1 -> 10,10\nconst l = Lines.fromNumbers(1, 1, 10, 10);\nconst ll = Lines.normaliseByRect(l, 10, 10);\n// Yields: 0.1,0.1 -> 1,1\n```\n\n## Random\n\nTo create a random line, leverage [`Points.random`](https://clinth.github.io/ixfx/functions/Geometry.Points.random.html)\n\n```js\nconst line = {\n  a: Points.random(),\n  b: Points.random()\n}\n```\n\n## Applying functions\n\nApply a function to start and end points of line:\n\n```js\n// repl-pad\nimport { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// A function that applies randomisation to x & y\nconst r = (p) => ({\n  x: p.x * Math.random(),\n  y: p.y * Math.random()\n});\n\n// Apply function to both start and end, returning result\nconst l = Lines.apply(line, r);\n```\n\n## Math operations\n\nLines has a few basic math functions: [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html), [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html), [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html)\n\n```js\n// repl-pad\nimport { Lines } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n\n// Line 1,1 -> 10,10\nconst line = Lines.fromNumbers(1,1,10,10);\n\n// Multiply both start and end points by given _x_ & _y_:\nconst lA = Lines.multiply(line, { x:2, y:3 });\n// Yields: 2,20 -> 3,30\n\nconst lB = Lines.sum(line, { x:2, y:3 });\n// Yields: 3,4 -> 12,13\n\nconst lC = Lines.subtract(line, { x:2, y:3 });\n// Yields: -1,-2 -> 8,7\n```\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html) compares the lines by value. If two lines have the same set of start and end points, it returns _true_.\n\n```js\n// repl-pad\nimport { Lines } from 'https://unpkg.com/ixfx/dist/geometry.js'\n\nconst a = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\nconst b = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\n\na === b; // false, because they are different objects\n\nLines.isEqual(a, b); // true, because they have the same value\n```\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"initialising","text":"Initialising"},{"depth":2,"slug":"interpolation","text":"Interpolation"},{"depth":2,"slug":"angles","text":"Angles"},{"depth":2,"slug":"length--distances","text":"Length & distances"},{"depth":2,"slug":"areas","text":"Areas"},{"depth":2,"slug":"transforming","text":"Transforming"},{"depth":2,"slug":"conversions","text":"Conversions"},{"depth":2,"slug":"normalise","text":"Normalise"},{"depth":2,"slug":"random","text":"Random"},{"depth":2,"slug":"applying-functions","text":"Applying functions"},{"depth":2,"slug":"math-operations","text":"Math operations"},{"depth":2,"slug":"comparisons","text":"Comparisons"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$MainLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html)}`
							})}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
