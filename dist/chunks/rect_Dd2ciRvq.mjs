import { c as createComponent, r as renderTemplate, a as renderComponent, u as unescapeHTML } from './astro/server__cawITtY.mjs';
import 'kleur/colors';
import { $ as $$MainLayout } from './MainLayout_BFrOPY-O.mjs';

const html = "<script type=\"module\" hoist=\"\">\n  import '/src/components/ReplPad';\n</script>\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Rects.html\">Geometry.Rects module</a></li>\n</ul></div>\n<p>Rectangles are defined as having a width and height.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\"><code><span class=\"line\"><span style=\"color:#F97583\">type</span><span style=\"color:#B392F0\"> Rect</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  width</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  height</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Rectangles are <em>positioned</em> if they also have <em>x</em> and <em>y</em> fields. The coordinate designates the top-left corner of the rectangle.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\"><code><span class=\"line\"><span style=\"color:#F97583\">type</span><span style=\"color:#B392F0\"> RectPositioned</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  width</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  height</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  x</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  y</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"initialising\">Initialising</h2>\n<p>Rectangles can be created simply as a plain object:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// Un-positioned rectangle of width &#x26; height</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rectA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { width: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Positioned rectangle with top-left at 10,10</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rectB</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { width: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"></span></code></pre>\n<p>There are also several helper functions to base the rectangle on some shape you already have.</p>\n<p>From a center point with <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter\"><code>fromCenter</code></a></p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Rects } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Create a rect with a center at 10,0</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// a width of 100, height 200</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> r1</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Rects.</span><span style=\"color:#B392F0\">fromCenter</span><span style=\"color:#E1E4E8\">({x: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">}, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>From the size of an element with <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement\"><code>fromElement</code></a>:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Rects.fromElement(el:HTMLElement):Rect</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> r2</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Rects.</span><span style=\"color:#B392F0\">fromElement</span><span style=\"color:#E1E4E8\">(document.</span><span style=\"color:#B392F0\">querySelector</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">`body`</span><span style=\"color:#E1E4E8\">));</span></span>\n<span class=\"line\"></span></code></pre>\n<p>From its top-left corner with <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft\"><code>fromTopLeft</code></a>:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// fromTopLeft(origin: Point, width: number, height: number): RectPositioned</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Create a rect with top-left corner at 10,0</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// a width of 100 and height of 200</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> r3</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Rects.</span><span style=\"color:#B392F0\">fromTopLeft</span><span style=\"color:#E1E4E8\">({x:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">}, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Initialises a rectangle that can encompass all the provided points:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Points } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> r</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Points.</span><span style=\"color:#B392F0\">bbox</span><span style=\"color:#E1E4E8\">({x:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">}, {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html\"><code>fromNumbers</code></a> allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width &#x26; height. If four numbers are given, the first two are considered the top-left corner coordinate.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// width: 100, height: 200</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// top-left: 50,20 width: 100, height: 200</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">fromNumbers</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"area\">Area</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html\"><code>area</code></a> computes the area of a rectangle</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Rects } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rect</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, width: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields a number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">area</span><span style=\"color:#E1E4E8\">(rect);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Compute the center <a href=\"../point/\">Point</a> of a rectangle with <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html\"><code>center</code></a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// yields {x,y}</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> pt</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Rects.</span><span style=\"color:#B392F0\">center</span><span style=\"color:#E1E4E8\">(rect);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"relations\">Relations</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html\"><code>distanceFromCenter</code></a> returns the distance of a point (or any positioned thing) to the center of a rectangle. <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html\"><code>distanceFromExterior</code></a> is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Rects } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rect</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, width: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">distanceFromCenter</span><span style=\"color:#E1E4E8\">(rect, { x: </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">distanceFromExterior</span><span style=\"color:#E1E4E8\">(rect, {x : </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\"> });</span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html\"><code>intersectsPoint</code></a> returns <em>true</em> if a point is within, or on the boundary of a rectangle.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Rects } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rect</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, width: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">intersectsPoint</span><span style=\"color:#E1E4E8\">(rect, {x: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\"> }); </span><span style=\"color:#6A737D\">// true</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">intersectsPoint</span><span style=\"color:#E1E4E8\">(rect, {x: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">}); </span><span style=\"color:#6A737D\">// true</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"conversions\">Conversions</h2>\n<h2 id=\"corners-and-edges\">Corners and edges</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html\"><code>corners</code></a> returns a set of four <a href=\"../point/\">Points</a> for each corner: top-left, top-right, bottom-right, bottom-left.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Rects } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rect</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {x:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y:</span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, width: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> pts</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Rects.</span><span style=\"color:#B392F0\">corners</span><span style=\"color:#E1E4E8\">(rect);</span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html\"><code>edges</code></a> returns four <a href=\"../line/\">Lines</a> - top, right, bottom, left.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">edges</span><span style=\"color:#E1E4E8\">(rect);</span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html\"><code>lengths</code></a> returns the lengths of each edge (top, right, bottom, left).</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">lengths</span><span style=\"color:#E1E4E8\">(rect);</span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html\"><code>getEdgeX</code></a> and <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html\"><code>getEdgeY</code></a> return the <em>x</em> or <em>y</em> coordinate of an edge. Signal which edge with a string: right, bottom, left or top.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// x-coordinate of the right edge</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">getEdgeX</span><span style=\"color:#E1E4E8\">(rect, </span><span style=\"color:#9ECBFF\">`right`</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// y-coordinate of the top edge</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">getEdgeY</span><span style=\"color:#E1E4E8\">(rect, </span><span style=\"color:#9ECBFF\">`top`</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"math-operations\">Math operations</h2>\n<ul>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html\"><code>subtract</code></a>: minus rectangle width/height</li>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html\"><code>sum</code></a>: adds rectangle width/height</li>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html\"><code>multiply</code></a></li>\n</ul>\n<p>Note all the math operations return a new rectangle, the inputs are not modified.</p>\n<h2 id=\"comparisons\">Comparisons</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html\"><code>isEqual</code></a> returns <em>true</em> if the rectangle properties are the same. <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html\"><code>isEqualSize</code></a> ignores the position of the rectangles and compares based on width and height.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Rects } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rectA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { width: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> rectB</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { width: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, height: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">isEqualSize</span><span style=\"color:#E1E4E8\">(rectA, rectB); </span><span style=\"color:#6A737D\">// true</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Rects.</span><span style=\"color:#B392F0\">isEqual</span><span style=\"color:#E1E4E8\">(rectA, rectB); </span><span style=\"color:#6A737D\">// false</span></span>\n<span class=\"line\"></span></code></pre>";

				const frontmatter = {"title":"Rectangle","layout":"../../../layouts/MainLayout.astro"};
				const file = "/Users/af4766/repos/ixfx-docs/src/pages/types/geometry/rect.md";
				const url = "/types/geometry/rect";
				function rawContent() {
					return "\n<script type=\"module\" hoist>\n  import '/src/components/ReplPad';\n</script>\n\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Rects.html\">Geometry.Rects module</a></li>\n</div>\n\nRectangles are defined as having a width and height.\n\n```typescript\ntype Rect = {\n  width: number\n  height: number\n}\n```\n\nRectangles are _positioned_ if they also have _x_ and _y_ fields. The coordinate designates the top-left corner of the rectangle.\n\n```typescript\ntype RectPositioned = {\n  width: number\n  height: number\n  x: number\n  y: number\n}\n```\n\n## Initialising\n\nRectangles can be created simply as a plain object:\n\n```js\n// Un-positioned rectangle of width & height\nconst rectA = { width: 50, height: 10 };\n\n// Positioned rectangle with top-left at 10,10\nconst rectB = { width: 100, height: 50, x: 10, y: 10 };\n```\n\nThere are also several helper functions to base the rectangle on some shape you already have.\n\nFrom a center point with [`fromCenter`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter)\n\n```js\n// repl-pad#1\nimport { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\"\n\n// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;\n\n// Create a rect with a center at 10,0\n// a width of 100, height 200\nconst r1 = Rects.fromCenter({x: 10, y: 0}, 100, 200);\n```\n\nFrom the size of an element with [`fromElement`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement):\n\n```js\n// repl-pad#1\n// Rects.fromElement(el:HTMLElement):Rect\nconst r2 = Rects.fromElement(document.querySelector(`body`));\n```\n\nFrom its top-left corner with [`fromTopLeft`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft):\n\n```js\n// repl-pad#1\n// fromTopLeft(origin: Point, width: number, height: number): RectPositioned\n\n// Create a rect with top-left corner at 10,0\n// a width of 100 and height of 200\nconst r3 = Rects.fromTopLeft({x:10,y:0}, 100, 200);\n```\n\nInitialises a rectangle that can encompass all the provided points:\n\n```js\n// repl-pad\nimport { Points } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst r = Points.bbox({x:10, y:10}, {x:0,y:0});\n```\n\n[`fromNumbers`](https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html) allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width & height. If four numbers are given, the first two are considered the top-left corner coordinate.\n\n```js\n// repl-pad#1\n// width: 100, height: 200\nRects.fromNumbers(100, 200);\n// top-left: 50,20 width: 100, height: 200\nRects.fromNumbers(50, 20, 100, 200);\n```\n\n## Area\n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html) computes the area of a rectangle\n\n```js\n// repl-pad#2\nimport { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\n// Yields a number\nRects.area(rect);\n```\n\nCompute the center [Point](../point/) of a rectangle with [`center`](https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html).\n\n```js\n// repl-pad#2\n// yields {x,y}\nconst pt = Rects.center(rect);\n```\n\n## Relations\n\n[`distanceFromCenter`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html) returns the distance of a point (or any positioned thing) to the center of a rectangle. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html) is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.\n\n```js\n// repl-pad\nimport { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nRects.distanceFromCenter(rect, { x: 90, y: 200 });\nRects.distanceFromExterior(rect, {x : 90, y: 200 });\n```\n\n[`intersectsPoint`](https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html) returns _true_ if a point is within, or on the boundary of a rectangle.\n\n```js\n// repl-pad\nimport { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst rect = {x:0, y:0, width: 100, height: 100};\nRects.intersectsPoint(rect, {x: 0, y: 0 }); // true\nRects.intersectsPoint(rect, {x: 50, y: 50}); // true\n```\n\n## Conversions\n\n\n## Corners and edges\n\n[`corners`](https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html) returns a set of four [Points](../point/) for each corner: top-left, top-right, bottom-right, bottom-left.\n\n```js\n// repl-pad#3\nimport { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nconst pts = Rects.corners(rect);\n```\n\n[`edges`](https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html) returns four [Lines](../line/) - top, right, bottom, left.\n\n```js\n// repl-pad#3\nRects.edges(rect);\n```\n\n[`lengths`](https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html) returns the lengths of each edge (top, right, bottom, left).\n\n```js\n// repl-pad#3\nRects.lengths(rect);\n```\n\n[`getEdgeX`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html) and [`getEdgeY`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html) return the _x_ or _y_ coordinate of an edge. Signal which edge with a string: right, bottom, left or top.\n\n```js\n// repl-pad#3\n// x-coordinate of the right edge\nRects.getEdgeX(rect, `right`);\n\n// y-coordinate of the top edge\nRects.getEdgeY(rect, `top`);\n```\n\n## Math operations\n\n* [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html): minus rectangle width/height\n* [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html): adds rectangle width/height\n* [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html)\n\nNote all the math operations return a new rectangle, the inputs are not modified.\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html) returns _true_ if the rectangle properties are the same. [`isEqualSize`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html) ignores the position of the rectangles and compares based on width and height.\n\n```js\n// repl-pad\nimport { Rects } from \"https://unpkg.com/ixfx/dist/geometry.js\";\n\nconst rectA = { width: 10, height: 10, x: 10, y: 10 };\nconst rectB = { width: 10, height: 10, x: 20, y: 20 };\n\nRects.isEqualSize(rectA, rectB); // true\nRects.isEqual(rectA, rectB); // false\n```";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"initialising","text":"Initialising"},{"depth":2,"slug":"area","text":"Area"},{"depth":2,"slug":"relations","text":"Relations"},{"depth":2,"slug":"conversions","text":"Conversions"},{"depth":2,"slug":"corners-and-edges","text":"Corners and edges"},{"depth":2,"slug":"math-operations","text":"Math operations"},{"depth":2,"slug":"comparisons","text":"Comparisons"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$MainLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html)}`
							})}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
