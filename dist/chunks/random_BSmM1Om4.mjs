import { c as createComponent, r as renderTemplate, a as renderComponent, u as unescapeHTML } from './astro/server__cawITtY.mjs';
import 'kleur/colors';
import { $ as $$MainLayout } from './MainLayout_BFrOPY-O.mjs';

const html = "<script type=\"module\" hoist=\"\">\n  import '/src/components/ReplPad';\n  import '/src/loader';\n  import '/src/components/DensityPlotElement';\n  import {weightedInteger, weighted, gaussian} from '/node_modules/ixfx/dist/random.js';\n  import {Easings} from '/node_modules/ixfx/dist/modulation.js';\n  window.weightedInteger = weightedInteger;\n  window.weighted = weighted;\n  window.Easings = Easings;\n  window.gaussian = gaussian;\n  importEl(\n    `plot1`, \n    `density-plot-element`, {\n      fn: \"Math.random()\"\n  });\n  importEl(\n    `plot2`, \n    `density-plot-element`, {\n      fn: \"weighted('quadIn')\",\n      editable: true\n  });\n  importEl(\n    `plot-gaussian`, \n    `density-plot-element`, {\n      fn: \"gaussian()\",\n      editable: true\n  });\n</script>\n<div class=\"tip\">\n<ul>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Random.html\">Random module</a></li>\n<li><a href=\"https://fn-vis.pages.dev/1/#H4sIAARX3mQAAzWMQQ6CMBAAv7LhQpsYileN3jn4AjGhsaVU7bZ2FyUh/F1NZE5zmTkXPqSYGWZ4W+8GtgYW6HMMUA7MiXZKjZjurrrGoPzUT8p4YpU1mhiqG5X7Fslyg2zzSz+EkIcjzC0CpEh8skTaWbG+RfcctWmwk/LbLZttXf8E/hSXD2v+IIiQAAAA\">fn-vis</a>: useful for seeing output values</li>\n</ul>\n</div>\n<p>Javascript’s go-to source of randomness is <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\"><code>Math.random()</code></a> which returns a random number equal or above 0 and less than 1. This is perfect for uniform distribution on a percentage scale.</p>\n<p>We sometimes want the values on a different scale. Ixfx has a few helper functions for this common need:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { integer, float } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">integer</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// Random integer value 0..&#x3C;10</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">float</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// Random floating point number 0..&#x3C;100 </span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"weighted-distributions\">Weighted distributions</h2>\n<p>Another issue with <code>Math.random</code> is it’s roughly even distribution. You can see this below, the horizontal axis shows values from 0 on the left to 1 on the right. Note how the plot mostly fills out evenly along the horizontal axis.</p>\n<!-- \n<density-plot-element id=\"plot1\" view=\"linear\" client:visible fn=\"weightedInteger(10);\" /> -->\n<div id=\"plot1\"></div>\n<div class=\"tip\">\n<a href=\"https://fn-vis.pages.dev/1/#H4sIAARX3mQAAzWMQQ6CMBAAv7LhQpsYileN3jn4AjGhsaVU7bZ2FyUh/F1NZE5zmTkXPqSYGWZ4W+8GtgYW6HMMUA7MiXZKjZjurrrGoPzUT8p4YpU1mhiqG5X7Fslyg2zzSz+EkIcjzC0CpEh8skTaWbG+RfcctWmwk/LbLZttXf8E/hSXD2v+IIiQAAAA\">Try out some of these examples in the plotter</a>\n</div><p></p>\n<p>To make some numbers more likely than others, you may want some form of <em>weighted distribution</em>.</p>\n<p>ixfx’s <a href=\"https://clinth.github.io/ixfx/modules/Random.html#weighted\"><code>Random.weighted</code></a> uses an <a href=\"../../modulation/easing/\">easing function</a> to shape random numbers.</p>\n<p>When using the <em>quadIn</em> easing (the default), note how the density of random values skews toward 0, visually shown as the left-most part of the bar.</p>\n<div id=\"plot2\"></div>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { weighted } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields 0-1 (inclusive) random number</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">weighted</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">`quadIn`</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">weighted</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#9ECBFF\">`quadOut`</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Random integers (ie. whole numbers) can be produced with <a href=\"https://clinth.github.io/ixfx/modules/Random.html#weightedInteger\"><code>Random.weightedInteger</code></a>. This is useful for producing random array indexes.</p>\n<p>A range is provided to the function, with the return value always below the maximum (ie, it is <em>exclusive</em>). The minimum, 0 by default, might be returned (ie, it is <em>inclusive</em>).</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { weightedInteger } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">weightedInteger</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">);      </span><span style=\"color:#6A737D\">// 0-9</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">weightedInteger</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">);  </span><span style=\"color:#6A737D\">// 10-19</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">weightedInteger</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">`quadIn`</span><span style=\"color:#E1E4E8\">);       </span><span style=\"color:#6A737D\">// 0-99, specifying the easing function</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">weightedInteger</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">200</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">`quadOut`</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// 100-199, specifying the easing function</span></span>\n<span class=\"line\"></span></code></pre>\n<p>To use for accessing an array randomly:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> list</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> [</span><span style=\"color:#9ECBFF\">`mango`</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">`kiwi`</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">`grape`</span><span style=\"color:#E1E4E8\">];</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields random item from list</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">list[</span><span style=\"color:#B392F0\">weightedInteger</span><span style=\"color:#E1E4E8\">(list.</span><span style=\"color:#79B8FF\">length</span><span style=\"color:#E1E4E8\">)];</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"gaussian\">Gaussian</h3>\n<div class=\"tip\">\n<a href=\"https://fn-vis.pages.dev/1/#H4sIAPRW3mQAA1WPzQrCMBCEX2XZiy1Eo9eK3j34BLaHYNMabX7obqUQ8u6mooJ72hm+GZhLROtbjRWGwTMmEdEp+9MCjTNs1IBVTGJBCaucaTVxZtaYGvEWi91kwtjgR4YIvZqIjHKQoBu9hdWNOVAl5eTCo99cvZVm7mbZGmI5Ktd6u7nTal870nxyrMenGoqiPBwh1g4geOKzJlK9Lr7dRVlmPonddrs88DnMI/5GNS8ZCjbg5gAAAA==\">Try out some of these examples in the plotter</a>\n</div><p></p>\n<p>Gaussian distribution has a ‘bell curve’ shape, centred around the middle. In other words, you’d expect to get more random values around 0.5 than 0 or 1. ixfx’s <a href=\"https://clinth.github.io/ixfx/modules/Random.html#gaussian\"><code>Random.gaussian</code></a> provides this.</p>\n<div id=\"plot-gaussian\"></div>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { gaussian } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields a random number between 0..1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">gaussian</span><span style=\"color:#E1E4E8\">();</span></span>\n<span class=\"line\"></span></code></pre>\n<p>The function takes a <em>skew</em> parameter which shifts the centre of the curve.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Shifts distribution to right, closer to 1</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">gaussian</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0.1</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Shifts distribution to the left, closer to 0</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">gaussian</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">6</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<h3 id=\"more-random\">More random</h3>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { minutesMs, secondsMs } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// minutesMs and secondsMs compute random millisecond values</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">minutesMs</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// Random timeout of up to 5 minutes</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">secondsMs</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// Random timeout of up to 5 seconds</span></span>\n<span class=\"line\"></span></code></pre>\n<p>With arrays</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { arrayElement, arrayIndex, integerUniqueGen } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> v</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> [</span><span style=\"color:#9ECBFF\">`blue`</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">`red`</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#9ECBFF\">`orange`</span><span style=\"color:#E1E4E8\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">arrayElement</span><span style=\"color:#E1E4E8\">(v); </span><span style=\"color:#6A737D\">// Returns a random value</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">arrayIndex</span><span style=\"color:#E1E4E8\">(v); </span><span style=\"color:#6A737D\">// Random array index</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Produce unique set of random integers 0..&#x3C;10</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> values</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> [</span><span style=\"color:#F97583\">...</span><span style=\"color:#B392F0\">integerUniqueGen</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">)];</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Other values:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { hue, string } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> 'https://unpkg.com/ixfx/dist/random.js'</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B392F0\">hue</span><span style=\"color:#E1E4E8\">(); </span><span style=\"color:#6A737D\">// Compute random hue value 0...359</span></span>\n<span class=\"line\"><span style=\"color:#B392F0\">string</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// Random string 10 letters long</span></span>\n<span class=\"line\"></span></code></pre>";

				const frontmatter = {"title":"Random","layout":"../../layouts/MainLayout.astro","setup":"import DensityPlotElement from '../../components/DensityPlotElement';\n"};
				const file = "/Users/af4766/repos/ixfx-docs/src/pages/gen/random.md";
				const url = "/gen/random";
				function rawContent() {
					return "\n<script type=\"module\" hoist>\n  import '/src/components/ReplPad';\n  import '/src/loader';\n  import '/src/components/DensityPlotElement';\n  import {weightedInteger, weighted, gaussian} from '/node_modules/ixfx/dist/random.js';\n  import {Easings} from '/node_modules/ixfx/dist/modulation.js';\n  window.weightedInteger = weightedInteger;\n  window.weighted = weighted;\n  window.Easings = Easings;\n  window.gaussian = gaussian;\n  importEl(\n    `plot1`, \n    `density-plot-element`, {\n      fn: \"Math.random()\"\n  });\n  importEl(\n    `plot2`, \n    `density-plot-element`, {\n      fn: \"weighted('quadIn')\",\n      editable: true\n  });\n  importEl(\n    `plot-gaussian`, \n    `density-plot-element`, {\n      fn: \"gaussian()\",\n      editable: true\n  });\n</script>\n\n<div class=\"tip\">\n<ul>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Random.html\">Random module</a></li>\n<li><a href=\"https://fn-vis.pages.dev/1/#H4sIAARX3mQAAzWMQQ6CMBAAv7LhQpsYileN3jn4AjGhsaVU7bZ2FyUh/F1NZE5zmTkXPqSYGWZ4W+8GtgYW6HMMUA7MiXZKjZjurrrGoPzUT8p4YpU1mhiqG5X7Fslyg2zzSz+EkIcjzC0CpEh8skTaWbG+RfcctWmwk/LbLZttXf8E/hSXD2v+IIiQAAAA\">fn-vis</a>: useful for seeing output values</li>\n</ul>\n</div>\n\nJavascript's go-to source of randomness is [`Math.random()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random) which returns a random number equal or above 0 and less than 1. This is perfect for uniform distribution on a percentage scale.\n\nWe sometimes want the values on a different scale. Ixfx has a few helper functions for this common need:\n```js\n// repl-pad\nimport { integer, float } from 'https://unpkg.com/ixfx/dist/random.js';\ninteger(10); // Random integer value 0..<10\nfloat(100); // Random floating point number 0..<100 \n```\n\n## Weighted distributions\n\nAnother issue with `Math.random` is it's roughly even distribution. You can see this below, the horizontal axis shows values from 0 on the left to 1 on the right. Note how the plot mostly fills out evenly along the horizontal axis.\n\n<!-- \n<density-plot-element id=\"plot1\" view=\"linear\" client:visible fn=\"weightedInteger(10);\" /> -->\n\n<div id=\"plot1\"></div>\n\n<div class=\"tip\">\n<a href=\"https://fn-vis.pages.dev/1/#H4sIAARX3mQAAzWMQQ6CMBAAv7LhQpsYileN3jn4AjGhsaVU7bZ2FyUh/F1NZE5zmTkXPqSYGWZ4W+8GtgYW6HMMUA7MiXZKjZjurrrGoPzUT8p4YpU1mhiqG5X7Fslyg2zzSz+EkIcjzC0CpEh8skTaWbG+RfcctWmwk/LbLZttXf8E/hSXD2v+IIiQAAAA\">Try out some of these examples in the plotter</a>\n</div><p></p>\n\nTo make some numbers more likely than others, you may want some form of _weighted distribution_. \n\nixfx's [`Random.weighted`](https://clinth.github.io/ixfx/modules/Random.html#weighted) uses an [easing function](../../modulation/easing/) to shape random numbers.\n\nWhen using the _quadIn_ easing (the default), note how the density of random values skews toward 0, visually shown as the left-most part of the bar.\n\n<div id=\"plot2\"></div>\n\n```js\n// repl-pad\nimport { weighted } from 'https://unpkg.com/ixfx/dist/random.js';\n// Yields 0-1 (inclusive) random number\nweighted(`quadIn`);\nweighted(`quadOut`);\n```\n\nRandom integers (ie. whole numbers) can be produced with [`Random.weightedInteger`](https://clinth.github.io/ixfx/modules/Random.html#weightedInteger). This is useful for producing random array indexes.\n\nA range is provided to the function, with the return value always below the maximum (ie, it is _exclusive_). The minimum, 0 by default, might be returned (ie, it is _inclusive_).\n\n```js\n// repl-pad\nimport { weightedInteger } from 'https://unpkg.com/ixfx/dist/random.js';\nweightedInteger(10);      // 0-9\nweightedInteger(10, 20);  // 10-19\nweightedInteger(100, `quadIn`);       // 0-99, specifying the easing function\nweightedInteger(100, 200, `quadOut`); // 100-199, specifying the easing function\n```\n\nTo use for accessing an array randomly:\n```js\nconst list = [`mango`, `kiwi`, `grape`];\n// Yields random item from list\nlist[weightedInteger(list.length)];\n```\n\n### Gaussian\n\n<div class=\"tip\">\n<a href=\"https://fn-vis.pages.dev/1/#H4sIAPRW3mQAA1WPzQrCMBCEX2XZiy1Eo9eK3j34BLaHYNMabX7obqUQ8u6mooJ72hm+GZhLROtbjRWGwTMmEdEp+9MCjTNs1IBVTGJBCaucaTVxZtaYGvEWi91kwtjgR4YIvZqIjHKQoBu9hdWNOVAl5eTCo99cvZVm7mbZGmI5Ktd6u7nTal870nxyrMenGoqiPBwh1g4geOKzJlK9Lr7dRVlmPonddrs88DnMI/5GNS8ZCjbg5gAAAA==\">Try out some of these examples in the plotter</a>\n</div><p></p>\n\nGaussian distribution has a 'bell curve' shape, centred around the middle. In other words, you'd expect to get more random values around 0.5 than 0 or 1. ixfx's [`Random.gaussian`](https://clinth.github.io/ixfx/modules/Random.html#gaussian) provides this.\n\n<div id=\"plot-gaussian\"></div>\n\n```js\n// repl-pad#2\nimport { gaussian } from 'https://unpkg.com/ixfx/dist/random.js';\n\n// Yields a random number between 0..1\ngaussian();\n```\n\nThe function takes a _skew_ parameter which shifts the centre of the curve.\n\n```js\n// repl-pad#2\n// Shifts distribution to right, closer to 1\ngaussian(0.1);\n// Shifts distribution to the left, closer to 0\ngaussian(6);\n```\n\n### More random\n\n```js\n// repl-pad\nimport { minutesMs, secondsMs } from 'https://unpkg.com/ixfx/dist/random.js';\n// minutesMs and secondsMs compute random millisecond values\nminutesMs(5); // Random timeout of up to 5 minutes\nsecondsMs(5); // Random timeout of up to 5 seconds\n```\n\nWith arrays\n\n```js\n// repl-pad\nimport { arrayElement, arrayIndex, integerUniqueGen } from 'https://unpkg.com/ixfx/dist/random.js';\n\nconst v = [`blue`, `red`, `orange`];\n\narrayElement(v); // Returns a random value\narrayIndex(v); // Random array index\n\n// Produce unique set of random integers 0..<10\nconst values = [...integerUniqueGen(10)];\n```\n\nOther values:\n```js\n// repl-pad\nimport { hue, string } from 'https://unpkg.com/ixfx/dist/random.js';\n\nhue(); // Compute random hue value 0...359\nstring(10); // Random string 10 letters long\n```";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"weighted-distributions","text":"Weighted distributions"},{"depth":3,"slug":"gaussian","text":"Gaussian"},{"depth":3,"slug":"more-random","text":"More random"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$MainLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html)}`
							})}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
