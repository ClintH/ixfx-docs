import { c as createComponent, r as renderTemplate, a as renderComponent, u as unescapeHTML } from './astro/server__cawITtY.mjs';
import 'kleur/colors';
import { $ as $$MainLayout } from './MainLayout_BFrOPY-O.mjs';

const html = "<script type=\"module\" hoist=\"\">\nimport '/src/components/types/geometry/arc';\nimport '/src/components/ReplPad';\n</script>\n<style>\ninput.code {\n  font-family: var(--font-mono);\n  font-size: 0.85em;\n}\n\nradians-editor {\n  --label-color: var(--theme-text-light);\n  --axis-color: var(--theme-bg-hover);\n  --ray-color: var(--theme-hit-color);\n}\n\n</style>\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Arcs.html\">Geometry.Arcs module</a></li>\n</ul></div>\n<p>An arc describes a segment of a <a href=\"../circle/\">circle</a>. It is defined by its radius as well as the start and end radian.</p>\n<h2 id=\"type\">Type</h2>\n<p>The expected type of arcs in ixfx is:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\"><code><span class=\"line\"><span style=\"color:#F97583\">type</span><span style=\"color:#B392F0\"> Arc</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  radius</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\">number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  startRadian</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\">number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  endRadian</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\">number</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  counterClockwise</span><span style=\"color:#F97583\">?:</span><span style=\"color:#79B8FF\">boolean</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// eg:</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arc</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  radius: </span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  startRadian: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  endRadian: Math.</span><span style=\"color:#79B8FF\">PI</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p><code>ArcPositioned</code> also includes <code>x</code> and <code>y</code> fields.</p>\n<p>Try editing this example:</p>\n<input style=\"width: 40em\" class=\"code arc\" type=\"text\" id=\"arc1Txt\" value=\"{ radius: 20, startRadian: 0, endRadian: Math.PI }\">\n<arc-editor id=\"arc1\" client:visible=\"\">\n<p>Angles are set with <em>radians</em>, not the more familiar <em>degrees</em>. See <a href=\"../units/\">Units</a> for more info.</p>\n<angles-element width=\"500\" height=\"300\" client:visible=\"\">\n<h2 id=\"conversions\">Conversions</h2>\n<p>Create an arc from degrees:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Arcs } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// fromDegrees(radius:number, startDegrees:number, endDegrees:number, origin?:Point)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// returns Arc {radius, startRadian, endRadian}</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arc</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">fromDegrees</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arc2</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">fromDegrees</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">, {x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Get a <a href=\"../line/\">Line</a> connecting the start and end point of the arc:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Returns {a: {x,y}, b:{x,y} }</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">toLine</span><span style=\"color:#E1E4E8\">(arc);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"interpolate--point-by-angle\">Interpolate &#x26; point by angle</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Arcs.interpolate.html\"><code>interpolate</code></a> returns a point at a relative position along an arc.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Arcs, degreeToRadian } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arc</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">fromDegrees</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">, {x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> p</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">interpolate</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">0.5</span><span style=\"color:#E1E4E8\">, arc);</span></span>\n<span class=\"line\"></span></code></pre>\n<p><code>point</code> returns a coordinate on an arc, based on angle.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> pt</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">point</span><span style=\"color:#E1E4E8\">(arc, </span><span style=\"color:#B392F0\">degreeToRadian</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">));</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"length--distance\">Length &#x26; distance</h2>\n<p>Get the length of arc as a number</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Arcs.</span><span style=\"color:#B392F0\">length</span><span style=\"color:#E1E4E8\">(arc); </span></span>\n<span class=\"line\"></span></code></pre>\n<p>Distance between the centers of two arcs, as a number</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Arcs.</span><span style=\"color:#B392F0\">distanceCenter</span><span style=\"color:#E1E4E8\">(</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  Arcs.</span><span style=\"color:#B392F0\">fromDegrees</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">40</span><span style=\"color:#E1E4E8\">, {x: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">20</span><span style=\"color:#E1E4E8\">}),</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">  Arcs.</span><span style=\"color:#B392F0\">fromDegrees</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">, {x: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">})</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">); </span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"area\">Area</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Arcs.bbox.html\"><code>bbox</code></a> calculates a rectangle that encloses an arc</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Arcs } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span><span style=\"color:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arc</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">fromDegrees</span><span style=\"color:#E1E4E8\">(</span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, </span><span style=\"color:#79B8FF\">90</span><span style=\"color:#E1E4E8\">, {x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> p</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Arcs.</span><span style=\"color:#B392F0\">bbox</span><span style=\"color:#E1E4E8\">(arc);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"comparison\">Comparison</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Arcs.isEquals.html\"><code>isEqual</code></a> returns <em>true</em> if two arcs are identical by value.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arcA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">, endRadian: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, startRadian: </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> arcA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">5</span><span style=\"color:#E1E4E8\">, endRadian: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, startRadian: </span><span style=\"color:#79B8FF\">1</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">arcA </span><span style=\"color:#F97583\">===</span><span style=\"color:#E1E4E8\"> arcB; </span><span style=\"color:#6A737D\">// false, because object identities are different</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Arcs.</span><span style=\"color:#B392F0\">isEqual</span><span style=\"color:#E1E4E8\">(arcA, arcB); </span><span style=\"color:#6A737D\">// true, because values are identical</span></span>\n<span class=\"line\"></span></code></pre></angles-element></arc-editor>";

				const frontmatter = {"title":"Arc","layout":"../../../layouts/MainLayout.astro","setup":"import ArcEditor from '/src/components/geometry/ArcEditor';\nimport AnglesElement from '/src/components/geometry/AnglesElement';\n"};
				const file = "/Users/af4766/repos/ixfx-docs/src/pages/types/geometry/arc.md";
				const url = "/types/geometry/arc";
				function rawContent() {
					return "\n<script type=\"module\" hoist>\nimport '/src/components/types/geometry/arc';\nimport '/src/components/ReplPad';\n</script>\n<style>\ninput.code {\n  font-family: var(--font-mono);\n  font-size: 0.85em;\n}\n\nradians-editor {\n  --label-color: var(--theme-text-light);\n  --axis-color: var(--theme-bg-hover);\n  --ray-color: var(--theme-hit-color);\n}\n\n</style>\n\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Arcs.html\">Geometry.Arcs module</a></li>\n</div>\n\nAn arc describes a segment of a [circle](../circle/). It is defined by its radius as well as the start and end radian.\n\n\n## Type\n\nThe expected type of arcs in ixfx is:\n\n```typescript\ntype Arc = {\n  radius:number\n  startRadian:number\n  endRadian:number\n  counterClockwise?:boolean\n}>\n\n// eg:\nconst arc = {\n  radius: 5,\n  startRadian: 0,\n  endRadian: Math.PI\n}\n```\n\n`ArcPositioned` also includes `x` and `y` fields.\n\nTry editing this example:\n\n<input style=\"width: 40em\" class=\"code arc\" type=\"text\" id=\"arc1Txt\" value=\"{ radius: 20, startRadian: 0, endRadian: Math.PI }\">\n<arc-editor id=\"arc1\" client:visible  />\n\nAngles are set with _radians_, not the more familiar _degrees_. See [Units](../units/) for more info.\n\n<angles-element width=\"500\" height=\"300\" client:visible />\n\n## Conversions\n\nCreate an arc from degrees:\n\n```js\n// repl-pad#1\nimport { Arcs } from \"https://unpkg.com/ixfx/dist/geometry.js\"\n\n// fromDegrees(radius:number, startDegrees:number, endDegrees:number, origin?:Point)\n// returns Arc {radius, startRadian, endRadian}\nconst arc = Arcs.fromDegrees(10, 0, 90);\nconst arc2 = Arcs.fromDegrees(10, 0, 90, {x: 100, y: 100});\n```\n\nGet a [Line](../line/) connecting the start and end point of the arc:\n\n```js\n// repl-pad#1\n// Returns {a: {x,y}, b:{x,y} }\nconst line = Arcs.toLine(arc);\n```\n\n## Interpolate & point by angle\n\n[`interpolate`](https://clinth.github.io/ixfx/functions/Geometry.Arcs.interpolate.html) returns a point at a relative position along an arc.\n\n```js\n// repl-pad#2\nimport { Arcs, degreeToRadian } from \"https://unpkg.com/ixfx/dist/geometry.js\";\nconst arc = Arcs.fromDegrees(10, 0, 90, {x: 100, y: 100});\n\nconst p = Arcs.interpolate(0.5, arc);\n```\n\n`point` returns a coordinate on an arc, based on angle.\n\n```js\n// repl-pad#2\nconst pt = Arcs.point(arc, degreeToRadian(90));\n```\n\n## Length & distance\n\nGet the length of arc as a number\n\n```js\n// repl-pad#2\nArcs.length(arc); \n```\n\nDistance between the centers of two arcs, as a number \n\n```js\n// repl-pad#2\nArcs.distanceCenter(\n  Arcs.fromDegrees(20, 0, 40, {x: 20, y: 20}),\n  Arcs.fromDegrees(10, 0, 90, {x: 50, y: 50})\n); \n```\n\n## Area\n\n[`bbox`](https://clinth.github.io/ixfx/functions/Geometry.Arcs.bbox.html) calculates a rectangle that encloses an arc\n\n```js\n// repl-pad#3\nimport { Arcs } from \"https://unpkg.com/ixfx/dist/geometry.js\";\nconst arc = Arcs.fromDegrees(10, 0, 90, {x: 100, y: 100});\n\nconst p = Arcs.bbox(arc);\n``` \n\n## Comparison\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Arcs.isEquals.html) returns _true_ if two arcs are identical by value.\n\n```js\nconst arcA = { radius: 5, endRadian: 0, startRadian: 1 };\nconst arcA = { radius: 5, endRadian: 0, startRadian: 1 };\narcA === arcB; // false, because object identities are different\nArcs.isEqual(arcA, arcB); // true, because values are identical\n```";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"type","text":"Type"},{"depth":2,"slug":"conversions","text":"Conversions"},{"depth":2,"slug":"interpolate--point-by-angle","text":"Interpolate & point by angle"},{"depth":2,"slug":"length--distance","text":"Length & distance"},{"depth":2,"slug":"area","text":"Area"},{"depth":2,"slug":"comparison","text":"Comparison"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${renderComponent(result, 'Layout', $$MainLayout, {
								file,
								url,
								content,
								frontmatter: content,
								headings: getHeadings(),
								rawContent,
								compiledContent,
								'server:root': true,
							}, {
								'default': () => renderTemplate`${unescapeHTML(html)}`
							})}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
