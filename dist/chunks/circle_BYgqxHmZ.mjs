import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server__cawITtY.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<script type=\"module\" hoist=\"\">\nimport '/src/components/ReplPad';\n</script>\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Circles.html\">Geometry.Circles module</a></li>\n</ul></div>\n<p>A circle.</p>\n<p>The ixfx circle is described at the least by its radius:</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\"><code><span class=\"line\"><span style=\"color:#F97583\">type</span><span style=\"color:#B392F0\"> Circle</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  radius</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// eg:</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> c</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"></span></code></pre>\n<p>A circle is said to be <em>positioned</em> if it also includes <code>x</code> and <code>y</code> fields.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"typescript\"><code><span class=\"line\"><span style=\"color:#F97583\">type</span><span style=\"color:#B392F0\"> CirclePositioned</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  radius</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  x</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span><span style=\"color:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#FFAB70\">  y</span><span style=\"color:#F97583\">:</span><span style=\"color:#79B8FF\"> number</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> c</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">50</span><span style=\"color:#E1E4E8\"> };</span></span>\n<span class=\"line\"></span></code></pre>\n<p>If a circle is positioned, it can be used with any of the <a href=\"../point/\">Point</a> functions as well.</p>\n<h2 id=\"intersection\">Intersection</h2>\n<p>Get the <a href=\"../point/\">points</a> of intersection between a line and circle with <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html\"><code>intersectionLine</code></a>. It returns an array of zero to three points, depending on the geometry.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Circles } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Circle and line to check</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> circle</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> line</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> {a: {x: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">0</span><span style=\"color:#E1E4E8\">}, b: { x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\"> } };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> pts</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Circles.</span><span style=\"color:#B392F0\">intersectionLine</span><span style=\"color:#E1E4E8\">(circle, line);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Get the points of intersection between two circles with <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html\"><code>intersections</code></a></p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> pts</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Circles.</span><span style=\"color:#B392F0\">intersections</span><span style=\"color:#E1E4E8\">(circleA, circleB);</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// pts will be empty if there are no intersections</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">//  this can also be the case if circles are identical, or one completely encloses the other</span></span>\n<span class=\"line\"></span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html\"><code>isIntersecting</code></a>: <em>true</em> if two circles are overlapping or identical</li>\n</ul>\n<h2 id=\"area\">Area</h2>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html\"><code>bbox</code></a> yields a rectangle that encompasses the circle.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Circles } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> circle</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields: { x, y, width, height }</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Circles.</span><span style=\"color:#B392F0\">bbox</span><span style=\"color:#E1E4E8\">(circle);   </span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html\"><code>area</code></a> computes the area of a circle.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#1</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Circles.</span><span style=\"color:#B392F0\">area</span><span style=\"color:#E1E4E8\">(circle);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"relating-circles\">Relating circles</h2>\n<p>Check whether <code>circleB</code> is completely contained by <code>circleA</code> with <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html\"><code>isContainedBy</code></a>. <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html\"><code>isIntersecting</code></a> returns <em>true</em> if two circles are overlapping or identical.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Circles } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> circleA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> circleB</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">150</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Yields: true/false</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Circles.</span><span style=\"color:#B392F0\">isContainedBy</span><span style=\"color:#E1E4E8\">(circleA, circleB);</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Circles.</span><span style=\"color:#B392F0\">isIntersecting</span><span style=\"color:#E1E4E8\">(circleA, circleB);</span></span>\n<span class=\"line\"></span></code></pre>\n<p><a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html\"><code>distanceCenter</code></a> returns the distance between two circles’ centers. This requires that both circles are positioned. <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html\"><code>distanceFromExterior</code></a> returns the distance between the perimeter of two circles.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#3</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> toCenter</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Circles.</span><span style=\"color:#B392F0\">distanceCenter</span><span style=\"color:#E1E4E8\">(circleA, circleB);</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> toExterior</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Circles.</span><span style=\"color:#B392F0\">distanceFromExterior</span><span style=\"color:#E1E4E8\">(circleA, circleB);</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"interpolate--point-by-angle\">Interpolate &#x26; point by angle</h2>\n<p>Get the <em>x,y</em> coordinate of a point on the perimeter of the circle at specified angle (in radians) with <a href=\"https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html\"><code>point</code></a>.</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">import</span><span style=\"color:#E1E4E8\"> { Circles } </span><span style=\"color:#F97583\">from</span><span style=\"color:#9ECBFF\"> \"https://unpkg.com/ixfx/dist/geometry.js\"</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> circle</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> { radius: </span><span style=\"color:#79B8FF\">10</span><span style=\"color:#E1E4E8\">, x: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">, y: </span><span style=\"color:#79B8FF\">100</span><span style=\"color:#E1E4E8\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Circles.point(circle, angleRadian, origin?):Point</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> ptA</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Circles.</span><span style=\"color:#B392F0\">point</span><span style=\"color:#E1E4E8\">(circle, Math.</span><span style=\"color:#79B8FF\">PI</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// {x,y}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Get the x,y coordinate at a relative distance along circle</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// repl-pad#2</span></span>\n<span class=\"line\"><span style=\"color:#6A737D\">// Get x,y at 75% along circle</span></span>\n<span class=\"line\"><span style=\"color:#F97583\">const</span><span style=\"color:#79B8FF\"> ptB</span><span style=\"color:#F97583\"> =</span><span style=\"color:#E1E4E8\"> Circles.</span><span style=\"color:#B392F0\">interpolate</span><span style=\"color:#E1E4E8\">(circle, </span><span style=\"color:#79B8FF\">0.75</span><span style=\"color:#E1E4E8\">); </span><span style=\"color:#6A737D\">// {x,y}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"comparison\">Comparison</h2>\n<p>Equality</p>\n<pre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><code><span class=\"line\"><span style=\"color:#6A737D\">// Returns true if `a` and `b` circles have the same value</span></span>\n<span class=\"line\"><span style=\"color:#E1E4E8\">Circles.</span><span style=\"color:#B392F0\">isEqual</span><span style=\"color:#E1E4E8\">(a, b);</span></span>\n<span class=\"line\"></span></code></pre>";

				const frontmatter = {"title":"Circle","setup":"import {Markdown} from 'astro/components';\nimport Layout from '../../../layouts/MainLayout.astro';\n"};
				const file = "/Users/af4766/repos/ixfx-docs/src/pages/types/geometry/circle.md";
				const url = "/types/geometry/circle";
				function rawContent() {
					return "\n<script type=\"module\" hoist>\nimport '/src/components/ReplPad';\n</script>\n\n<div class=\"tip\">\n<ul>\n<li>Demos <a href=\"https://clinth.github.io/ixfx-demos/geometry/\">Geometry</a> (<a href=\"https://github.com/ClintH/ixfx-demos/tree/main/geometry\">source</a>)</li>\n<li>API Reference <a href=\"https://clinth.github.io/ixfx/modules/Geometry.Circles.html\">Geometry.Circles module</a></li>\n</div>\n\nA circle.\n\nThe ixfx circle is described at the least by its radius:\n\n```typescript\ntype Circle = {\n  radius: number\n}\n\n// eg:\nconst c = { radius: 100 };\n```\n\nA circle is said to be _positioned_ if it also includes `x` and `y` fields.\n\n```typescript\ntype CirclePositioned = {\n  radius: number,\n  x: number,\n  y: number\n}\n\nconst c = { radius: 100, x: 50, y: 50 };\n```\n\nIf a circle is positioned, it can be used with any of the [Point](../point/) functions as well.\n\n## Intersection\n\nGet the [points](../point/) of intersection between a line and circle with [`intersectionLine`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html). It returns an array of zero to three points, depending on the geometry.\n\n```js\n// repl-pad\nimport { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\"\n\n// Circle and line to check\nconst circle = { radius: 10, x: 100, y: 100};\nconst line = {a: {x: 0, y: 0}, b: { x: 100, y: 100 } };\n\nconst pts = Circles.intersectionLine(circle, line);\n```\n\nGet the points of intersection between two circles with [`intersections`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html)\n\n```js\nconst pts = Circles.intersections(circleA, circleB);\n// pts will be empty if there are no intersections\n//  this can also be the case if circles are identical, or one completely encloses the other\n```\n\nSee also:\n* [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html): _true_ if two circles are overlapping or identical\n\n## Area\n\n[`bbox`](https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html) yields a rectangle that encompasses the circle.\n\n```js\n// repl-pad#1\nimport { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Yields: { x, y, width, height }\nCircles.bbox(circle);   \n``` \n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html) computes the area of a circle.\n\n```js\n// repl-pad#1\nCircles.area(circle);\n```\n\n\n## Relating circles\n\nCheck whether `circleB` is completely contained by `circleA` with [`isContainedBy`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html). [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html) returns _true_ if two circles are overlapping or identical.\n\n```js\n// repl-pad#3\nimport { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\"\n\nconst circleA = { radius: 10, x: 100, y: 100};\nconst circleB = { radius: 10, x: 150, y: 100};\n\n// Yields: true/false\nCircles.isContainedBy(circleA, circleB);\nCircles.isIntersecting(circleA, circleB);\n```\n\n[`distanceCenter`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html) returns the distance between two circles' centers. This requires that both circles are positioned. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html) returns the distance between the perimeter of two circles.\n\n```js\n// repl-pad#3\nconst toCenter = Circles.distanceCenter(circleA, circleB);\nconst toExterior = Circles.distanceFromExterior(circleA, circleB);\n```\n\n## Interpolate & point by angle\n\nGet the _x,y_ coordinate of a point on the perimeter of the circle at specified angle (in radians) with [`point`](https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html).\n\n```js\n// repl-pad#2\nimport { Circles } from \"https://unpkg.com/ixfx/dist/geometry.js\"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Circles.point(circle, angleRadian, origin?):Point\nconst ptA = Circles.point(circle, Math.PI); // {x,y}\n```\n\nGet the x,y coordinate at a relative distance along circle\n\n```js\n// repl-pad#2\n// Get x,y at 75% along circle\nconst ptB = Circles.interpolate(circle, 0.75); // {x,y}\n```\n\n## Comparison\n\nEquality\n\n```js\n// Returns true if `a` and `b` circles have the same value\nCircles.isEqual(a, b);\n```\n\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"intersection","text":"Intersection"},{"depth":2,"slug":"area","text":"Area"},{"depth":2,"slug":"relating-circles","text":"Relating circles"},{"depth":2,"slug":"interpolate--point-by-angle","text":"Interpolate & point by angle"},{"depth":2,"slug":"comparison","text":"Comparison"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
