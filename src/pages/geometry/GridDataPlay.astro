<link rel="stylesheet" href={Astro.resolve('../../styles/demos.css')} />
<script type="module" src={Astro.resolve('../../components/GridEditor.ts')}></script>
<!-- <script type="module" src={Astro.resolve('./grid.ts')}></script> -->

<style>
  #dataGrid {
    --grid-color:var(--theme-divider);
    --hover-color: var(--theme-bg-hover);
  }
  #dataGridSection {
    display: flex;
    background-color: aliceblue;
    border: 2px solid black;
    flex-direction: column;
    color: black;
    padding: 1em;
    max-width: 350px;
    margin: 0 auto;
    align-items: center;
  }
</style>
<script type="module">
import {resolveEl,Forms} from 'ixfx/lib/dom';
import {randomElement} from 'ixfx/lib/collections';
import {Grids} from 'ixfx/lib/geometry';
import {DictionaryOfColourCombinations} from 'ixfx/lib/visual';
const dataGrid = resolveEl(`#dataGrid`);
const dataGridRead = resolveEl(`#dataGridRead`);
const dataGridStore = new Map();
const palette = DictionaryOfColourCombinations.randomPalette();

Forms.button(`#btnDataRandom`, () => randomGrid());
dataGrid.cellRenderer = (cell, rect, ctx) => {
  const d = dataGridStore.get(Grids.cellKeyString(cell));
  if (d === undefined) return;
  const [r, g, b] = d.colour;
  ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${d.funk})`;
  ctx.fillRect(rect.x, rect.y, rect.width, rect.height);
  return true;
};
dataGrid.addEventListener(`cellPointerMove`, (ev) => {
  const cell = ev.detail;
  if (cell === undefined) return;
  const d = dataGridStore.get(Grids.cellKeyString(cell));

  dataGridRead.innerText = `Cell ${cell.x}, ${cell.y} has data ${JSON.stringify(d)}`;
});

const randomGrid = () => {
  const shape = dataGrid.getGrid();

  const randomColour = () => randomElement(palette).rgb;
  for (let cell of Grids.cells(shape)) {
    dataGridStore.set(Grids.cellKeyString(cell), {colour: randomColour(), funk: Math.random()});
  }
  dataGrid.draw();
}
randomGrid();
</script>
<section id="dataGridSection">
  <grid-editor rows="15" cols="15" pixelSize="20" id="dataGrid" />
  <button id="btnDataRandom">Randomise</button>
  <div id="dataGridRead">&nbsp;</div>
</section>
