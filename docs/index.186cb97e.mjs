import { c as createMetadata, a as createAstro, b as createComponent, r as render, d as renderComponent } from './chunks/index.7bfc2e7e.mjs';
import { $ as $$module1, a as $$MainLayout } from './chunks/MainLayout.fae6d6b7.mjs';
import 'shorthash';
import 'serialize-javascript';
import 'preact/hooks';
import 'preact/jsx-runtime';
import 'lit';

const metadata = { "headers": [], "source": '\n<div class="tip">\n<ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>\n</div>\n\n\n* [Array](../arrays/) - Arrays are the basic way for keeping a list of data\n* [Stack](./stack/) - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.\n* [Queue](./queue/) - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)\n* [Set](./set/) - Sets keep track of unique items.\n* [Map](./map/) - Keeps track of key-value pairs.\n* [Expiring Map](./expiringMap/) - A forgetful map.\n\nPatterns\n* [Process a queue or stack of items](../process-set/)\n\n', "html": '<div class="tip">\n<ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>\n</div>\n<ul>\n<li><a href="../arrays/">Array</a> - Arrays are the basic way for keeping a list of data</li>\n<li><a href="./stack/">Stack</a> - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.</li>\n<li><a href="./queue/">Queue</a> - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)</li>\n<li><a href="./set/">Set</a> - Sets keep track of unique items.</li>\n<li><a href="./map/">Map</a> - Keeps track of key-value pairs.</li>\n<li><a href="./expiringMap/">Expiring Map</a> - A forgetful map.</li>\n</ul>\n<p>Patterns</p>\n<ul>\n<li><a href="../process-set/">Process a queue or stack of items</a></li>\n</ul>' };
const frontmatter = { "title": "Collections", "astro": { "headers": [], "source": '\n<div class="tip">\n<ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>\n</div>\n\n\n* [Array](../arrays/) - Arrays are the basic way for keeping a list of data\n* [Stack](./stack/) - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.\n* [Queue](./queue/) - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)\n* [Set](./set/) - Sets keep track of unique items.\n* [Map](./map/) - Keeps track of key-value pairs.\n* [Expiring Map](./expiringMap/) - A forgetful map.\n\nPatterns\n* [Process a queue or stack of items](../process-set/)\n\n', "html": '<div class="tip">\n<ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>\n</div>\n<ul>\n<li><a href="../arrays/">Array</a> - Arrays are the basic way for keeping a list of data</li>\n<li><a href="./stack/">Stack</a> - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.</li>\n<li><a href="./queue/">Queue</a> - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)</li>\n<li><a href="./set/">Set</a> - Sets keep track of unique items.</li>\n<li><a href="./map/">Map</a> - Keeps track of key-value pairs.</li>\n<li><a href="./expiringMap/">Expiring Map</a> - A forgetful map.</li>\n</ul>\n<p>Patterns</p>\n<ul>\n<li><a href="../process-set/">Process a queue or stack of items</a></li>\n</ul>' } };
const $$metadata = createMetadata("/src/pages/data/collections/index.md", { modules: [{ module: $$module1, specifier: "../../../layouts/MainLayout.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro = createAstro("/src/pages/data/collections/index.md", "https://clinth.github.io/ixfx-docs/", "file:///Users/af4766/repos/ixfx-docs/");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  const $$content = { "title": "Collections", "astro": { "headers": [], "source": '\n<div class="tip">\n<ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>\n</div>\n\n\n* [Array](../arrays/) - Arrays are the basic way for keeping a list of data\n* [Stack](./stack/) - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.\n* [Queue](./queue/) - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)\n* [Set](./set/) - Sets keep track of unique items.\n* [Map](./map/) - Keeps track of key-value pairs.\n* [Expiring Map](./expiringMap/) - A forgetful map.\n\nPatterns\n* [Process a queue or stack of items](../process-set/)\n\n', "html": '<div class="tip">\n<ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>\n</div>\n<ul>\n<li><a href="../arrays/">Array</a> - Arrays are the basic way for keeping a list of data</li>\n<li><a href="./stack/">Stack</a> - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.</li>\n<li><a href="./queue/">Queue</a> - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)</li>\n<li><a href="./set/">Set</a> - Sets keep track of unique items.</li>\n<li><a href="./map/">Map</a> - Keeps track of key-value pairs.</li>\n<li><a href="./expiringMap/">Expiring Map</a> - A forgetful map.</li>\n</ul>\n<p>Patterns</p>\n<ul>\n<li><a href="../process-set/">Process a queue or stack of items</a></li>\n</ul>' } };
  return render`${renderComponent($$result, "Layout", $$MainLayout, { "content": $$content }, { "default": () => render`<div class="tip">
<ul>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Collections.html">Collections module</a></li>
</ul></div><ul>
<li><a href="../arrays/">Array</a> - Arrays are the basic way for keeping a list of data</li>
<li><a href="./stack/">Stack</a> - Keep track of items like a stack of plates. Most recent gets added to the top, and you can only take the most recent from the top.</li>
<li><a href="./queue/">Queue</a> - Keep track of items like a bakery queue. Most recent is added to the back of the queue, and you can only take from the front of the queue (ie the oldest)</li>
<li><a href="./set/">Set</a> - Sets keep track of unique items.</li>
<li><a href="./map/">Map</a> - Keeps track of key-value pairs.</li>
<li><a href="./expiringMap/">Expiring Map</a> - A forgetful map.</li>
</ul><p>Patterns</p><ul>
<li><a href="../process-set/">Process a queue or stack of items</a></li>
</ul>` })}`;
});

export { $$metadata, $$Index as default, frontmatter, metadata };
