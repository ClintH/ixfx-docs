var w=Object.defineProperty;var M=(o,e,r)=>e in o?w(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var y=(o,e,r)=>(M(o,typeof e!="symbol"?e+"":e,r),r);import{s as P,r as _,$ as k,e as v}from"./vendor.d9edd6b2.js";import{L as f,C as b,x as j}from"./chunk-UWLZSNHO.ed4a88a1.js";import"./chunk-6JTGCZJL.d1807a28.js";import"./chunk-MBZ4GFG7.e6b9ac15.js";import{t as R}from"./chunk-V6WGO73W.92c7aaab.js";import{P as $,S as x}from"./chunk-3SMTKDXD.e3dcb359.js";import"./chunk-FRVUOYS5.39dff0b3.js";import{e as O}from"./styles.f341ab18.js";var D=Object.defineProperty,I=Object.getOwnPropertyDescriptor,C=(o,e,r,a)=>{for(var i=a>1?void 0:a?I(e,r):e,n=o.length-1,h;n>=0;n--)(h=o[n])&&(i=(a?h(e,r,i):h(i))||i);return a&&i&&D(e,r,i),i};const L="angles-element";class g extends P{constructor(){super();y(this,"palette");y(this,"lastCircle");this.palette=$.create(),this.palette.setElementBase(this),this.width=400,this.height=400,R().subscribe(e=>{this.updated()})}setDegrees(e){this.degree=e,this.radian=void 0}setRadians(e){this.degree=void 0,this.radian=e}getBounds(){const e=x.makeHelper(this.shadowRoot.querySelector("svg"));return{width:e.width,height:e.height}}renderSvg(){const e=x.makeHelper(this.shadowRoot.querySelector("svg"),{fillStyle:"transparent",strokeStyle:"red",strokeWidth:3});e.clear();const r=e.width,a=e.height;let i=e.height*.3,n={x:r/2,y:a/2};const h={strokeStyle:this.palette.get("axis-color","orange")},l={strokeStyle:"transparent",fillStyle:this.palette.get("label-color","orange"),anchor:"middle",align:"hanging"};let p={radius:i,...n};this.lastCircle=p,e.circle(p,h);const u={...p,radius:i+20},d=(t,s,c=l)=>{s===void 0&&(s=t.toString());const m=b.point(u,t);e.text(s,{x:m.x,y:m.y},c)};d(0,"0",{...l,anchor:"start",align:"middle"}),d(Math.PI,"Math.PI",{...l,align:"middle",anchor:"end"}),d(Math.PI/2,"Math.PI/2",{...l,align:"text-bottom"}),d(3*Math.PI/2,"3*Math.PI/2",{...l,align:"hanging"})}async updated(){this.renderSvg()}_pointerMove(e){const r=x.makeHelper(this.shadowRoot.querySelector("svg")),a={x:e.offsetX,y:e.offsetY},i=this.lastCircle;if(i===void 0)return;const n=f.fromPoints(i,a),h=f.extendFromStart(n,200),l=b.intersectionLine(i,h);if(l.length!==1)return;const p=l[0],u=f.extendFromStart(f.fromPoints(i,p),10);r.line(u,{strokeStyle:this.palette.get("accent-bold","yellow")},"#pointerRay");const d=f.angleRadian(u)*-1;let t=Math.round(d/Math.PI*100)/100;t<0&&(t=Math.abs(t+1)+1);let s="";t==1?s="\u03C0":t==.17?s="\u03C0/6":t==.25?s="\u03C0/4":t==.33?s="\u03C0/3":t==.5?s="\u03C0/2":t==.58?s="7\u03C0/12":t==.6?s="\u03C0/4":t==.75?s="3\u03C0/4":t==.92?s="11\u03C0/12":t==1.17?s="7\u03C0/6":t==1.25?s="5\u03C0/4":t==1.33?s="4\u03C0/3":t==1.5?s="3\u03C0/2":t==1.58?s="19\u03C0/12":t==1.75?s="7\u03C0/4":t==1.92?s="23\u03C0/12":t==0?s="0 or 2\u03C0":s=`${t.toFixed(2)}\u03C0`;let c=j(d);c<0&&(c=Math.abs(c+180)+180);const m=Math.round(c),S={strokeStyle:"transparent",fillStyle:this.palette.get("label-color","black"),anchor:"middle"};r.text(`Radians: ${s}`,{x:i.x,y:i.y},S,"#radiansLabel"),r.text(`Degrees: ${m}`,{x:i.x,y:i.y+20},S,"#degreesLabel")}render(){return k`
			<div id="container">
        <svg @pointermove="${this._pointerMove}" style="font-size: 1em" viewBox="0 0 ${this.width} ${this.height}" width=${this.width} height=${this.height}></svg>
			</div>
		`}}y(g,"styles",[O,_`
      :host {
        color: var(--label-color, green);
      }
      #container {
        display: flex;
        align-items: center;
        flex-direction: column;
      }
  `]);C([v()],g.prototype,"radian",2);C([v()],g.prototype,"degree",2);C([v()],g.prototype,"width",2);C([v()],g.prototype,"height",2);customElements.define(L,g);export{g as AnglesElement,L as tagName};
