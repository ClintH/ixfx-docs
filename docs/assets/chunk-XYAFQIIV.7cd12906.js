import{a as n}from"./chunk-I3R3AECV.3528ce89.js";import{b as f,D as c,F as p,k as u,G as m,H as l,n as y,I as d,r as h,J as i,K as b,L as v,N as w,O as T,w as E}from"./chunk-ODBLOXCD.602f7099.js";import{n as x}from"./chunk-AWXCQ245.1dcbd11a.js";import{_ as k}from"./chunk-FQLUQVDZ.7e80d7b0.js";var _={};k(_,{StateMachine:()=>n,continuously:()=>f,debounce:()=>c,delay:()=>p,forEach:()=>q,forEachAsync:()=>A,frequencyTimer:()=>u,frequencyTimerSource:()=>m,interval:()=>l,msElapsedTimer:()=>y,relativeTimer:()=>d,repeat:()=>S,retry:()=>h,sleep:()=>i,throttle:()=>b,ticksElapsedTimer:()=>v,timeout:()=>w,updateOutdated:()=>T,waitFor:()=>E});var q=(r,t)=>{for(const e of r){const a=t(e);if(typeof a=="boolean"&&!a)break}},A=async function(r,t,e){if(Array.isArray(r))for(const a of r){const o=await t(a);if(e&&await i(e),typeof o=="boolean"&&!o)break}else for await(const a of r){const o=await t(a);if(e&&await i(e),typeof o=="boolean"&&!o)break}},S=(r,t)=>{let e,a;e=a=0;const o=[];if(typeof r=="number")for(x(r,"positive","countOrPredicate");r-- >0;){e++;const s=t();s!==void 0&&(o.push(s),a++)}else for(;r(e,a);){e++;const s=t();s!==void 0&&(o.push(s),a++)}return o};export{_ as f,S as r};
