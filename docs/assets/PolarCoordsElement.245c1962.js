var b=Object.defineProperty;var P=(a,e,t)=>e in a?b(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var g=(a,e,t)=>(P(a,typeof e!="symbol"?e+"":e,t),t);import{s as _,r as C,$ as M,e as p}from"./vendor.aa1ac2c8.js";import{L as d,P as R,x as j,v as O,A}from"./chunk-3TSPSTUR.0c63f691.js";import"./chunk-G4S3XAFG.a06889d7.js";import"./chunk-JLAHASPM.045da619.js";import{t as D}from"./chunk-UDOW5UY7.00d3a5c3.js";import{P as $,S as y}from"./chunk-WGSYSC7J.a829d299.js";import"./chunk-FPOHJL6J.981a7808.js";import{e as L}from"./styles.a87e34e4.js";var W=Object.defineProperty,G=Object.getOwnPropertyDescriptor,m=(a,e,t,o)=>{for(var r=o>1?void 0:o?G(e,t):e,l=a.length-1,s;l>=0;l--)(s=a[l])&&(r=(o?s(e,t,r):s(r))||r);return o&&r&&W(e,t,r),r};const T="polar-coords-element";class c extends _{constructor(){super();g(this,"palette");g(this,"lastCircle");this.palette=$.create(),this.palette.setElementBase(this),this.width=500,this.height=300,D().subscribe(e=>{console.log("theme change"),this.updated()})}setDegrees(e){this.degree=e,this.radian=void 0}setRadians(e){this.degree=void 0,this.radian=e}getBounds(){const e=y.svg(this.shadowRoot.querySelector("svg"));return{width:e.width,height:e.height}}renderGrid(e,t,o,r){const l=y.svg(this.shadowRoot.querySelector("svg"),{fillStyle:"transparent",strokeStyle:"red",strokeWidth:3}),s={strokeStyle:this.palette.get("bg-dim","whitesmoke"),strokeWidth:1};let n=0;for(;n<r;){let h=d.fromNumbers(0,n,o,n);l.line(h,s),n+=t}let i=0;for(;i<o;){let h=d.fromNumbers(i,0,i,r);l.line(h,s),i+=t}}renderSvg(){const e="black",t=y.svg(this.shadowRoot.querySelector("svg"),{fillStyle:"transparent",strokeWidth:3});t.clear();const o=t.width,r=t.height,l=Math.min(o,r),s={x:o/2,y:r/2};this.renderGrid(s,25,o,r);const n=25;t.circle({radius:3,...s},{fillStyle:e,strokeStyle:"none"}),t.text(R.sum(s,2,n),"O",{fillStyle:e,strokeStyle:"none"});const i={id:"triangle",fillStyle:e},h=d.fromNumbers(s.x,s.y,l-10,s.y);t.line(h,{fillStyle:"none",markerEnd:i,strokeStyle:e}),t.text({x:l-30,y:s.y+n},"A",{strokeStyle:"none",fillStyle:e})}async updated(){this.renderSvg()}_pointerMove(e){const t=this.palette.get("accent-bold","yellow"),o=this.palette.get("fg-dim","yellow"),r=y.svg(this.shadowRoot.querySelector("svg")),l=r.width,s=r.height,n={x:l/2,y:s/2},i={x:e.offsetX,y:e.offsetY},h=d.fromPoints(n,i);r.line(h,{strokeDash:"5",strokeStyle:t},"#pointerRay");const f=d.length(h);r.circle({radius:5,...i},{fillStyle:t,strokeStyle:"none"},"#targetCircle");const u=j.fromCartesian(i,n),S=O(u.angleRadian),v=Math.PI*2-u.angleRadian;let x={endRadian:v,startRadian:0,radius:Math.min(100,f),...n},w={sweep:!0,largeArc:!(v>Math.PI)};Math.round(S)!==0&&r.path(A.toSvg(x,w),{strokeStyle:o},"#arc");const k={strokeStyle:"transparent",fillStyle:t,anchor:"middle"};r.text({x:i.x,y:i.y+40},`(${Math.round(f)}, ${Math.floor(S)}\xB0)`,k,"#coordLabel")}render(){return M`
			<div id="container">
        <svg @pointermove="${this._pointerMove}" style="font-size: 1em" viewBox="0 0 ${this.width} ${this.height}" width=${this.width} height=${this.height}></svg>
			</div>
		`}}g(c,"styles",[L,C`
      :host {
        color: var(--label-color, green);
      }
      #container {
        display: flex;
        align-items: center;
        flex-direction: column;
      }
  `]);m([p()],c.prototype,"radian",2);m([p()],c.prototype,"degree",2);m([p()],c.prototype,"width",2);m([p()],c.prototype,"height",2);customElements.define(T,c);export{c as PolarCoordsElement,T as tagName};
