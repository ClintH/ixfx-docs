import{_ as P,a as $t}from"./chunk-UDOW5UY7.00d3a5c3.js";import{S as Oe,i as Pt,p as Le}from"./chunk-G4S3XAFG.a06889d7.js";var Te={};P(Te,{addUniqueByHash:()=>De,filter:()=>Ie,find:()=>Je,hasAnyValue:()=>Be,hasKeyValue:()=>Fe,mapToArray:()=>Ke,mapToObj:()=>Ve,toArray:()=>Ue,transformMap:()=>Ge,zipKeyValue:()=>yt});var Fe=(e,r,n,i)=>e.has(r)?Array.from(e.values()).some(o=>i(o,n)):!1,De=(e,r,...n)=>{const i=e===void 0?new Map:new Map(e);return n.forEach(s=>{const o=r(s);i.has(o)||i.set(o,s)}),i},Be=(e,r,n)=>Array.from(e.entries()).some(s=>n(s[1],r)),Ie=(e,r)=>Array.from(e.values()).filter(r),Ue=e=>Array.from(e.values()),Je=(e,r)=>Array.from(e.values()).find(n=>r(n)),Ge=(e,r)=>new Map(Array.from(e,n=>[n[0],r(n[1],n[0])])),yt=(e,r)=>{if(e.length!==r.length)throw new Error("Keys and values arrays should be same length");return Object.fromEntries(e.map((n,i)=>[n,r[i]]))},Ve=e=>Array.from(e).reduce((r,[n,i])=>(r[n]=i,r),{}),Ke=(e,r)=>Array.from(e.entries()).map(n=>r(n[0],n[1])),Qe={};P(Qe,{setMutable:()=>At});var At=(e=void 0)=>new We(e),We=class extends Oe{constructor(e=void 0){super();$t(this,"store",new Map),$t(this,"keyString"),e===void 0&&(e=r=>typeof r=="string"?r:JSON.stringify(r)),this.keyString=e}add(...e){e.forEach(r=>{const n=this.has(r);this.store.set(this.keyString(r),r),super.fireEvent("add",{value:r,updated:n})})}values(){return this.store.values()}clear(){this.store.clear(),super.fireEvent("clear",!0)}delete(e){const r=this.store.delete(this.keyString(e));return r&&super.fireEvent("delete",e),r}has(e){return this.store.has(this.keyString(e))}toArray(){return Array.from(this.store.values())}},_n=(e,r=0,n=1)=>{if(Number.isNaN(e))throw new Error("v parameter is NaN");if(Number.isNaN(r))throw new Error("min parameter is NaN");if(Number.isNaN(n))throw new Error("max parameter is NaN");return e<r?r:e>n?n:e},$n=(e,r,n,i,s)=>(e-r)*(s-i)/(n-r)+i,Ct=(e,r)=>{if(!Number.isInteger(e))throw new Error(`v parameter must be an integer (${e})`);if(!Number.isInteger(r))throw new Error(`length parameter must be an integer (${r}, ${typeof r})`);return e=Math.round(e),e<0?0:e>=r?r-1:e},Xe=(e,r)=>e===r,Pn=e=>typeof e=="string"?e:JSON.stringify(e),Ye={};P(Ye,{average:()=>He,groupBy:()=>nr,guardArray:()=>qt,minMaxAvg:()=>Ze,randomElement:()=>jt,randomIndex:()=>Rt,randomPluck:()=>tr,shuffle:()=>er,without:()=>rr});var He=(...e)=>{if(e===void 0)throw new Error("data parameter is undefined");const r=e.filter(i=>typeof i=="number"&&!Number.isNaN(i));return r.reduce((i,s)=>i+s,0)/r.length},Ze=e=>{const r=e.filter(i=>typeof i=="number"&&!Number.isNaN(i)),n=r.reduce((i,s)=>i+s,0);return{total:n,max:Math.max(...r),min:Math.min(...r),avg:n/r.length}},qt=(e,r="?")=>{if(e===void 0)throw new Error(`Param '${r}' is undefined. Expected array.`);if(e===null)throw new Error(`Param '${r}' is null. Expected array.`);if(!Array.isArray(e))throw new Error(`Param '${r}' not an array as expected`)},Rt=e=>Math.floor(Math.random()*e.length),jt=e=>(qt(e,"array"),e[Math.floor(Math.random()*e.length)]),tr=(e,r=!1)=>{if(e===void 0)throw new Error("array is undefined");if(!Array.isArray(e))throw new Error("'array' param is not an array");if(e.length===0)return{value:void 0,array:[]};const n=Rt(e);if(r)return{value:e[n],array:e.splice(n,1)};{const i=[...e];return i.splice(n,1),{value:e[n],array:i}}},er=e=>{const r=[...e];for(let n=r.length-1;n>0;n--){const i=Math.floor(Math.random()*(n+1));[r[n],r[i]]=[r[i],r[n]]}return r},rr=(e,r,n=Xe)=>e.filter(i=>!n(i,r)),nr=(e,r)=>e.reduce((n,i)=>{const s=r(i),o=n.get(s);return o===void 0?n.set(s,[i]):o.push(i),n},new Map),ir={};P(ir,{Arcs:()=>kt,Beziers:()=>at,Circles:()=>Xt,Compound:()=>ae,Grids:()=>xe,Lines:()=>U,Paths:()=>nt,Points:()=>S,Polar:()=>ht,Rects:()=>J,degreeToRadian:()=>_t,radianToDegree:()=>En,radiansFromAxisX:()=>Nn});var kt={};P(kt,{bbox:()=>Bt,compute:()=>dt,distanceCenter:()=>wr,fromDegrees:()=>pr,guard:()=>xt,isArc:()=>Lt,isEquals:()=>zr,isPositioned:()=>L,length:()=>Dt,point:()=>st,toLine:()=>Ft,toPath:()=>gr,toSvg:()=>It});var S={};P(S,{Empty:()=>it,angleBetween:()=>or,bbox:()=>ar,diff:()=>dr,distance:()=>sr,equals:()=>cr,findMinimum:()=>Y,from:()=>yr,fromNumbers:()=>xr,guard:()=>E,isPoint:()=>O,lerp:()=>hr,multiply:()=>vr,subtract:()=>Ot,sum:()=>mr,toArray:()=>ur,toString:()=>fr,withinRange:()=>lr});var it=Object.freeze({x:0,y:0}),Y=(e,...r)=>{if(r.length===0)throw new Error("No points provided");let n=r[0];return r.forEach(i=>{n=e(n,i)}),n},sr=(e,r)=>(E(e,"a"),E(r,"b"),Math.hypot(r.x-e.x,r.y-e.y)),E=(e,r="Point")=>{if(e===void 0)throw new Error(`'${r}' is undefined. Expected {x,y} got ${JSON.stringify(e)}`);if(e===null)throw new Error(`'${r}' is null. Expected {x,y} got ${JSON.stringify(e)}`);if(e.x===void 0)throw new Error(`'${r}.x' is undefined. Expected {x,y} got ${JSON.stringify(e)}`);if(e.y===void 0)throw new Error(`'${r}.y' is undefined. Expected {x,y} got ${JSON.stringify(e)}`);if(typeof e.x!="number")throw new Error(`'${r}.x' must be a number`);if(typeof e.y!="number")throw new Error(`'${r}.y' must be a number`);if(Number.isNaN(e.x))throw new Error(`'${r}.x' is NaN`);if(Number.isNaN(e.y))throw new Error(`'${r}.y' is NaN`)},or=(e,r)=>Math.atan2(r.y-e.y,r.x-e.x),ar=(...e)=>{const r=Y((c,l)=>c.x<l.x?c:l,...e),n=Y((c,l)=>c.x>l.x?c:l,...e),i=Y((c,l)=>c.y<l.y?c:l,...e),s=Y((c,l)=>c.y>l.y?c:l,...e),o={x:r.x,y:i.y},a={x:n.x,y:i.y},u={x:n.x,y:s.y},f={x:r.x,y:s.y};return J.maxFromCorners(o,a,u,f)},O=e=>!(e.x===void 0||e.y===void 0),ur=e=>[e.x,e.y],fr=e=>e.z!==void 0?`(${e.x},${e.y},${e.z})`:`(${e.x},${e.y})`,cr=(e,r)=>e.x===r.x&&e.y===r.y,lr=(e,r,n)=>{typeof n=="number"&&(n={x:n,y:n});const i=Math.abs(r.x-e.x),s=Math.abs(r.y-e.y);return i<=n.x&&s<=n.y},hr=(e,r,n)=>({x:(1-n)*e.x+n*r.x,y:(1-n)*e.y+n*r.y}),yr=(e,r)=>{if(Array.isArray(e)){if(e.length!==2)throw new Error("Expected array of length two, got "+e.length);return Object.freeze({x:e[0],y:e[1]})}else{if(e===void 0)e=0;else if(Number.isNaN(e))throw new Error("x is NaN");if(r===void 0)r=0;else if(Number.isNaN(r))throw new Error("y is NaN");return Object.freeze({x:e,y:r})}},xr=(...e)=>{const r=[];if(Array.isArray(e[0]))e.forEach(n=>{if(n.length%2!=0)throw new Error("coords array should be even-numbered");r.push(Object.freeze({x:n[0],y:n[1]}))});else{if(e.length!==2)throw new Error("Expected two elements: [x,y]");r.push(Object.freeze({x:e[0],y:e[1]}))}return r},dr=function(e,r){return E(e,"a"),E(r,"b"),{x:e.x-r.x,y:e.y-r.y}},mr=function(e,r,n,i){let s,o;if(O(e))if(s=e,r===void 0&&(r=it),O(r))o=r;else{if(r===void 0)throw new Error("Expects x coordinate");o={x:r,y:n===void 0?0:n}}else if(!O(r)){if(r===void 0)throw new Error("Expected number as second param");if(s={x:e,y:r},n===void 0)throw new Error("Expects x coordiante");o={x:n,y:i===void 0?0:i}}if(s===void 0)throw new Error("ptA missing");if(o===void 0)throw new Error("ptB missing");return E(s,"a"),E(o,"b"),{x:s.x+o.x,y:s.y+o.y}},Ot=(e,r)=>({x:e.x-r.x,y:e.y-r.y});function vr(e,r,n){if(E(e,"a"),typeof r=="number")return typeof n=="undefined"&&(n=1),{x:e.x*r,y:e.y*n};if(O(r))return E(r,"b"),{x:e.x*r.x,y:e.y*r.y};throw new Error("Invalid arguments")}var Lt=e=>e.startRadian!==void 0&&e.endRadian!==void 0,L=e=>e.x!==void 0&&e.y!==void 0,Tt=Math.PI*2;function pr(e,r,n,i){const s={radius:e,startRadian:_t(r),endRadian:_t(n)};if(O(i)){E(i);const o={...s,x:i.x,y:i.y};return Object.freeze(o)}else return Object.freeze(s)}var Ft=e=>U.fromPoints(st(e,e.startRadian),st(e,e.endRadian)),st=(e,r,n)=>{if(r>e.endRadian)throw new Error("angleRadian beyond end angle of arc");if(r<e.startRadian)throw new Error("angleRadian beyond start angle of arc");return n===void 0&&(L(e)?n=e:n={x:0,y:0}),{x:Math.cos(r)*e.radius+n.x,y:Math.sin(r)*e.radius+n.y}},xt=e=>{if(e===void 0)throw new Error("Arc is undefined");if(L(e)&&E(e,"arc"),e.radius===void 0)throw new Error("Radius undefined");if(typeof e.radius!="number")throw new Error("Radius must be a number");if(Number.isNaN(e.radius))throw new Error("Radius is NaN");if(e.radius<=0)throw new Error("Radius must be greater than zero");if(e.startRadian===void 0)throw new Error("Arc is missing 'startRadian' field");if(e.endRadian===void 0)throw new Error("Arc is missing 'startRadian' field");if(Number.isNaN(e.endRadian))throw new Error("Arc endRadian is NaN");if(Number.isNaN(e.startRadian))throw new Error("Arc endRadian is NaN");if(e.startRadian>=e.endRadian)throw new Error("startRadian is expected to be les than endRadian")},dt=(e,r,n)=>(xt(e),st(e,e.startRadian+(e.endRadian-e.startRadian)*r,n)),gr=e=>(xt(e),Object.freeze({...e,compute:r=>dt(e,r),bbox:()=>Bt(e),length:()=>Dt(e),toSvgString:()=>It(e),kind:"arc"})),Dt=e=>Tt*e.radius*((e.startRadian-e.endRadian)/Tt),Bt=e=>{if(L(e)){const r=dt(e,.5),n=Ft(e);return S.bbox(r,n.a,n.b)}else return{width:e.radius*2,height:e.radius*2}},It=(e,r,n,i,s)=>{if(Lt(e))return L(e)?ot(e,e.radius,e.startRadian,e.endRadian,r):O(r)?ot(r,e.radius,e.startRadian,e.endRadian,n):ot({x:0,y:0},e.radius,e.startRadian,e.endRadian);if(n===void 0)throw new Error("startAngle undefined");if(i===void 0)throw new Error("endAngle undefined");if(O(e)){if(typeof r=="number"&&typeof n=="number"&&typeof i=="number")return ot(e,r,n,i,s);throw new Error("Expected (point, number, number, number). Missing a number param.")}else throw new Error("Expected (point, number, number, number). Missing first point.")},ot=(e,r,n,i,s)=>{(s===void 0||typeof s!="object")&&(s={});const o=i-n==360,a=ht.toCartesian(r,i-.01,e),u=ht.toCartesian(r,n,e),{largeArc:f=!1,sweep:c=!1}=s,l=[`
    M ${a.x} ${a.y}
    A ${r} ${r} 0 ${f?"1":"0"} ${c?"1":"0"} ${u.x} ${u.y},
  `];return o&&l.push("z"),l},wr=(e,r)=>S.distance(e,r),zr=(e,r)=>e.radius!==r.radius?!1:L(e)&&L(r)?!(e.x!==r.x||e.y!==r.y||e.z!==r.z):!(!(!L(e)&&!L(r))||e.endRadian!==r.endRadian||e.startRadian!==r.startRadian),at={};P(at,{computeQuadraticSimple:()=>Ar,cubic:()=>qr,isCubicBezier:()=>Kt,isQuadraticBezier:()=>Vt,quadratic:()=>Wt,quadraticBend:()=>Pr,quadraticSimple:()=>pt,quadraticToSvgString:()=>Qt,toPath:()=>Cr});var{abs:H,cos:T,sin:Q,acos:br,atan2:Z,sqrt:B,pow:q}=Math;function tt(e){return e<0?-q(-e,1/3):q(e,1/3)}var Ut=Math.PI,ut=2*Ut,I=Ut/2,Er=1e-6,mt=Number.MAX_SAFE_INTEGER||9007199254740991,vt=Number.MIN_SAFE_INTEGER||-9007199254740991,Nr={x:0,y:0,z:0},h={Tvalues:[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213],Cvalues:[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872],arcfn:function(e,r){const n=r(e);let i=n.x*n.x+n.y*n.y;return typeof n.z!="undefined"&&(i+=n.z*n.z),B(i)},compute:function(e,r,n){if(e===0)return r[0].t=0,r[0];const i=r.length-1;if(e===1)return r[i].t=1,r[i];const s=1-e;let o=r;if(i===0)return r[0].t=e,r[0];if(i===1){const u={x:s*o[0].x+e*o[1].x,y:s*o[0].y+e*o[1].y,t:e};return n&&(u.z=s*o[0].z+e*o[1].z),u}if(i<4){let u=s*s,f=e*e,c,l,y,x=0;i===2?(o=[o[0],o[1],o[2],Nr],c=u,l=s*e*2,y=f):i===3&&(c=u*s,l=u*e*3,y=s*f*3,x=e*f);const m={x:c*o[0].x+l*o[1].x+y*o[2].x+x*o[3].x,y:c*o[0].y+l*o[1].y+y*o[2].y+x*o[3].y,t:e};return n&&(m.z=c*o[0].z+l*o[1].z+y*o[2].z+x*o[3].z),m}const a=JSON.parse(JSON.stringify(r));for(;a.length>1;){for(let u=0;u<a.length-1;u++)a[u]={x:a[u].x+(a[u+1].x-a[u].x)*e,y:a[u].y+(a[u+1].y-a[u].y)*e},typeof a[u].z!="undefined"&&(a[u]=a[u].z+(a[u+1].z-a[u].z)*e);a.splice(a.length-1,1)}return a[0].t=e,a[0]},computeWithRatios:function(e,r,n,i){const s=1-e,o=n,a=r;let u=o[0],f=o[1],c=o[2],l=o[3],y;if(u*=s,f*=e,a.length===2)return y=u+f,{x:(u*a[0].x+f*a[1].x)/y,y:(u*a[0].y+f*a[1].y)/y,z:i?(u*a[0].z+f*a[1].z)/y:!1,t:e};if(u*=s,f*=2*s,c*=e*e,a.length===3)return y=u+f+c,{x:(u*a[0].x+f*a[1].x+c*a[2].x)/y,y:(u*a[0].y+f*a[1].y+c*a[2].y)/y,z:i?(u*a[0].z+f*a[1].z+c*a[2].z)/y:!1,t:e};if(u*=s,f*=1.5*s,c*=3*s,l*=e*e*e,a.length===4)return y=u+f+c+l,{x:(u*a[0].x+f*a[1].x+c*a[2].x+l*a[3].x)/y,y:(u*a[0].y+f*a[1].y+c*a[2].y+l*a[3].y)/y,z:i?(u*a[0].z+f*a[1].z+c*a[2].z+l*a[3].z)/y:!1,t:e}},derive:function(e,r){const n=[];for(let i=e,s=i.length,o=s-1;s>1;s--,o--){const a=[];for(let u=0,f;u<o;u++)f={x:o*(i[u+1].x-i[u].x),y:o*(i[u+1].y-i[u].y)},r&&(f.z=o*(i[u+1].z-i[u].z)),a.push(f);n.push(a),i=a}return n},between:function(e,r,n){return r<=e&&e<=n||h.approximately(e,r)||h.approximately(e,n)},approximately:function(e,r,n){return H(e-r)<=(n||Er)},length:function(e){const r=.5,n=h.Tvalues.length;let i=0;for(let s=0,o;s<n;s++)o=r*h.Tvalues[s]+r,i+=h.Cvalues[s]*h.arcfn(o,e);return r*i},map:function(e,r,n,i,s){const o=n-r,a=s-i,u=e-r,f=u/o;return i+a*f},lerp:function(e,r,n){const i={x:r.x+e*(n.x-r.x),y:r.y+e*(n.y-r.y)};return r.z!==void 0&&n.z!==void 0&&(i.z=r.z+e*(n.z-r.z)),i},pointToString:function(e){let r=e.x+"/"+e.y;return typeof e.z!="undefined"&&(r+="/"+e.z),r},pointsToString:function(e){return"["+e.map(h.pointToString).join(", ")+"]"},copy:function(e){return JSON.parse(JSON.stringify(e))},angle:function(e,r,n){const i=r.x-e.x,s=r.y-e.y,o=n.x-e.x,a=n.y-e.y,u=i*a-s*o,f=i*o+s*a;return Z(u,f)},round:function(e,r){const n=""+e,i=n.indexOf(".");return parseFloat(n.substring(0,i+1+r))},dist:function(e,r){const n=e.x-r.x,i=e.y-r.y;return B(n*n+i*i)},closest:function(e,r){let n=q(2,63),i,s;return e.forEach(function(o,a){s=h.dist(r,o),s<n&&(n=s,i=a)}),{mdist:n,mpos:i}},abcratio:function(e,r){if(r!==2&&r!==3)return!1;if(typeof e=="undefined")e=.5;else if(e===0||e===1)return e;const n=q(e,r)+q(1-e,r),i=n-1;return H(i/n)},projectionratio:function(e,r){if(r!==2&&r!==3)return!1;if(typeof e=="undefined")e=.5;else if(e===0||e===1)return e;const n=q(1-e,r),i=q(e,r)+n;return n/i},lli8:function(e,r,n,i,s,o,a,u){const f=(e*i-r*n)*(s-a)-(e-n)*(s*u-o*a),c=(e*i-r*n)*(o-u)-(r-i)*(s*u-o*a),l=(e-n)*(o-u)-(r-i)*(s-a);return l==0?!1:{x:f/l,y:c/l}},lli4:function(e,r,n,i){const s=e.x,o=e.y,a=r.x,u=r.y,f=n.x,c=n.y,l=i.x,y=i.y;return h.lli8(s,o,a,u,f,c,l,y)},lli:function(e,r){return h.lli4(e,e.c,r,r.c)},makeline:function(e,r){return new g(e.x,e.y,(e.x+r.x)/2,(e.y+r.y)/2,r.x,r.y)},findbbox:function(e){let r=mt,n=mt,i=vt,s=vt;return e.forEach(function(o){const a=o.bbox();r>a.x.min&&(r=a.x.min),n>a.y.min&&(n=a.y.min),i<a.x.max&&(i=a.x.max),s<a.y.max&&(s=a.y.max)}),{x:{min:r,mid:(r+i)/2,max:i,size:i-r},y:{min:n,mid:(n+s)/2,max:s,size:s-n}}},shapeintersections:function(e,r,n,i,s){if(!h.bboxoverlap(r,i))return[];const o=[],a=[e.startcap,e.forward,e.back,e.endcap],u=[n.startcap,n.forward,n.back,n.endcap];return a.forEach(function(f){f.virtual||u.forEach(function(c){if(c.virtual)return;const l=f.intersects(c,s);l.length>0&&(l.c1=f,l.c2=c,l.s1=e,l.s2=n,o.push(l))})}),o},makeshape:function(e,r,n){const i=r.points.length,s=e.points.length,o=h.makeline(r.points[i-1],e.points[0]),a=h.makeline(e.points[s-1],r.points[0]),u={startcap:o,forward:e,back:r,endcap:a,bbox:h.findbbox([o,e,r,a])};return u.intersections=function(f){return h.shapeintersections(u,u.bbox,f,f.bbox,n)},u},getminmax:function(e,r,n){if(!n)return{min:0,max:0};let i=mt,s=vt,o,a;n.indexOf(0)===-1&&(n=[0].concat(n)),n.indexOf(1)===-1&&n.push(1);for(let u=0,f=n.length;u<f;u++)o=n[u],a=e.get(o),a[r]<i&&(i=a[r]),a[r]>s&&(s=a[r]);return{min:i,mid:(i+s)/2,max:s,size:s-i}},align:function(e,r){const n=r.p1.x,i=r.p1.y,s=-Z(r.p2.y-i,r.p2.x-n),o=function(a){return{x:(a.x-n)*T(s)-(a.y-i)*Q(s),y:(a.x-n)*Q(s)+(a.y-i)*T(s)}};return e.map(o)},roots:function(e,r){r=r||{p1:{x:0,y:0},p2:{x:1,y:0}};const n=e.length-1,i=h.align(e,r),s=function(d){return 0<=d&&d<=1};if(n===2){const d=i[0].y,z=i[1].y,N=i[2].y,$=d-2*z+N;if($!==0){const k=-B(z*z-d*N),R=-d+z,X=-(k+R)/$,G=-(-k+R)/$;return[X,G].filter(s)}else if(z!==N&&$===0)return[(2*z-N)/(2*z-2*N)].filter(s);return[]}const o=i[0].y,a=i[1].y,u=i[2].y,f=i[3].y;let c=-o+3*a-3*u+f,l=3*o-6*a+3*u,y=-3*o+3*a,x=o;if(h.approximately(c,0)){if(h.approximately(l,0))return h.approximately(y,0)?[]:[-x/y].filter(s);const d=B(y*y-4*l*x),z=2*l;return[(d-y)/z,(-y-d)/z].filter(s)}l/=c,y/=c,x/=c;const m=(3*y-l*l)/3,w=m/3,A=(2*l*l*l-9*l*y+27*x)/27,b=A/2,j=b*b+w*w*w;let C,M,v,p,_;if(j<0){const d=-m/3,z=d*d*d,N=B(z),$=-A/(2*N),k=$<-1?-1:$>1?1:$,R=br(k),X=tt(N),G=2*X;return v=G*T(R/3)-l/3,p=G*T((R+ut)/3)-l/3,_=G*T((R+2*ut)/3)-l/3,[v,p,_].filter(s)}else{if(j===0)return C=b<0?tt(-b):-tt(b),v=2*C-l/3,p=-C-l/3,[v,p].filter(s);{const d=B(j);return C=tt(-b+d),M=tt(b+d),[C-M-l/3].filter(s)}}},droots:function(e){if(e.length===3){const r=e[0],n=e[1],i=e[2],s=r-2*n+i;if(s!==0){const o=-B(n*n-r*i),a=-r+n,u=-(o+a)/s,f=-(-o+a)/s;return[u,f]}else if(n!==i&&s===0)return[(2*n-i)/(2*(n-i))];return[]}if(e.length===2){const r=e[0],n=e[1];return r!==n?[r/(r-n)]:[]}return[]},curvature:function(e,r,n,i,s){let o,a,u,f,c=0,l=0;const y=h.compute(e,r),x=h.compute(e,n),m=y.x*y.x+y.y*y.y;if(i?(o=B(q(y.y*x.z-x.y*y.z,2)+q(y.z*x.x-x.z*y.x,2)+q(y.x*x.y-x.x*y.y,2)),a=q(m+y.z*y.z,3/2)):(o=y.x*x.y-y.y*x.x,a=q(m,3/2)),o===0||a===0)return{k:0,r:0};if(c=o/a,l=a/o,!s){const w=h.curvature(e-.001,r,n,i,!0).k,A=h.curvature(e+.001,r,n,i,!0).k;f=(A-c+(c-w))/2,u=(H(A-c)+H(c-w))/2}return{k:c,r:l,dk:f,adk:u}},inflections:function(e){if(e.length<4)return[];const r=h.align(e,{p1:e[0],p2:e.slice(-1)[0]}),n=r[2].x*r[1].y,i=r[3].x*r[1].y,s=r[1].x*r[2].y,o=r[3].x*r[2].y,a=18*(-3*n+2*i+3*s-o),u=18*(3*n-i-3*s),f=18*(s-n);if(h.approximately(a,0)){if(!h.approximately(u,0)){let x=-f/u;if(0<=x&&x<=1)return[x]}return[]}const c=u*u-4*a*f,l=Math.sqrt(c),y=2*a;return h.approximately(y,0)?[]:[(l-u)/y,-(u+l)/y].filter(function(x){return 0<=x&&x<=1})},bboxoverlap:function(e,r){const n=["x","y"],i=n.length;for(let s=0,o,a,u,f;s<i;s++)if(o=n[s],a=e[o].mid,u=r[o].mid,f=(e[o].size+r[o].size)/2,H(a-u)>=f)return!1;return!0},expandbox:function(e,r){r.x.min<e.x.min&&(e.x.min=r.x.min),r.y.min<e.y.min&&(e.y.min=r.y.min),r.z&&r.z.min<e.z.min&&(e.z.min=r.z.min),r.x.max>e.x.max&&(e.x.max=r.x.max),r.y.max>e.y.max&&(e.y.max=r.y.max),r.z&&r.z.max>e.z.max&&(e.z.max=r.z.max),e.x.mid=(e.x.min+e.x.max)/2,e.y.mid=(e.y.min+e.y.max)/2,e.z&&(e.z.mid=(e.z.min+e.z.max)/2),e.x.size=e.x.max-e.x.min,e.y.size=e.y.max-e.y.min,e.z&&(e.z.size=e.z.max-e.z.min)},pairiteration:function(e,r,n){const i=e.bbox(),s=r.bbox(),o=1e5,a=n||.5;if(i.x.size+i.y.size<a&&s.x.size+s.y.size<a)return[(o*(e._t1+e._t2)/2|0)/o+"/"+(o*(r._t1+r._t2)/2|0)/o];let u=e.split(.5),f=r.split(.5),c=[{left:u.left,right:f.left},{left:u.left,right:f.right},{left:u.right,right:f.right},{left:u.right,right:f.left}];c=c.filter(function(y){return h.bboxoverlap(y.left.bbox(),y.right.bbox())});let l=[];return c.length===0||(c.forEach(function(y){l=l.concat(h.pairiteration(y.left,y.right,a))}),l=l.filter(function(y,x){return l.indexOf(y)===x})),l},getccenter:function(e,r,n){const i=r.x-e.x,s=r.y-e.y,o=n.x-r.x,a=n.y-r.y,u=i*T(I)-s*Q(I),f=i*Q(I)+s*T(I),c=o*T(I)-a*Q(I),l=o*Q(I)+a*T(I),y=(e.x+r.x)/2,x=(e.y+r.y)/2,m=(r.x+n.x)/2,w=(r.y+n.y)/2,A=y+u,b=x+f,j=m+c,C=w+l,M=h.lli8(y,x,A,b,m,w,j,C),v=h.dist(M,e);let p=Z(e.y-M.y,e.x-M.x),_=Z(r.y-M.y,r.x-M.x),d=Z(n.y-M.y,n.x-M.x),z;return p<d?((p>_||_>d)&&(p+=ut),p>d&&(z=d,d=p,p=z)):d<_&&_<p?(z=d,d=p,p=z):d+=ut,M.s=p,M.e=d,M.r=v,M},numberSort:function(e,r){return e-r}},ft=class{constructor(e){this.curves=[],this._3d=!1,e&&(this.curves=e,this._3d=this.curves[0]._3d)}valueOf(){return this.toString()}toString(){return"["+this.curves.map(function(e){return h.pointsToString(e.points)}).join(", ")+"]"}addCurve(e){this.curves.push(e),this._3d=this._3d||e._3d}length(){return this.curves.map(function(e){return e.length()}).reduce(function(e,r){return e+r})}curve(e){return this.curves[e]}bbox(){const e=this.curves;for(var r=e[0].bbox(),n=1;n<e.length;n++)h.expandbox(r,e[n].bbox());return r}offset(e){const r=[];return this.curves.forEach(function(n){r.push(...n.offset(e))}),new ft(r)}},{abs:et,min:Jt,max:Gt,cos:Mr,sin:Sr,acos:_r,sqrt:rt}=Math,$r=Math.PI,g=class{constructor(e){let r=e&&e.forEach?e:Array.from(arguments).slice(),n=!1;if(typeof r[0]=="object"){n=r.length;const x=[];r.forEach(function(m){["x","y","z"].forEach(function(w){typeof m[w]!="undefined"&&x.push(m[w])})}),r=x}let i=!1;const s=r.length;if(n){if(n>4){if(arguments.length!==1)throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");i=!0}}else if(s!==6&&s!==8&&s!==9&&s!==12&&arguments.length!==1)throw new Error("Only new Bezier(point[]) is accepted for 4th and higher order curves");const o=this._3d=!i&&(s===9||s===12)||e&&e[0]&&typeof e[0].z!="undefined",a=this.points=[];for(let x=0,m=o?3:2;x<s;x+=m){var u={x:r[x],y:r[x+1]};o&&(u.z=r[x+2]),a.push(u)}const f=this.order=a.length-1,c=this.dims=["x","y"];o&&c.push("z"),this.dimlen=c.length;const l=h.align(a,{p1:a[0],p2:a[f]}),y=h.dist(a[0],a[f]);this._linear=l.reduce((x,m)=>x+et(m.y),0)<y/50,this._lut=[],this._t1=0,this._t2=1,this.update()}static quadraticFromPoints(e,r,n,i){if(typeof i=="undefined"&&(i=.5),i===0)return new g(r,r,n);if(i===1)return new g(e,r,r);const s=g.getABC(2,e,r,n,i);return new g(e,s.A,n)}static cubicFromPoints(e,r,n,i,s){typeof i=="undefined"&&(i=.5);const o=g.getABC(3,e,r,n,i);typeof s=="undefined"&&(s=h.dist(r,o.C));const a=s*(1-i)/i,u=h.dist(e,n),f=(n.x-e.x)/u,c=(n.y-e.y)/u,l=s*f,y=s*c,x=a*f,m=a*c,w={x:r.x-l,y:r.y-y},A={x:r.x+x,y:r.y+m},b=o.A,j={x:b.x+(w.x-b.x)/(1-i),y:b.y+(w.y-b.y)/(1-i)},C={x:b.x+(A.x-b.x)/i,y:b.y+(A.y-b.y)/i},M={x:e.x+(j.x-e.x)/i,y:e.y+(j.y-e.y)/i},v={x:n.x+(C.x-n.x)/(1-i),y:n.y+(C.y-n.y)/(1-i)};return new g(e,M,v,n)}static getUtils(){return h}getUtils(){return g.getUtils()}static get PolyBezier(){return ft}valueOf(){return this.toString()}toString(){return h.pointsToString(this.points)}toSVG(){if(this._3d)return!1;const e=this.points,r=e[0].x,n=e[0].y,i=["M",r,n,this.order===2?"Q":"C"];for(let s=1,o=e.length;s<o;s++)i.push(e[s].x),i.push(e[s].y);return i.join(" ")}setRatios(e){if(e.length!==this.points.length)throw new Error("incorrect number of ratio values");this.ratios=e,this._lut=[]}verify(){const e=this.coordDigest();e!==this._print&&(this._print=e,this.update())}coordDigest(){return this.points.map(function(e,r){return""+r+e.x+e.y+(e.z?e.z:0)}).join("")}update(){this._lut=[],this.dpoints=h.derive(this.points,this._3d),this.computedirection()}computedirection(){const e=this.points,r=h.angle(e[0],e[this.order],e[1]);this.clockwise=r>0}length(){return h.length(this.derivative.bind(this))}static getABC(e=2,r,n,i,s=.5){const o=h.projectionratio(s,e),a=1-o,u={x:o*r.x+a*i.x,y:o*r.y+a*i.y},f=h.abcratio(s,e);return{A:{x:n.x+(n.x-u.x)/f,y:n.y+(n.y-u.y)/f},B:n,C:u,S:r,E:i}}getABC(e,r){r=r||this.get(e);let n=this.points[0],i=this.points[this.order];return g.getABC(this.order,n,r,i,e)}getLUT(e){if(this.verify(),e=e||100,this._lut.length===e)return this._lut;this._lut=[],e++,this._lut=[];for(let r=0,n,i;r<e;r++)i=r/(e-1),n=this.compute(i),n.t=i,this._lut.push(n);return this._lut}on(e,r){r=r||5;const n=this.getLUT(),i=[];for(let s=0,o,a=0;s<n.length;s++)o=n[s],h.dist(o,e)<r&&(i.push(o),a+=s/n.length);return i.length?t/=i.length:!1}project(e){const r=this.getLUT(),n=r.length-1,i=h.closest(r,e),s=i.mpos,o=(s-1)/n,a=(s+1)/n,u=.1/n;let f=i.mdist,c=o,l=c,y;f+=1;for(let x;c<a+u;c+=u)y=this.compute(c),x=h.dist(e,y),x<f&&(f=x,l=c);return l=l<0?0:l>1?1:l,y=this.compute(l),y.t=l,y.d=f,y}get(e){return this.compute(e)}point(e){return this.points[e]}compute(e){return this.ratios?h.computeWithRatios(e,this.points,this.ratios,this._3d):h.compute(e,this.points,this._3d,this.ratios)}raise(){const e=this.points,r=[e[0]],n=e.length;for(let i=1,s,o;i<n;i++)s=e[i],o=e[i-1],r[i]={x:(n-i)/n*s.x+i/n*o.x,y:(n-i)/n*s.y+i/n*o.y};return r[n]=e[n-1],new g(r)}derivative(e){return h.compute(e,this.dpoints[0],this._3d)}dderivative(e){return h.compute(e,this.dpoints[1],this._3d)}align(){let e=this.points;return new g(h.align(e,{p1:e[0],p2:e[e.length-1]}))}curvature(e){return h.curvature(e,this.dpoints[0],this.dpoints[1],this._3d)}inflections(){return h.inflections(this.points)}normal(e){return this._3d?this.__normal3(e):this.__normal2(e)}__normal2(e){const r=this.derivative(e),n=rt(r.x*r.x+r.y*r.y);return{x:-r.y/n,y:r.x/n}}__normal3(e){const r=this.derivative(e),n=this.derivative(e+.01),i=rt(r.x*r.x+r.y*r.y+r.z*r.z),s=rt(n.x*n.x+n.y*n.y+n.z*n.z);r.x/=i,r.y/=i,r.z/=i,n.x/=s,n.y/=s,n.z/=s;const o={x:n.y*r.z-n.z*r.y,y:n.z*r.x-n.x*r.z,z:n.x*r.y-n.y*r.x},a=rt(o.x*o.x+o.y*o.y+o.z*o.z);o.x/=a,o.y/=a,o.z/=a;const u=[o.x*o.x,o.x*o.y-o.z,o.x*o.z+o.y,o.x*o.y+o.z,o.y*o.y,o.y*o.z-o.x,o.x*o.z-o.y,o.y*o.z+o.x,o.z*o.z];return{x:u[0]*r.x+u[1]*r.y+u[2]*r.z,y:u[3]*r.x+u[4]*r.y+u[5]*r.z,z:u[6]*r.x+u[7]*r.y+u[8]*r.z}}hull(e){let r=this.points,n=[],i=[],s=0;for(i[s++]=r[0],i[s++]=r[1],i[s++]=r[2],this.order===3&&(i[s++]=r[3]);r.length>1;){n=[];for(let o=0,a,u=r.length-1;o<u;o++)a=h.lerp(e,r[o],r[o+1]),i[s++]=a,n.push(a);r=n}return i}split(e,r){if(e===0&&!!r)return this.split(r).left;if(r===1)return this.split(e).right;const n=this.hull(e),i={left:this.order===2?new g([n[0],n[3],n[5]]):new g([n[0],n[4],n[7],n[9]]),right:this.order===2?new g([n[5],n[4],n[2]]):new g([n[9],n[8],n[6],n[3]]),span:n};return i.left._t1=h.map(0,0,1,this._t1,this._t2),i.left._t2=h.map(e,0,1,this._t1,this._t2),i.right._t1=h.map(e,0,1,this._t1,this._t2),i.right._t2=h.map(1,0,1,this._t1,this._t2),r?(r=h.map(r,e,1,0,1),i.right.split(r).left):i}extrema(){const e={};let r=[];return this.dims.forEach(function(n){let i=function(o){return o[n]},s=this.dpoints[0].map(i);e[n]=h.droots(s),this.order===3&&(s=this.dpoints[1].map(i),e[n]=e[n].concat(h.droots(s))),e[n]=e[n].filter(function(o){return o>=0&&o<=1}),r=r.concat(e[n].sort(h.numberSort))}.bind(this)),e.values=r.sort(h.numberSort).filter(function(n,i){return r.indexOf(n)===i}),e}bbox(){const e=this.extrema(),r={};return this.dims.forEach(function(n){r[n]=h.getminmax(this,n,e[n])}.bind(this)),r}overlaps(e){const r=this.bbox(),n=e.bbox();return h.bboxoverlap(r,n)}offset(e,r){if(typeof r!="undefined"){const n=this.get(e),i=this.normal(e),s={c:n,n:i,x:n.x+i.x*r,y:n.y+i.y*r};return this._3d&&(s.z=n.z+i.z*r),s}if(this._linear){const n=this.normal(0),i=this.points.map(function(s){const o={x:s.x+e*n.x,y:s.y+e*n.y};return s.z&&n.z&&(o.z=s.z+e*n.z),o});return[new g(i)]}return this.reduce().map(function(n){return n._linear?n.offset(e)[0]:n.scale(e)})}simple(){if(this.order===3){const i=h.angle(this.points[0],this.points[3],this.points[1]),s=h.angle(this.points[0],this.points[3],this.points[2]);if(i>0&&s<0||i<0&&s>0)return!1}const e=this.normal(0),r=this.normal(1);let n=e.x*r.x+e.y*r.y;return this._3d&&(n+=e.z*r.z),et(_r(n))<$r/3}reduce(){let e,r=0,n=0,i=.01,s,o=[],a=[],u=this.extrema().values;for(u.indexOf(0)===-1&&(u=[0].concat(u)),u.indexOf(1)===-1&&u.push(1),r=u[0],e=1;e<u.length;e++)n=u[e],s=this.split(r,n),s._t1=r,s._t2=n,o.push(s),r=n;return o.forEach(function(f){for(r=0,n=0;n<=1;)for(n=r+i;n<=1+i;n+=i)if(s=f.split(r,n),!s.simple()){if(n-=i,et(r-n)<i)return[];s=f.split(r,n),s._t1=h.map(r,0,1,f._t1,f._t2),s._t2=h.map(n,0,1,f._t1,f._t2),a.push(s),r=n;break}r<1&&(s=f.split(r,1),s._t1=h.map(r,0,1,f._t1,f._t2),s._t2=f._t2,a.push(s))}),a}translate(e,r,n){n=typeof n=="number"?n:r;const i=this.order;let s=this.points.map((o,a)=>(1-a/i)*r+a/i*n);return new g(this.points.map((o,a)=>({x:o.x+e.x*s[a],y:o.y+e.y*s[a]})))}scale(e){const r=this.order;let n=!1;if(typeof e=="function"&&(n=e),n&&r===2)return this.raise().scale(n);const i=this.clockwise,s=this.points;if(this._linear)return this.translate(this.normal(0),n?n(0):e,n?n(1):e);const o=n?n(0):e,a=n?n(1):e,u=[this.offset(0,10),this.offset(1,10)],f=[],c=h.lli4(u[0],u[0].c,u[1],u[1].c);if(!c)throw new Error("cannot scale this curve. Try reducing it first.");return[0,1].forEach(function(l){const y=f[l*r]=h.copy(s[l*r]);y.x+=(l?a:o)*u[l].n.x,y.y+=(l?a:o)*u[l].n.y}),n?([0,1].forEach(function(l){if(!(r===2&&!!l)){var y=s[l+1],x={x:y.x-c.x,y:y.y-c.y},m=n?n((l+1)/r):e;n&&!i&&(m=-m);var w=rt(x.x*x.x+x.y*x.y);x.x/=w,x.y/=w,f[l+1]={x:y.x+m*x.x,y:y.y+m*x.y}}}),new g(f)):([0,1].forEach(l=>{if(r===2&&!!l)return;const y=f[l*r],x=this.derivative(l),m={x:y.x+x.x,y:y.y+x.y};f[l+1]=h.lli4(y,m,c,s[l+1])}),new g(f))}outline(e,r,n,i){if(r=r===void 0?e:r,this._linear){const v=this.normal(0),p=this.points[0],_=this.points[this.points.length-1];let d,z,N;n===void 0&&(n=e,i=r),d={x:p.x+v.x*e,y:p.y+v.y*e},N={x:_.x+v.x*n,y:_.y+v.y*n},z={x:(d.x+N.x)/2,y:(d.y+N.y)/2};const $=[d,z,N];d={x:p.x-v.x*r,y:p.y-v.y*r},N={x:_.x-v.x*i,y:_.y-v.y*i},z={x:(d.x+N.x)/2,y:(d.y+N.y)/2};const k=[N,z,d],R=h.makeline(k[2],$[0]),X=h.makeline($[2],k[0]),G=[R,new g($),X,new g(k)];return new ft(G)}const s=this.reduce(),o=s.length,a=[];let u=[],f,c=0,l=this.length();const y=typeof n!="undefined"&&typeof i!="undefined";function x(v,p,_,d,z){return function(N){const $=d/_,k=(d+z)/_,R=p-v;return h.map(N,0,1,v+$*R,v+k*R)}}s.forEach(function(v){const p=v.length();y?(a.push(v.scale(x(e,n,l,c,p))),u.push(v.scale(x(-r,-i,l,c,p)))):(a.push(v.scale(e)),u.push(v.scale(-r))),c+=p}),u=u.map(function(v){return f=v.points,f[3]?v.points=[f[3],f[2],f[1],f[0]]:v.points=[f[2],f[1],f[0]],v}).reverse();const m=a[0].points[0],w=a[o-1].points[a[o-1].points.length-1],A=u[o-1].points[u[o-1].points.length-1],b=u[0].points[0],j=h.makeline(A,m),C=h.makeline(w,b),M=[j].concat(a).concat([C]).concat(u);return new ft(M)}outlineshapes(e,r,n){r=r||e;const i=this.outline(e,r).curves,s=[];for(let o=1,a=i.length;o<a/2;o++){const u=h.makeshape(i[o],i[a-o],n);u.startcap.virtual=o>1,u.endcap.virtual=o<a/2-1,s.push(u)}return s}intersects(e,r){return e?e.p1&&e.p2?this.lineIntersects(e):(e instanceof g&&(e=e.reduce()),this.curveintersects(this.reduce(),e,r)):this.selfintersects(r)}lineIntersects(e){const r=Jt(e.p1.x,e.p2.x),n=Jt(e.p1.y,e.p2.y),i=Gt(e.p1.x,e.p2.x),s=Gt(e.p1.y,e.p2.y);return h.roots(this.points,e).filter(o=>{var a=this.get(o);return h.between(a.x,r,i)&&h.between(a.y,n,s)})}selfintersects(e){const r=this.reduce(),n=r.length-2,i=[];for(let s=0,o,a,u;s<n;s++)a=r.slice(s,s+1),u=r.slice(s+2),o=this.curveintersects(a,u,e),i.push(...o);return i}curveintersects(e,r,n){const i=[];e.forEach(function(o){r.forEach(function(a){o.overlaps(a)&&i.push({left:o,right:a})})});let s=[];return i.forEach(function(o){const a=h.pairiteration(o.left,o.right,n);a.length>0&&(s=s.concat(a))}),s}arcs(e){return e=e||.5,this._iterate(e,[])}_error(e,r,n,i){const s=(i-n)/4,o=this.get(n+s),a=this.get(i-s),u=h.dist(e,r),f=h.dist(e,o),c=h.dist(e,a);return et(f-u)+et(c-u)}_iterate(e,r){let n=0,i=1,s;do{s=0,i=1;let o=this.get(n),a,u,f,c,l=!1,y=!1,x,m=i,w=1;do if(y=l,c=f,m=(n+i)/2,a=this.get(m),u=this.get(i),f=h.getccenter(o,a,u),f.interval={start:n,end:i},l=this._error(f,o,n,i)<=e,x=y&&!l,x||(w=i),l){if(i>=1){if(f.interval.end=w=1,c=f,i>1){let b={x:f.x+f.r*Mr(f.e),y:f.y+f.r*Sr(f.e)};f.e+=h.angle({x:f.x,y:f.y},b,this.get(1))}break}i=i+(i-n)/2}else i=m;while(!x&&s++<100);if(s>=100)break;c=c||f,r.push(c),n=w}while(i<1);return r}},Vt=e=>e.quadratic!==void 0,Kt=e=>e.cubic1!==void 0&&e.cubic2!==void 0,Pr=(e,r,n=0)=>pt(e,r,n),pt=(e,r,n=0)=>{if(isNaN(n))throw Error("bend is NaN");if(n<-1||n>1)throw Error("Expects bend range of -1 to 1");const i=U.compute(e,r,.5);let s=i;r.y<e.y?s=n>0?{x:Math.min(e.x,r.x),y:Math.min(e.y,r.y)}:{x:Math.max(e.x,r.x),y:Math.max(e.y,r.y)}:s=n>0?{x:Math.max(e.x,r.x),y:Math.min(e.y,r.y)}:{x:Math.min(e.x,r.x),y:Math.max(e.y,r.y)};const o=U.compute(i,s,Math.abs(n));return Wt(e,r,o)},Ar=(e,r,n,i)=>{const s=pt(e,r,n);return new g(s.a,s.quadratic,s.b).compute(i)},Qt=(e,r,n)=>[`M ${e.x} ${e.y} Q ${n.x} ${n.y} ${r.x} ${r.y}`],Cr=e=>{if(Kt(e))return Rr(e);if(Vt(e))return jr(e);throw new Error("Unknown bezier type")},qr=(e,r,n,i)=>({a:Object.freeze(e),b:Object.freeze(r),cubic1:Object.freeze(n),cubic2:Object.freeze(i)}),Rr=e=>{const{a:r,cubic1:n,cubic2:i,b:s}=e,o=new g(r,n,i,s);return Object.freeze({...e,length:()=>o.length(),compute:a=>o.compute(a),bbox:()=>{const{x:a,y:u}=o.bbox(),f=a.size,c=u.size;if(f===void 0)throw new Error("x.size not present on calculated bbox");if(c===void 0)throw new Error("x.size not present on calculated bbox");return J.fromTopLeft({x:a.min,y:u.min},f,c)},toString:()=>o.toString(),toSvgString:()=>["brrup"],kind:"bezier/cubic"})},Wt=(e,r,n)=>({a:Object.freeze(e),b:Object.freeze(r),quadratic:Object.freeze(n)}),jr=e=>{const{a:r,b:n,quadratic:i}=e,s=new g(r,i,n);return Object.freeze({...e,length:()=>s.length(),compute:o=>s.compute(o),bbox:()=>{const{x:o,y:a}=s.bbox(),u=o.size,f=a.size;if(u===void 0)throw new Error("x.size not present on calculated bbox");if(f===void 0)throw new Error("x.size not present on calculated bbox");return J.fromTopLeft({x:o.min,y:a.min},u,f)},toString:()=>s.toString(),toSvgString:()=>Qt(r,n,i),kind:"bezier/quadratic"})},Xt={};P(Xt,{bbox:()=>re,compute:()=>te,distanceCenter:()=>se,intersectionLine:()=>Tr,intersections:()=>ie,isCircle:()=>Ht,isContainedBy:()=>ne,isEquals:()=>gt,isIntersecting:()=>Or,isPositioned:()=>F,length:()=>ee,point:()=>Zt,toPath:()=>Lr,toSvg:()=>oe});var Yt=Math.PI*2,F=e=>e.x!==void 0&&e.y!==void 0,Ht=e=>e.radius!==void 0,Zt=(e,r,n)=>(n===void 0&&(F(e)?n=e:n={x:0,y:0}),{x:Math.cos(-r)*e.radius+n.x,y:Math.sin(-r)*e.radius+n.y}),kr=e=>{if(F(e)&&E(e,"circle"),Number.isNaN(e.radius))throw new Error("Radius is NaN");if(e.radius<=0)throw new Error("Radius must be greater than zero")},te=(e,r)=>Zt(e,r*Yt),ee=e=>Yt*e.radius,re=e=>F(e)?J.fromCenter(e,e.radius*2,e.radius*2):{width:e.radius*2,height:e.radius*2},ne=(e,r)=>se(e,r)<Math.abs(e.radius-r.radius),Or=(e,r)=>gt(e,r)||ne(e,r)?!0:ie(e,r).length===2,ie=(e,r)=>{const n=S.diff(r,e),i=Math.sqrt(n.y*n.y+n.x*n.x);if(i>e.radius+r.radius)return[];if(i<Math.abs(e.radius-r.radius))return[];if(gt(e,r))return[];const s=(e.radius*e.radius-r.radius*r.radius+i*i)/(2*i),o={x:e.x+n.x*s/i,y:e.y+n.y*s/i},a=Math.sqrt(e.radius*e.radius-s*s),u={x:-n.y*(a/i),y:n.x*(a/i)};return[S.sum(o,u),S.diff(o,u)]},gt=(e,r)=>e.radius!==r.radius?!1:F(e)&&F(r)?!(e.x!==r.x||e.y!==r.y||e.z!==r.z):(!F(e)&&!F(r),!1),se=(e,r)=>S.distance(e,r),oe=(e,r,n)=>{if(Ht(e)){if(n!==void 0)return wt(e.radius,n,r);if(F(e))return wt(e.radius,e,r);throw new Error("origin parameter needed for non-positioned circle")}else{if(n!==void 0)return wt(e,n,r);throw new Error("origin parameter needed")}},wt=(e,r,n)=>{const{x:i,y:s}=r,o=n?"1":"0";return`
    M ${i}, ${s}
    m -${e}, 0
    a ${e},${e} 0 1,${o} ${e*2},0
    a ${e},${e} 0 1,${o} -${e*2},0
  `.split(`
`)},Lr=e=>(kr(e),Object.freeze({...e,compute:r=>te(e,r),bbox:()=>re(e),length:()=>ee(e),toSvgString:(r=!0)=>oe(e,r),kind:"circular"})),Tr=(e,r)=>{const n={x:r.b.x-r.a.x,y:r.b.y-r.a.y},i={x:r.a.x-e.x,y:r.a.y-e.y},s=(n.x*i.x+n.y*i.y)*-2,o=2*(n.x*n.x+n.y*n.y),a=Math.sqrt(s*s-2*o*(i.x*i.x+i.y*i.y-e.radius*e.radius));if(isNaN(a))return[];const u=(s-a)/o,f=(s+a)/o,c=[];return u<=1&&u>=0&&c.push({x:r.a.x+n.x*u,y:r.a.y+n.y*u}),f<=1&&f>=0&&c.push({x:r.a.x+n.x*f,y:r.a.y+n.y*f}),c},ae={};P(ae,{bbox:()=>fe,compute:()=>ue,computeDimensions:()=>zt,fromPaths:()=>ye,guardContinuous:()=>le,setSegment:()=>Fr,toString:()=>ce,toSvgString:()=>he});var Fr=(e,r,n)=>{const i=e.segments;return i[r]=n,ye(...i)},ue=(e,r,n,i)=>{i===void 0&&(i=zt(e));const s=r*(n?i.totalWidth:i.totalLength);let o=0;const a=n?i.widths:i.lengths;for(let u=0;u<a.length;u++)if(o+a[u]>=s){let c=(s-o)/a[u];return c>1&&(c=1),e[u].compute(c)}else o+=a[u];return{x:0,y:0}},zt=e=>{const r=e.map(o=>o.bbox().width),n=e.map(o=>o.length());let i=0,s=0;for(let o=0;o<n.length;o++)i+=n[o];for(let o=0;o<r.length;o++)s+=r[o];return{totalLength:i,totalWidth:s,widths:r,lengths:n}},fe=e=>{const n=e.map(i=>i.bbox()).map(i=>J.getCorners(i)).flat();return S.bbox(...n)},ce=e=>e.map(r=>r.toString()).join(", "),le=e=>{let r=nt.getEnd(e[0]);for(let n=1;n<e.length;n++){const i=nt.getStart(e[n]);if(!S.equals(i,r))throw new Error("Path index "+n+" does not start at prior path end. Start: "+i.x+","+i.y+" expected: "+r.x+","+r.y);r=nt.getEnd(e[n])}},he=e=>e.flatMap(r=>r.toSvgString()),ye=(...e)=>{le(e);const r=zt(e);return Object.freeze({segments:e,length:()=>r.totalLength,compute:(n,i=!1)=>ue(e,n,i,r),bbox:()=>fe(e),toString:()=>ce(e),toSvgString:()=>he(e),kind:"compound"})},xe={};P(xe,{allDirections:()=>Et,cellAtPoint:()=>Jr,cellEquals:()=>me,cellKeyString:()=>de,cellMiddle:()=>Gr,cells:()=>ze,crossDirections:()=>pe,getLine:()=>Vr,getVectorFromCardinal:()=>Nt,guard:()=>D,inside:()=>ve,isEqual:()=>Ir,neighbours:()=>ge,offset:()=>Mt,offsetCardinals:()=>Kr,rectangleForCell:()=>Ur,simpleLine:()=>Qr,visitFor:()=>en,visitor:()=>V,visitorBreadth:()=>Yr,visitorColumn:()=>rn,visitorDepth:()=>Xr,visitorRandom:()=>Zr,visitorRandomContiguous:()=>Hr,visitorRow:()=>tn});var Dr=e=>e===void 0?!1:"x"in e&&"y"in e,Br=e=>!(e===void 0||e[1]===void 0),Ir=(e,r)=>{if("rows"in e&&"cols"in e)if("rows"in r&&"cols"in r){if(e.rows!==r.rows||e.cols!==r.cols)return!1}else return!1;if("size"in e)if("size"in r){if(e.size!==r.size)return!1}else return!1;return!0},de=e=>`Cell{${e.x},${e.y}}`,me=(e,r)=>r===void 0||e===void 0?!1:e.x===r.x&&e.y===r.y,D=(e,r="Param",n)=>{if(e===void 0)throw new Error(r+" is undefined. Expecting {x,y}");if(e.x===void 0)throw new Error(r+".x is undefined");if(e.y===void 0)throw new Error(r+".y is undefined");if(!Number.isInteger(e.x))throw new Error(r+".x is non-integer");if(!Number.isInteger(e.y))throw new Error(r+".y is non-integer");if(n!==void 0&&!ve(n,e))throw new Error(`${r} is outside of grid. Cell: ${e.x},${e.y} Grid: ${n.cols}, ${n.rows}`)},bt=(e,r="Param")=>{if(e===void 0)throw new Error(`${r} is undefined. Expecting grid.`);if(!("rows"in e))throw new Error(`${r}.rows is undefined`);if(!("cols"in e))throw new Error(`${r}.cols is undefined`);if(!Number.isInteger(e.rows))throw new Error(`${r}.rows is not an integer`);if(!Number.isInteger(e.cols))throw new Error(`${r}.cols is not an integer`)},ve=(e,r)=>!(r.x<0||r.y<0||r.x>=e.cols||r.y>=e.rows),Ur=(e,r)=>{D(e);const n=r.size,i=e.x*n,s=e.y*n;return J.fromTopLeft({x:i,y:s},n,n)},Jr=(e,r)=>{const n=r.size;if(e.x<0||e.y<0)return;const i=Math.floor(e.x/n),s=Math.floor(e.y/n);if(!(i>=r.cols)&&!(s>=r.rows))return{x:i,y:s}},Et=Object.freeze(["n","ne","nw","e","s","se","sw","w"]),pe=Object.freeze(["n","e","s","w"]),ge=(e,r,n="undefined",i)=>{const s=i??Et,o=s.map(a=>Mt(e,r,Nt(a),n));return yt(s,o)},Gr=(e,r)=>{D(e);const n=r.size,i=e.x*n,s=e.y*n;return Object.freeze({x:i+n/2,y:s+n/2})},Vr=(e,r)=>{D(e),D(r);let n=e.x,i=e.y;const s=Math.abs(r.x-n),o=Math.abs(r.y-i),a=n<r.x?1:-1,u=i<r.y?1:-1;let f=s-o;const c=[];for(;c.push(Object.freeze({x:n,y:i})),!(n===r.x&&i===r.y);){const l=2*f;l>-o&&(f-=o,n+=a),l<s&&(f+=s,i+=u)}return c},Kr=(e,r,n,i="stop")=>{Pt(n,"aboveZero","steps");const s=Et,o=s.map(u=>Nt(u,n)),a=s.map((u,f)=>Mt(e,r,o[f],i));return yt(s,a)},Nt=(e,r=1)=>{let n;switch(e){case"n":n={x:0,y:-1*r};break;case"ne":n={x:1*r,y:-1*r};break;case"e":n={x:1*r,y:0};break;case"se":n={x:1*r,y:1*r};break;case"s":n={x:0,y:1*r};break;case"sw":n={x:-1*r,y:1*r};break;case"w":n={x:-1*r,y:0};break;case"nw":n={x:-1*r,y:-1*r};break;default:n={x:0,y:0}}return Object.freeze(n)},Qr=function(e,r,n=!1){const i=[];if(e.x===r.x){const s=n?r.y+1:r.y;for(let o=e.y;o<s;o++)i.push({x:e.x,y:o})}else if(e.y===r.y){const s=n?r.x+1:r.x;for(let o=e.x;o<s;o++)i.push({x:o,y:e.y})}else throw new Error(`Only does vertical and horizontal: ${e.x},${e.y} - ${r.x},${r.y}`);return i},Mt=function(e,r,n,i="undefined"){D(r,"start",e),D(n),bt(e,"grid");let s=r.x,o=r.y;switch(i){case"wrap":s+=n.x%e.cols,o+=n.y%e.rows,s<0?s=e.cols+s:s>=e.cols&&(s-=e.cols),o<0?o=e.rows+o:o>=e.rows&&(o-=e.rows);break;case"stop":s+=n.x,o+=n.y,s=Ct(s,e.cols),o=Ct(o,e.rows);break;case"undefined":if(s+=n.x,o+=n.y,s<0||o<0||s>=e.cols||o>=e.rows)return;break;case"unbounded":s+=n.x,o+=n.y;break;default:throw new Error(`Unknown BoundsLogic case ${i}`)}return Object.freeze({x:s,y:o})},Wr=(e,r,n,i)=>{const s=ge(e,r,i,n);return Object.entries(s).filter(Br)},V=function*(e,r,n,i={}){bt(r,"grid"),D(n,"start",r);const s=i.visited??At(c=>de(c)),o=e.options?e.options:(c,l)=>Wr(c,l,pe,"undefined");if(!Dr(n))throw new Error("'start' parameter is undefined or not a cell");let a=[n],u=[],f=null;for(;a.length>0;){if(f===null){const c=a.pop();if(c===void 0)break;f=c}if(!s.has(f)){s.add(f),yield f;const c=o(r,f).filter(l=>!s.has(l[1]));c.length===0?f!==null&&(a=a.filter(l=>me(l,f))):u.push(...c)}if(u=u.filter(c=>!s.has(c[1])),u.length===0)f=null;else{const c=e.select(u);c!==void 0&&(a.push(c[1]),f=c[1])}}},Xr=(e,r,n={})=>V({select:i=>i[i.length-1]},e,r,n),Yr=(e,r,n={})=>V({select:i=>i[0]},e,r,n),we=e=>jt(e),Hr=(e,r,n={})=>V({select:we},e,r,n),Zr=(e,r,n={})=>V({options:(i,s)=>{const o=[];for(const a of ze(i,s))o.push(["n",a]);return o},select:we},e,r,n),tn=(e,r,n={})=>{const{reversed:i=!1}=n;return V({select:u=>u.find(f=>f[0]===(i?"w":"e")),options:(u,f)=>(i?f.x>0?f={x:f.x-1,y:f.y}:f.y>0?f={x:u.cols-1,y:f.y-1}:f={x:u.cols-1,y:u.rows-1}:f.x<u.rows-1?f={x:f.x+1,y:f.y}:f.y<u.rows-1?f={x:0,y:f.y+1}:f={x:0,y:0},[[i?"w":"e",f]])},e,r,n)},en=(e,r,n,i)=>{Pt(n,"positive","steps");const s={reversed:n<0};n=Math.abs(n);let o=r,a=i(e,r,s);a.next();let u=0;for(;u<n;){u++;const{value:f}=a.next();if(f)o=f,s.debug&&console.log(`stepsMade: ${u} cell: ${o.x}, ${o.y} reverse: ${s.reversed}`);else if(n>=e.cols*e.rows)n-=e.cols*e.rows,u=0,a=i(e,r,s),a.next(),o=r,s.debug&&console.log(`resetting visitor to ${n}`);else throw new Error("Value not received by visitor")}return o},rn=(e,r,n={})=>{const{reversed:i=!1}=n;return V({select:o=>o.find(a=>a[0]===(i?"n":"s")),options:(o,a)=>(i?a.y>0?a={x:a.x,y:a.y-1}:a.x===0?a={x:o.cols-1,y:o.rows-1}:a={x:a.x-1,y:o.rows-1}:a.y<o.rows-1?a={x:a.x,y:a.y+1}:a.x<o.cols-1?a={x:a.x+1,y:0}:a={x:0,y:0},[[i?"n":"s",a]])},e,r,n)},ze=function*(e,r={x:0,y:0}){bt(e,"grid"),D(r,"start",e);let{x:n,y:i}=r,s=!0;do yield{x:n,y:i},n++,n===e.cols&&(i++,n=0),i===e.rows&&(i=0,n=0),n===r.x&&i===r.y&&(s=!1);while(s)},U={};P(U,{angleRadian:()=>sn,bbox:()=>Ce,compute:()=>Se,distance:()=>Me,equals:()=>nn,extendFromStart:()=>un,extendX:()=>an,fromArray:()=>fn,fromNumbers:()=>$e,fromPoints:()=>lt,fromPointsToPath:()=>ln,guard:()=>be,isLine:()=>ct,joinPointsToLines:()=>cn,length:()=>K,nearest:()=>Ee,slope:()=>Ne,toFlatArray:()=>Pe,toPath:()=>qe,toString:()=>_e,toSvgString:()=>Ae,withinRange:()=>on});var ct=e=>e.a!==void 0&&e.b!==void 0,nn=(e,r)=>e.a===r.a&&e.b===r.b,be=(e,r="line")=>{if(e===void 0)throw new Error(`${r} undefined`);if(e.a===void 0)throw new Error(`${r}.a undefined. Expected {a:Point, b:Point}`);if(e.b===void 0)throw new Error(`${r}.b undefined. Expected {a:Point, b:Point}`)},sn=(e,r)=>{let n;if(ct(e))n=e.a,r=e.b;else if(n=e,r===void 0)throw new Error("b point must be provided");return Math.atan2(r.y-n.y,r.x-n.x)},on=(e,r,n)=>Me(e,r)<=n,K=(e,r)=>{let n;if(ct(e))r=e.b,n=e.a;else if(n=e,r===void 0)throw new Error("Requires both a and b parameters");E(n,"a"),E(n,"b");const i=r.x-n.x,s=r.y-n.y;if(n.z!==void 0&&r.z!==void 0){const o=r.z-n.z;return Math.hypot(i,s,o)}else return Math.hypot(i,s)},Ee=(e,r)=>{const{a:n,b:i}=e,s={x:i.x-n.x,y:i.y-n.y},o={x:r.x-n.x,y:r.y-n.y},a=s.x*s.x+s.y*s.y;let u=o.x*s.x+o.y*s.y;const f=Math.min(1,Math.max(0,u/a));return u=(i.x-n.x)*(r.y-n.y)-(i.y-n.y)*(r.x-n.x),{x:n.x+s.x*f,y:n.y+s.y*f}},Ne=(e,r)=>{let n;if(ct(e))n=e.a;else if(n=e,r===void 0)throw new Error("b parameter required");return(r.y-n.y)/(r.x-n.x)},an=(e,r)=>{const n=e.a.y+(r-e.a.x)*Ne(e);return{x:r,y:n}},un=(e,r)=>{const n=K(e);return Object.freeze({a:e.a,b:Object.freeze({x:e.b.x+(e.b.x-e.a.x)/n*r,y:e.b.y+(e.b.y-e.a.y)/n*r})})},Me=(e,r)=>{if(be(e,"l"),E(r,"p"),K(e)===0)return K(e.a,r);const i=Ee(e,r);return K(i,r)},Se=(e,r,n)=>{E(e,"a"),E(r,"b"),Le(n,"t");const i=K(e,r),s=i*(1-n),o=r.x-s*(r.x-e.x)/i,a=r.y-s*(r.y-e.y)/i;return{x:o,y:a}},_e=(e,r)=>S.toString(e)+"-"+S.toString(r),$e=(e,r,n,i)=>{if(Number.isNaN(e))throw new Error("x1 is NaN");if(Number.isNaN(n))throw new Error("x2 is NaN");if(Number.isNaN(r))throw new Error("y1 is NaN");if(Number.isNaN(i))throw new Error("y2 is NaN");return lt({x:e,y:r},{x:n,y:i})},Pe=(e,r)=>[e.x,e.y,r.x,r.y],Ae=(e,r)=>[`M${e.x} ${e.y} L ${r.x} ${r.y}`],fn=e=>{if(!Array.isArray(e))throw new Error("arr parameter is not an array");if(e.length!==4)throw new Error("array is expected to have length four");return $e(e[0],e[1],e[2],e[3])},lt=(e,r)=>(E(e,"a"),E(r,"b"),e=Object.freeze(e),r=Object.freeze(r),Object.freeze({a:e,b:r})),cn=(...e)=>{const r=[];let n=e[0];for(let i=1;i<e.length;i++)r.push(lt(n,e[i])),n=e[i];return r},ln=(e,r)=>qe(lt(e,r)),Ce=e=>S.bbox(e.a,e.b),qe=e=>{const{a:r,b:n}=e;return Object.freeze({...e,length:()=>K(r,n),compute:i=>Se(r,n,i),bbox:()=>Ce(e),toString:()=>_e(r,n),toFlatArray:()=>Pe(r,n),toSvgString:()=>Ae(r,n),toPoints:()=>[r,n],kind:"line"})},nt={};P(nt,{getEnd:()=>yn,getStart:()=>hn});var hn=function(e){if(at.isQuadraticBezier(e))return e.a;if(U.isLine(e))return e.a;throw new Error(`Unknown path type ${JSON.stringify(e)}`)},yn=function(e){if(at.isQuadraticBezier(e))return e.b;if(U.isLine(e))return e.b;throw new Error(`Unknown path type ${JSON.stringify(e)}`)},J={};P(J,{fromCenter:()=>mn,fromElement:()=>xn,fromTopLeft:()=>pn,getCenter:()=>gn,getCorners:()=>Re,getLines:()=>wn,guard:()=>St,isEqual:()=>dn,maxFromCorners:()=>vn});var xn=e=>({width:e.clientWidth,height:e.clientHeight}),dn=(e,r)=>e.width===r.width&&e.height===r.height,mn=(e,r,n)=>{S.guard(e,"origin"),W(r,"width"),W(n,"height");const i=r/2,s=n/2;return{x:e.x-i,y:e.y-s,width:r,height:n}},vn=(e,r,n,i)=>{if(e.y>n.y)throw new Error("topLeft.y greater than bottomRight.y");if(e.y>i.y)throw new Error("topLeft.y greater than bottomLeft.y");const s=r.x-e.x,o=n.x-i.x,a=Math.abs(i.y-e.y),u=Math.abs(n.y-r.y);return{x:Math.min(e.x,i.x),y:Math.min(r.y,e.y),width:Math.max(s,o),height:Math.max(a,u)}},W=(e,r="Dimension")=>{if(e===void 0)throw Error(`${r} is undefined`);if(isNaN(e))throw Error(`${r} is NaN`);if(e<0)throw Error(`${r} cannot be negative`)},St=(e,r="rect")=>{if(e===void 0)throw Error("{$name} undefined");W(e.width,r+".width"),W(e.height,r+".height")},pn=(e,r,n)=>(W(r,"width"),W(n,"height"),S.guard(e,"origin"),{x:e.x,y:e.y,width:r,height:n}),Re=(e,r)=>{if(St(e),r===void 0&&S.isPoint(e))r=e;else if(r===void 0)throw new Error("Unpositioned rect needs origin param");return[{x:r.x,y:r.y},{x:r.x+e.width,y:r.y},{x:r.x+e.width,y:r.y+e.height},{x:r.x,y:r.y+e.height}]},gn=(e,r)=>{if(St(e),r===void 0&&S.isPoint(e))r=e;else if(r===void 0)throw new Error("Unpositioned rect needs origin param");return{x:r.x+e.width/2,y:r.y+e.height/2}},wn=(e,r)=>U.joinPointsToLines(...Re(e,r)),ht={};P(ht,{fromCartesian:()=>zn,isCoord:()=>je,toCartesian:()=>bn});var je=e=>!(e.distance===void 0||e.angleRadian===void 0),zn=(e,r)=>{e=Ot(e,r);let n=Math.atan2(e.y,e.x);return n<0?n=Math.abs(n):n=Math.PI+(Math.PI-n),{angleRadian:n,distance:Math.sqrt(e.x*e.x+e.y*e.y)}},bn=(e,r,n)=>{if(je(e)){if(r===void 0&&(r=it),!O(r))throw new Error("Expecting (Coord, Point). Point param wrong type.");return ke(e.distance,e.angleRadian,r)}else if(typeof e=="number"&&typeof r=="number"){if(n===void 0&&(n=it),!O(n))throw new Error("Expecting (number, number, Point). Point param wrong type");return ke(e,r,n)}else throw new Error("Expecting (number, number)")},ke=(e,r,n)=>(E(n),{x:n.x+e*Math.cos(r),y:n.y+e*Math.sin(r)}),_t=e=>(e-90)*(Math.PI/180),En=e=>e*180/Math.PI,Nn=e=>Math.atan2(e.x,e.y);export{kt as A,at as B,Xt as C,xe as G,U as L,Te as M,S as P,Qe as S,Kt as a,ct as b,Re as c,Ye as d,Xe as e,De as f,E as g,Je as h,Vt as i,Ie as j,Ue as k,Be as l,Ze as m,_t as n,_n as o,Cr as p,pt as q,jt as r,At as s,Pn as t,$n as u,En as v,rr as w,ht as x};
