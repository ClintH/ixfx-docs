import{A as S,i as ce,m as O,s as H,c as le,a as ue,w as he,r as fe,b as de}from"./chunk-ODBLOXCD.602f7099.js";import{i as C,n as y,S as X}from"./chunk-AWXCQ245.1dcbd11a.js";import{_ as g,a,b as T,c as u,d as x}from"./chunk-FQLUQVDZ.7e80d7b0.js";import{q as A}from"./chunk-3CYWIYMP.09a63feb.js";import{i as G,o as V,s as ve}from"./chunk-7TKMEWX5.f8def376.js";import{S as me}from"./chunk-I3R3AECV.3528ce89.js";var ge={};g(ge,{Analysers:()=>K,Visualiser:()=>J});var K={};g(K,{Analyser:()=>k,basic:()=>we,freq:()=>pe,peakLevel:()=>xe});var J={};g(J,{default:()=>U});var D=class{constructor(e=void 0){a(this,"samples",0),a(this,"total",0),a(this,"min",0),a(this,"max",0),a(this,"id"),this.id=e}get avg(){return this.total/this.samples}resetAvg(e=null){e!==null&&(this.id=e),this.total=0,this.samples=0}reset(e=null){this.min=Number.MAX_SAFE_INTEGER,this.max=Number.MIN_SAFE_INTEGER,this.resetAvg(e)}seen(e){if(Number.isNaN(e))throw Error("Cannot add NaN");this.samples++,this.total+=e,this.min=Math.min(e,this.min),this.max=Math.max(e,this.max)}getMinMaxAvg(){return{min:this.min,max:this.max,avg:this.avg}}},ye=e=>new D(e),U=class{constructor(e,t){a(this,"freqMaxRange",200),a(this,"audio"),a(this,"parent"),a(this,"lastPointer",{x:0,y:0}),a(this,"pointerDown",!1),a(this,"pointerClicking",!1),a(this,"pointerClickDelayMs",100),a(this,"pointerDelaying",!1),a(this,"waveTracker"),a(this,"freqTracker"),a(this,"el"),this.audio=t,this.parent=e,this.waveTracker=new D("wave"),this.freqTracker=new D("freq"),e.innerHTML=`
    <section>
      <button id="rendererComponentToggle">\u{1F53C}</button>
      <div>
        <h1>Visualiser</h1>
        <div style="display:flex; flex-wrap: wrap">
          <div class="visPanel">
            <h2>Frequency distribution</h2>
            <br />
            <canvas id="rendererComponentFreqData" height="200" width="400"></canvas>
          </div>
          <div class="visPanel">
            <h2>Waveform</h2>
            <button id="rendererComponentWaveReset">Reset</button>
            <div>
              Press and hold on wave to measure
            </div>
            <br />
            <canvas id="rendererComponentWaveData" height="200" width="400"></canvas>
          </div>
        </div>
      </div>
    </section>
    `,this.el=e.children[0],document.getElementById("rendererComponentToggle")?.addEventListener("click",()=>{this.setExpanded(!this.isExpanded())}),this.el.addEventListener("pointermove",i=>this.onPointer(i)),this.el.addEventListener("pointerup",()=>{this.pointerDelaying=!1,this.pointerDown=!1}),this.el.addEventListener("pointerdown",()=>{this.pointerDelaying=!0,setTimeout(()=>{this.pointerDelaying&&(this.pointerDelaying=!1,this.pointerDown=!0)},this.pointerClickDelayMs)}),this.el.addEventListener("pointerleave",()=>{this.pointerDelaying=!1,this.pointerDown=!1}),document.getElementById("rendererComponentWaveReset")?.addEventListener("click",()=>{this.clear()})}renderFreq(e){if(!this.isExpanded()||!e)return;const t=document.getElementById("rendererComponentFreqData");if(t===null)throw new Error("Cannot find canvas element");const i=t.getContext("2d");if(i===null)throw new Error("Cannot create drawing context");const r=e.length,n=t.clientWidth,s=t.clientHeight;i.clearRect(0,0,n,s);const o=this.getPointerRelativeTo(t),c=n/r,d=S.minMaxAvg(e);for(let l=0;l<r;l++){if(!Number.isFinite(e[l]))continue;const v=(e[l]-d.min)/this.freqMaxRange,m=Math.abs(s*v),q=s-m,M=l/r*360,F=l*c;if(i.fillStyle="hsl("+M+", 100%, 50%)",o.y>0&&o.y<=s&&o.x>=F&&o.x<=F+c){this.freqTracker.id!==l.toString()&&this.freqTracker.reset(l.toString()),this.freqTracker.seen(e[l]);const B=this.freqTracker.getMinMaxAvg();i.fillStyle="black",this.audio&&i.fillText(`Frequency (${l}) at pointer: ${this.audio.getFrequencyAtIndex(l).toLocaleString("en")} - ${this.audio.getFrequencyAtIndex(l+1).toLocaleString("en")}`,2,10),i.fillText(`Raw value: ${e[l].toFixed(2)}`,2,20),i.fillText(`Min: ${B.min.toFixed(2)}`,2,40),i.fillText(`Max: ${B.max.toFixed(2)}`,60,40),i.fillText(`Avg: ${B.avg.toFixed(2)}`,120,40)}i.fillRect(F,q,c,m)}}isExpanded(){const e=this.el.querySelector("div");if(e===null)throw new Error("contents div not found");return e.style.display===""}setExpanded(e){const t=this.el.querySelector("div"),i=this.el.querySelector("button");if(i===null)throw new Error("Button element not found");if(t===null)throw new Error("Contents element not found");e?(t.style.display="",i.innerText="\u{1F53C}"):(t.style.display="none",i.innerText="\u{1F53D}")}clear(){this.clearCanvas(document.getElementById("rendererComponentFreqData")),this.clearCanvas(document.getElementById("rendererComponentWaveData"))}clearCanvas(e){if(e===null)throw new Error("Canvas is null");const t=e.getContext("2d");if(t===null)throw new Error("Cannot create drawing context");t.fillStyle="white",t.fillRect(0,0,e.clientWidth,e.clientHeight)}renderWave(e,t=!0){if(!this.isExpanded()||!e)return;const i=document.getElementById("rendererComponentWaveData");if(i===null)throw new Error("Cannot find wave canvas");const r=i.getContext("2d");if(r===null)throw new Error("Cannot create drawing context for wave");const n=i.clientWidth,s=i.clientHeight,o=this.getPointerRelativeTo(i),c=20,d=60,l=e.length;r.fillStyle="white",r.fillRect(0,0,d,c);const f=n/l;r.fillStyle="rgba(255, 255, 255, 0.03)",r.fillRect(0,20,n,s),r.fillStyle="red",t?r.fillRect(0,s/2,n,1):r.fillRect(0,s-1,n,1),r.lineWidth=1,r.strokeStyle="black",r.beginPath();let v=0;for(let m=0;m<l;m++){const q=e[m]*s,M=t?s/2-q:s-q;m===0?r.moveTo(v,M):r.lineTo(v,M),v+=f,this.pointerDown&&this.waveTracker.seen(e[m])}if(r.lineTo(n,t?s/2:s),r.stroke(),this.pointerDown){const m=this.waveTracker.getMinMaxAvg();r.fillStyle="rgba(255,255,0,1)",r.fillRect(d,0,150,20),r.fillStyle="black",r.fillText("Min: "+m.min.toFixed(2),60,10),r.fillText("Max: "+m.max.toFixed(2),110,10),r.fillText("Avg: "+m.avg.toFixed(2),160,10)}else this.waveTracker.reset();o.y>0&&o.y<=s&&o.x>=0&&o.x<=n&&(r.fillStyle="black",r.fillText("Level: "+(1-o.y/s).toFixed(2),2,10))}getPointerRelativeTo(e){const t=e.getBoundingClientRect();return{x:this.lastPointer.x-t.left-window.scrollX,y:this.lastPointer.y-t.top-window.scrollY}}onPointer(e){this.lastPointer={x:e.pageX,y:e.pageY},e.preventDefault()}},we=(e,t={})=>new k((i,r)=>{const n=new Float32Array(i.frequencyBinCount),s=new Float32Array(i.fftSize);i.getFloatFrequencyData(n),i.getFloatTimeDomainData(s),e(n,s,r)},t),pe=(e,t={})=>new k((i,r)=>{const n=new Float32Array(i.frequencyBinCount);i.getFloatFrequencyData(n),e(n,r)},t),xe=(e,t={})=>new k((i,r)=>{const n=new Float32Array(i.fftSize);i.getFloatTimeDomainData(n),e(S.maxFast(n),r)},t),b,w,k=class{constructor(e,t={}){if(a(this,"showVis"),a(this,"fftSize"),a(this,"smoothingTimeConstant"),T(this,b,!1),a(this,"debug"),T(this,w,!1),a(this,"visualiser"),a(this,"audioCtx"),a(this,"analyserNode"),a(this,"analyse"),this.showVis=t.showVis??!1,this.fftSize=t.fftSize??1024,this.debug=t.debug??!1,this.smoothingTimeConstant=t.smoothingTimeConstant??.8,C(this.fftSize,"positive","opts.fftSize"),y(this.smoothingTimeConstant,"percentage","opts.smoothingTimeConstant"),!ce(this.fftSize))throw new Error(`fftSize must be a power of two from 32 to 32768 (${this.fftSize})`);if(this.fftSize<32)throw new Error("fftSize must be at least 32");if(this.fftSize>32768)throw new Error("fftSize must be no greater than 32768");this.analyse=e,this.paused=!1,this.init();const i=document.getElementById("audio-visualiser");if(i){const r=new U(i,this);r.setExpanded(this.showVis),this.visualiser=r}}init(){if(u(this,w)){this.debug&&console.debug("Init already in progress");return}x(this,w,!0),navigator.mediaDevices.getUserMedia({audio:!0}).then(e=>{this.onMicSuccess(e)}).catch(e=>{x(this,w,!1),console.error(e)})}get paused(){return u(this,b)}set paused(e){e!==u(this,b)&&(x(this,b,e),e?this.debug&&console.log("Paused"):(this.debug&&console.log("Unpaused"),window.requestAnimationFrame(this.analyseLoop.bind(this))))}setup(e,t){const i=e.createAnalyser();return i.fftSize=this.fftSize,i.smoothingTimeConstant=this.smoothingTimeConstant,e.createMediaStreamSource(t).connect(i),i}onMicSuccess(e){try{const t=new AudioContext;t.addEventListener("statechange",()=>{this.debug&&console.log(`Audio context state: ${t.state}`)}),this.audioCtx=t,this.analyserNode=this.setup(t,e),window.requestAnimationFrame(this.analyseLoop.bind(this))}catch(t){x(this,w,!1),console.error(t)}}analyseLoop(){if(this.paused){this.debug&&console.log("Paused");return}const e=this.analyserNode;if(e===void 0){console.warn("Analyser undefined");return}try{this.analyse(e,this)}catch(t){console.error(t)}window.requestAnimationFrame(this.analyseLoop.bind(this))}getFrequencyRangeMax(e,t,i){const r=this.sliceByFrequency(e,t,i);return S.max(...r)}sliceByFrequency(e,t,i){const r=this.getIndexForFrequency(e),n=this.getIndexForFrequency(t);return i.slice(r,n)}getFrequencyAtIndex(e){const t=this.analyserNode,i=this.audioCtx;if(t===void 0)throw new Error("Analyser not available");if(i===void 0)throw new Error("Audio context not available");if(C(e,"positive","index"),e>t.frequencyBinCount)throw new Error(`Index ${e} exceeds frequency bin count ${t.frequencyBinCount}`);return e*i.sampleRate/(t.frequencyBinCount*2)}getIndexForFrequency(e){const t=this.analyserNode;if(t===void 0)throw new Error("Analyser not available");const i=t.context.sampleRate/2,r=Math.round(e/i*t.frequencyBinCount);return r<0?0:r>=t.frequencyBinCount?t.frequencyBinCount-1:r}};b=new WeakMap;w=new WeakMap;var j={};g(j,{byValueString:()=>Z,getSorter:()=>ee,minMaxAvg:()=>Te,sortByKey:()=>R,sortByValueNumber:()=>$,sortByValueString:()=>Ce});function _(e,t,i,r,n,s,o,c,d){switch(arguments.length){case 1:return e;case 2:return t(e);case 3:return i(t(e));case 4:return r(i(t(e)));case 5:return n(r(i(t(e))));case 6:return s(n(r(i(t(e)))));case 7:return o(s(n(r(i(t(e))))));case 8:return c(o(s(n(r(i(t(e)))))));case 9:return d(c(o(s(n(r(i(t(e))))))));default:for(var l=arguments[0],f=1;f<arguments.length;f++)l=arguments[f](l);return l}}var Ee=function(e){return function(t,i){return t===i||e(t,i)===0}},Y=function(e){return{equals:Ee(e),compare:function(t,i){return t===i?0:e(t,i)}}},I=function(e){return Y(function(t,i){return e.compare(i,t)})},L=function(e){return function(t){return Y(function(i,r){return t.compare(e(i),e(r))})}},Q={equals:function(e,t){return e===t}},P={equals:Q.equals,compare:function(e,t){return e<t?-1:e>t?1:0}};Q.equals,P.compare;var be=function(e){return e.slice()},z=function(e){return function(t){return t.length<=1?be(t):t.slice().sort(e.compare)}},Se={equals:function(e,t){return e===t}},N={equals:Se.equals,compare:function(e,t){return e<t?-1:e>t?1:0}},qe=(e=!1)=>_(e?I(N):N,L(t=>t[0])),Z=(e=!1)=>_(e?I(N):N,L(t=>t[1])),Me=(e=!1)=>_(e?I(P):P,L(t=>t[1])),R=(e=!1)=>z(qe(e)),Ce=(e=!1)=>z(Z(e)),$=(e=!1)=>z(Me(e)),ee=e=>{switch(e){case"value":return $(!1);case"valueReverse":return $(!0);case"key":return R(!1);case"keyReverse":return R(!0);default:throw new Error(`Unknown sorting value '${e}'. Expecting: value, valueReverse, key or keyReverse`)}},Te=(e,t)=>{t===void 0&&(t=r=>r[1]);const i=e.map(t);return O(i)},Ae={};g(Ae,{FrequencyMutable:()=>ie,Normalise:()=>te,frequencyMutable:()=>Fe,movingAverage:()=>Be,tracker:()=>ye});var te={};g(te,{array:()=>ke,stream:()=>Ne});var Ne=(e,t)=>{let i=e??Number.MAX_SAFE_INTEGER,r=t??Number.MIN_SAFE_INTEGER;return n=>(i=Math.min(i,n),r=Math.max(r,n),H(n,i,r))},ke=(e,t,i)=>{if(!Array.isArray(e))throw new Error("values param should be an array");const r=O(e),n=t??r.min,s=i??r.max;return e.map(o=>le(H(o,n,s)))},h,p,ie=class extends X{constructor(e=void 0){super();T(this,h,void 0),T(this,p,void 0),x(this,h,new Map),e===void 0&&(e=t=>{if(t===void 0)throw new Error("Cannot create key for undefined");return typeof t=="string"?t:JSON.stringify(t)}),x(this,p,e)}clear(){u(this,h).clear(),this.fireEvent("change",void 0)}keys(){return u(this,h).keys()}values(){return u(this,h).values()}toArray(){return Array.from(u(this,h).entries())}debugString(){let e="";for(const[t,i]of u(this,h).entries())e+=`${t}: ${i}, `;return e.endsWith(", ")?e.substring(0,e.length-2):e}frequencyOf(e){if(typeof e=="string")return u(this,h).get(e);const t=u(this,p).call(this,e);return u(this,h).get(t)}relativeFrequencyOf(e){let t;if(typeof e=="string")t=u(this,h).get(e);else{const r=u(this,p).call(this,e);t=u(this,h).get(r)}if(t===void 0)return;const i=this.minMaxAvg();return t/i.total}entries(){return Array.from(u(this,h).entries())}minMaxAvg(){return j.minMaxAvg(this.entries())}entriesSorted(e="value"){return ee(e)(this.entries())}add(...e){if(e===void 0)throw new Error("value parameter is undefined");e.map(u(this,p)).forEach(i=>{const r=u(this,h).get(i)??0;u(this,h).set(i,r+1)}),this.fireEvent("change",void 0)}};h=new WeakMap;p=new WeakMap;var Fe=e=>new ie(e),Be=(e=100,t)=>{let i=A({capacity:e,discardPolicy:"older"});const r=()=>{i=A({capacity:e,discardPolicy:"older"})},n=()=>t===void 0?S.average(...i.data):S.averageWeighted(i.data,t);return{add:o=>(i.enqueue(o),n()),compute:n,clear:r}},De={};g(De,{count:()=>$e,numericPercent:()=>_e,numericRange:()=>ne,numericRangeRaw:()=>Re,pingPong:()=>re,pingPongPercent:()=>Pe});var Pe=function(e=.1,t,i,r,n=1e3){return t===void 0&&(t=0),i===void 0&&(i=1),r===void 0&&(r=t),y(e,"bipolar","interval"),y(i,"bipolar","end"),y(r,"bipolar","offset"),y(t,"bipolar","start"),re(e,t,i,r,n)},re=function*(e,t,i,r,n=1){if(Number.isNaN(e))throw new Error("interval parameter is NaN");if(Number.isNaN(t))throw new Error("lower parameter is NaN");if(Number.isNaN(i))throw new Error("upper parameter is NaN");if(Number.isNaN(r))throw new Error("upper parameter is NaN");if(t>=i)throw new Error("lower must be less than upper");if(e===0)throw new Error("Interval cannot be zero");const s=i-t;if(Math.abs(e)>=s)throw new Error(`Interval should be between -${s} and ${s}`);let o=e>0;if(i=Math.floor(i*n),t=Math.floor(t*n),e=Math.floor(Math.abs(e*n)),r===void 0?r=t:r=Math.floor(r*n),r>i||r<t)throw new Error(`Start (${r/n}) must be within lower (${t/n}) and upper (${i/n})`);let c=r;yield c/n;let d=!0;for(;;)c=c+(o?e:-e),o&&c>=i?(o=!1,c=i,c===i&&d&&(c=t,o=!0)):!o&&c<=t&&(o=!0,c=t,c===t&&d&&(c=i,o=!1)),yield c/n,d=!1},Re=function*(e,t=0,i,r=!1){if(e<=0)throw new Error("Interval is expected to be above zero");i===void 0&&(i=Number.MAX_SAFE_INTEGER);let n=t;do for(;n<i;)yield n,n+=e;while(r)},ne=function*(e,t=0,i,r=!1,n){y(e,"nonZero");const s=e<0;if(i!==void 0){if(s&&t<i)throw new Error(`Interval of ${e} will never go from ${t} to ${i}`);if(!s&&t>i)throw new Error(`Interval of ${e} will never go from ${t} to ${i}`)}n=n??1e3,i===void 0?i=Number.MAX_SAFE_INTEGER:i*=n,e=e*n;do{let o=t*n;for(;!s&&o<=i||s&&o>=i;)yield o/n,o+=e}while(r)},$e=function*(e,t=0){if(C(e,"","amount"),C(t,"","offset"),e===0)return;let i=0;do e<0?yield-i+t:yield i+t;while(i++<Math.abs(e)-1)},_e=function(e=.01,t=!1,i=0,r=1){return y(e,"percentage","interval"),y(i,"percentage","start"),y(r,"percentage","end"),ne(e,i,r,t)},Ie={};g(Ie,{Bluetooth:()=>se,Espruino:()=>oe});var se={};g(se,{NordicBleDevice:()=>ae,defaultOpts:()=>E});var Le=class{constructor(){a(this,"enc",new TextEncoder),a(this,"dec",new TextDecoder("utf-8"))}toBuffer(e){return this.enc.encode(e)}fromBuffer(e){return this.dec.decode(e)}},ze=class{constructor(e,t=`
`){this.onData=e,this.separator=t,a(this,"buffer","")}clear(){this.buffer=""}add(e){if(e.length===0)return;const t=e.indexOf(this.separator);if(t<0){this.buffer+=e;return}const i=e.substring(0,t);this.onData(this.buffer+i),this.buffer="",!(t<e.length)&&this.add(e.substring(t+1))}},We=class{constructor(e,t=-1){this.onData=e,this.chunkSize=t,a(this,"paused",!1),a(this,"queue"),a(this,"writer"),a(this,"intervalMs"),this.intervalMs=10,this.queue=A(),this.writer=de(()=>this.onWrite(),this.intervalMs)}clear(){this.queue=A()}async onWrite(){if(this.queue.isEmpty)return console.debug("WriteBuffer.onWrite: queue empty"),!1;if(this.paused)return console.debug("WriteBuffer.onWrite: paused..."),!0;const e=this.queue.dequeue();return e===void 0?!1:(await this.onData(e),!0)}add(e){this.chunkSize?this.queue.enqueue(...ve(e,this.chunkSize)):this.queue.enqueue(e),this.writer.start()}},Ge=class extends X{constructor(e,t){super();this.device=e,this.config=t,a(this,"states"),a(this,"codec"),a(this,"rx"),a(this,"tx"),a(this,"gatt"),a(this,"verboseLogging",!1),a(this,"rxBuffer"),a(this,"txBuffer"),this.txBuffer=new We(async i=>{await this.writeInternal(i)},t.chunkSize),this.rxBuffer=new ze(i=>{this.fireEvent("data",{data:i})}),this.codec=new Le,this.states=new me("ready",{ready:"connecting",connecting:["connected","closed"],connected:["closed"],closed:"connecting"}),this.states.addEventListener("change",i=>{this.fireEvent("change",i),this.verbose(`${i.priorState} -> ${i.newState}`),i.priorState==="connected"&&(this.rxBuffer.clear(),this.txBuffer.clear())}),e.addEventListener("gattserverdisconnected",()=>{this.isClosed||(this.verbose("GATT server disconnected"),this.states.state="closed")}),this.verbose(`ctor ${e.name} ${e.id}`)}get isConnected(){return this.states.state==="connected"}get isClosed(){return this.states.state==="closed"}write(e){if(this.states.state!=="connected")throw new Error(`Cannot write while state is ${this.states.state}`);this.txBuffer.add(e)}async writeInternal(e){this.verbose(`writeInternal ${e}`);const t=this.tx;if(t===void 0)throw new Error("Unexpectedly without tx characteristic");try{await t.writeValue(this.codec.toBuffer(e))}catch(i){this.warn(i)}}disconnect(){this.states.state==="connected"&&this.gatt?.disconnect()}async connect(){const e=this.config.connectAttempts??3;this.states.state="connecting",this.verbose("connect");const t=this.device.gatt;if(t===void 0)throw new Error("Gatt not available on device");fe(async()=>{const i=await t.connect();this.verbose("Getting primary service");const r=await i.getPrimaryService(this.config.service);this.verbose("Getting characteristics");const n=await r.getCharacteristic(this.config.rxGattCharacteristic),s=await r.getCharacteristic(this.config.txGattCharacteristic);n.addEventListener("characteristicvaluechanged",o=>this.onRx(o)),this.rx=n,this.tx=s,this.gatt=t,this.states.state="connected",await n.startNotifications()},e,200)}onRx(e){if(this.rx===void 0)return;const i=e.target.value;if(i===void 0)return;let r=this.codec.fromBuffer(i.buffer);const n=G(r,19),s=G(r,17);s&&n<s&&(this.verbose("Tx plz start"),r=V(r,s,1),this.txBuffer.paused=!1),n&&n>s&&(this.verbose("Tx plz stop"),r=V(r,n,1),this.txBuffer.paused=!0),this.rxBuffer.add(r)}verbose(e){this.verboseLogging&&console.info(`${this.config.name} `,e)}log(e){console.log(`${this.config.name} `,e)}warn(e){console.warn(`${this.config.name} `,e)}},E={chunkSize:20,service:"6e400001-b5a3-f393-e0a9-e50e24dcca9e",txGattCharacteristic:"6e400002-b5a3-f393-e0a9-e50e24dcca9e",rxGattCharacteristic:"6e400003-b5a3-f393-e0a9-e50e24dcca9e",name:"NordicDevice",connectAttempts:5},ae=class extends Ge{constructor(e,t={}){super(e,{...E,...t})}},oe={};g(oe,{EspruinoDevice:()=>W,connect:()=>Oe,puck:()=>Ve});var W=class extends ae{constructor(e,t={}){super(e,t);a(this,"evalTimeoutMs"),this.evalTimeoutMs=t.evalTimeoutMs??5*1e3}async eval(e,t={}){const i=t.timeoutMs??this.evalTimeoutMs,r=t.assumeExclusive??!0;if(typeof e!="string")throw new Error("code parameter should be a string");return new Promise((n,s)=>{const o=ue(5),c=f=>{try{const v=JSON.parse(f.data);"reply"in v&&(v.reply===o?(l(),"result"in v&&n(v.result)):this.warn(`Expected reply ${o}, got ${v.reply}`))}catch(v){r?l(f.data):this.warn(v)}},d=f=>{f.newState!=="connected"&&l(`State changed to '${f.newState}', aborting`)};this.addEventListener("data",c),this.addEventListener("change",d);const l=he(i,f=>{s(f)},()=>{this.removeEventListener("data",c),this.removeEventListener("change",d)});this.write(`Bluetooth.println(JSON.stringify({reply:"${o}", result:JSON.stringify(${e})}))
`)})}},Ve=async()=>{const e=await navigator.bluetooth.requestDevice({filters:[{namePrefix:"Puck.js"},{services:[E.service]}],optionalServices:[E.service]}),t=new W(e,{name:"Puck"});return await t.connect(),t},Oe=async()=>{const e=await navigator.bluetooth.requestDevice({filters:[{namePrefix:"Puck.js"},{namePrefix:"Pixl.js"},{namePrefix:"MDBT42Q"},{namePrefix:"RuuviTag"},{namePrefix:"iTracker"},{namePrefix:"Thingy"},{namePrefix:"Espruino"},{services:[E.service]}],optionalServices:[E.service]}),t=new W(e,{name:"Espruino"});return await t.connect(),t};export{De as G,j as K,te as N,Fe as f,ee as g};
