var k=Object.defineProperty;var _=(n,e,t)=>e in n?k(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var y=(n,e,t)=>(_(n,typeof e!="symbol"?e+"":e,t),t);import{s as M,r as P,$ as j,e as d}from"./vendor.d9edd6b2.js";import{P as R,L as f,y as C,x as D,n as O}from"./chunk-HF2GNML5.47466bb1.js";import"./chunk-G4S3XAFG.00fb0b2a.js";import"./chunk-DIQ6ZWAQ.94b98cf2.js";import{t as $}from"./chunk-EGNKYH6P.1933f072.js";import{P as A,S as p}from"./chunk-URTBDQYG.939553de.js";import"./chunk-MQKU5S5M.fc8875ae.js";import{e as B}from"./styles.99f68bf2.js";var G=Object.defineProperty,L=Object.getOwnPropertyDescriptor,g=(n,e,t,r)=>{for(var s=r>1?void 0:r?L(e,t):e,i=n.length-1,o;i>=0;i--)(o=n[i])&&(s=(r?o(e,t,s):o(s))||s);return r&&s&&G(e,t,s),s};const E="polar-coords-element";class h extends M{constructor(){super();y(this,"palette");this.palette=A.create(),this.palette.setElementBase(this),this.width=500,this.height=300,$().subscribe(e=>{console.log("theme change"),this.updated()})}setDegrees(e){this.degree=e,this.radian=void 0}setRadians(e){this.degree=void 0,this.radian=e}getBounds(){const e=p.svg(this.shadowRoot.querySelector("svg"));return{width:e.width,height:e.height}}renderSvg(){const e="black",t=p.svg(this.shadowRoot.querySelector("svg"),{fillStyle:"transparent",strokeWidth:3});t.clear();const r=t.width,s=t.height,i=Math.min(r/2,s/2),o={x:r/2,y:s/2};p.grid(t.parent,o,25,r,s);const l=25;t.circle({radius:3,...o},{fillStyle:e,strokeStyle:"none"}),t.text(R.sum(o,2,l),"O",{fillStyle:e,strokeStyle:"none"});const a={id:"triangle",fillStyle:e},c=f.fromNumbers(o.x,o.y,o.x+i-10,o.y);t.line(c,{fillStyle:"none",markerEnd:a,strokeStyle:e}),t.text({x:o.x+i-30,y:o.y+l},"A",{strokeStyle:"none",fillStyle:e})}async updated(){this.renderSvg()}_pointerMove(e){const t=this.palette.get("accent-bold","yellow"),r=this.palette.get("fg-dim","yellow"),s=p.svg(this.shadowRoot.querySelector("svg")),i=s.width,o=s.height,l={x:i/2,y:o/2},a={x:e.offsetX,y:e.offsetY},c=f.fromPoints(l,a);s.line(c,{strokeDash:"5",strokeStyle:t},"#pointerRay");const m=f.length(c);s.circle({radius:5,...a},{fillStyle:t,strokeStyle:"none"},"#targetCircle");const u=C.fromCartesian(a,l),v=D(u.angleRadian),S=Math.PI*2-u.angleRadian;let x={endRadian:S,startRadian:0,radius:Math.min(100,m),...l},w={sweep:!0,largeArc:!(S>Math.PI)};Math.round(v)!==0&&s.path(O.toSvg(x,w),{strokeStyle:r},"#arc");const b={strokeStyle:"transparent",fillStyle:t,anchor:"middle"};s.text({x:a.x,y:a.y+40},`(${Math.round(m)}, ${Math.floor(v)}\xB0)`,b,"#coordLabel")}render(){return j`
			<div id="container">
        <svg @pointermove="${this._pointerMove}" style="font-size: 1em" viewBox="0 0 ${this.width} ${this.height}" width=${this.width} height=${this.height}></svg>
			</div>
		`}}y(h,"styles",[B,P`
      :host {
        color: var(--label-color, green);
      }
      #container {
        display: flex;
        align-items: center;
        flex-direction: column;
      }
  `]);g([d()],h.prototype,"radian",2);g([d()],h.prototype,"degree",2);g([d()],h.prototype,"width",2);g([d()],h.prototype,"height",2);customElements.define(E,h);export{h as PolarCoordsElement,E as tagName};
