import { c as createMetadata, a as createAstro, b as createComponent, r as render, d as renderComponent } from './chunks/index.7bfc2e7e.mjs';
import { $ as $$module1$1, a as $$MainLayout } from './chunks/MainLayout.fae6d6b7.mjs';
import { $ as $$module1 } from './chunks/index.edd3906c.mjs';
import 'shorthash';
import 'serialize-javascript';
import 'preact/hooks';
import 'preact/jsx-runtime';
import 'lit';
import 'shiki';
import 'prismjs';
import 'prismjs/components/index.js';

const metadata = { "headers": [{ "depth": 2, "slug": "intersection", "text": "Intersection" }, { "depth": 2, "slug": "area", "text": "Area" }, { "depth": 2, "slug": "relating-circles", "text": "Relating circles" }, { "depth": 2, "slug": "interpolate--point-by-angle", "text": "Interpolate & point by angle" }, { "depth": 2, "slug": "comparison", "text": "Comparison" }], "source": '\n<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>\n</div>\n\nA circle.\n\nThe ixfx circle is described at the least by its radius:\n\n```typescript\ntype Circle = {\n  radius: number\n}\n\n// eg:\nconst c = { radius: 100 };\n```\n\nA circle is said to be _positioned_ if it also includes `x` and `y` fields.\n\n```typescript\ntype CirclePositioned = {\n  radius: number,\n  x: number,\n  y: number\n}\n\nconst c = { radius: 100, x: 50, y: 50 };\n```\n\nIf a circle is positioned, it can be used with any of the [Point](../point/) functions as well.\n\n## Intersection\n\nGet the [points](../point/) of intersection between a line and circle with [`intersectionLine`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html). It returns an array of zero to three points, depending on the geometry.\n\n```js\n// repl-pad\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// Circle and line to check\nconst circle = { radius: 10, x: 100, y: 100};\nconst line = {a: {x: 0, y: 0}, b: { x: 100, y: 100 } };\n\nconst pts = Circles.intersectionLine(circle, line);\n```\n\nGet the points of intersection between two circles with [`intersections`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html)\n\n```js\nconst pts = Circles.intersections(circleA, circleB);\n// pts will be empty if there are no intersections\n//  this can also be the case if circles are identical, or one completely encloses the other\n```\n\nSee also:\n* [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html): _true_ if two circles are overlapping or identical\n\n## Area\n\n[`bbox`](https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html) yields a rectangle that encompasses the circle.\n\n```js\n// repl-pad#1\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Yields: { x, y, width, height }\nCircles.bbox(circle);   \n``` \n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html) computes the area of a circle.\n\n```js\n// repl-pad#1\nCircles.area(circle);\n```\n\n\n## Relating circles\n\nCheck whether `circleB` is completely contained by `circleA` with [`isContainedBy`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html). [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html) returns _true_ if two circles are overlapping or identical.\n\n```js\n// repl-pad#3\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\n\nconst circleA = { radius: 10, x: 100, y: 100};\nconst circleB = { radius: 10, x: 150, y: 100};\n\n// Yields: true/false\nCircles.isContainedBy(circleA, circleB);\nCircles.isIntersecting(circleA, circleB);\n```\n\n[`distanceCenter`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html) returns the distance between two circles\' centers. This requires that both circles are positioned. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html) returns the distance between the perimeter of two circles.\n\n```js\n// repl-pad#3\nconst toCenter = Circles.distanceCenter(circleA, circleB);\nconst toExterior = Circles.distanceFromExterior(circleA, circleB);\n```\n\n## Interpolate & point by angle\n\nGet the _x,y_ coordinate of a point on the perimeter of the circle at specified angle (in radians) with [`point`](https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html).\n\n```js\n// repl-pad#2\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Circles.point(circle, angleRadian, origin?):Point\nconst ptA = Circles.point(circle, Math.PI); // {x,y}\n```\n\nGet the x,y coordinate at a relative distance along circle\n\n```js\n// repl-pad#2\n// Get x,y at 75% along circle\nconst ptB = Circles.interpolate(circle, 0.75); // {x,y}\n```\n\n## Comparison\n\nEquality\n\n```js\n// Returns true if `a` and `b` circles have the same value\nCircles.isEqual(a, b);\n```\n\n', "html": '<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>\n</div>\n<p>A circle.</p>\n<p>The ixfx circle is described at the least by its radius:</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Circle</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// eg:</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>A circle is said to be <em>positioned</em> if it also includes <code is:raw>x</code> and <code is:raw>y</code> fields.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">CirclePositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>If a circle is positioned, it can be used with any of the <a href="../point/">Point</a> functions as well.</p>\n<h2 id="intersection">Intersection</h2>\n<p>Get the <a href="../point/">points</a> of intersection between a line and circle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html"><code is:raw>intersectionLine</code></a>. It returns an array of zero to three points, depending on the geometry.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token comment">// Circle and line to check</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersectionLine</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Get the points of intersection between two circles with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html"><code is:raw>intersections</code></a></p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersections</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// pts will be empty if there are no intersections</span>\n<span class="token comment">//  this can also be the case if circles are identical, or one completely encloses the other</span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code is:raw>isIntersecting</code></a>: <em>true</em> if two circles are overlapping or identical</li>\n</ul>\n<h2 id="area">Area</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html"><code is:raw>bbox</code></a> yields a rectangle that encompasses the circle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields: { x, y, width, height }</span>\nCircles<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>   </code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html"><code is:raw>area</code></a> computes the area of a circle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\nCircles<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="relating-circles">Relating circles</h2>\n<p>Check whether <code is:raw>circleB</code> is completely contained by <code is:raw>circleA</code> with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html"><code is:raw>isContainedBy</code></a>. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code is:raw>isIntersecting</code></a> returns <em>true</em> if two circles are overlapping or identical.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token keyword">const</span> circleA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> circleB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields: true/false</span>\nCircles<span class="token punctuation">.</span><span class="token function">isContainedBy</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\nCircles<span class="token punctuation">.</span><span class="token function">isIntersecting</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html"><code is:raw>distanceCenter</code></a> returns the distance between two circles\' centers. This requires that both circles are positioned. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html"><code is:raw>distanceFromExterior</code></a> returns the distance between the perimeter of two circles.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">const</span> toCenter <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceCenter</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> toExterior <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="interpolate--point-by-angle">Interpolate &#x26; point by angle</h2>\n<p>Get the <em>x,y</em> coordinate of a point on the perimeter of the circle at specified angle (in radians) with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html"><code is:raw>point</code></a>.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Circles.point(circle, angleRadian, origin?):Point</span>\n<span class="token keyword">const</span> ptA <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">point</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre>\n<p>Get the x,y coordinate at a relative distance along circle</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token comment">// Get x,y at 75% along circle</span>\n<span class="token keyword">const</span> ptB <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre>\n<h2 id="comparison">Comparison</h2>\n<p>Equality</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Returns true if `a` and `b` circles have the same value</span>\nCircles<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>' };
const frontmatter = { "title": "Circle", "astro": { "headers": [{ "depth": 2, "slug": "intersection", "text": "Intersection" }, { "depth": 2, "slug": "area", "text": "Area" }, { "depth": 2, "slug": "relating-circles", "text": "Relating circles" }, { "depth": 2, "slug": "interpolate--point-by-angle", "text": "Interpolate & point by angle" }, { "depth": 2, "slug": "comparison", "text": "Comparison" }], "source": '\n<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>\n</div>\n\nA circle.\n\nThe ixfx circle is described at the least by its radius:\n\n```typescript\ntype Circle = {\n  radius: number\n}\n\n// eg:\nconst c = { radius: 100 };\n```\n\nA circle is said to be _positioned_ if it also includes `x` and `y` fields.\n\n```typescript\ntype CirclePositioned = {\n  radius: number,\n  x: number,\n  y: number\n}\n\nconst c = { radius: 100, x: 50, y: 50 };\n```\n\nIf a circle is positioned, it can be used with any of the [Point](../point/) functions as well.\n\n## Intersection\n\nGet the [points](../point/) of intersection between a line and circle with [`intersectionLine`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html). It returns an array of zero to three points, depending on the geometry.\n\n```js\n// repl-pad\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// Circle and line to check\nconst circle = { radius: 10, x: 100, y: 100};\nconst line = {a: {x: 0, y: 0}, b: { x: 100, y: 100 } };\n\nconst pts = Circles.intersectionLine(circle, line);\n```\n\nGet the points of intersection between two circles with [`intersections`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html)\n\n```js\nconst pts = Circles.intersections(circleA, circleB);\n// pts will be empty if there are no intersections\n//  this can also be the case if circles are identical, or one completely encloses the other\n```\n\nSee also:\n* [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html): _true_ if two circles are overlapping or identical\n\n## Area\n\n[`bbox`](https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html) yields a rectangle that encompasses the circle.\n\n```js\n// repl-pad#1\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Yields: { x, y, width, height }\nCircles.bbox(circle);   \n``` \n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html) computes the area of a circle.\n\n```js\n// repl-pad#1\nCircles.area(circle);\n```\n\n\n## Relating circles\n\nCheck whether `circleB` is completely contained by `circleA` with [`isContainedBy`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html). [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html) returns _true_ if two circles are overlapping or identical.\n\n```js\n// repl-pad#3\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\n\nconst circleA = { radius: 10, x: 100, y: 100};\nconst circleB = { radius: 10, x: 150, y: 100};\n\n// Yields: true/false\nCircles.isContainedBy(circleA, circleB);\nCircles.isIntersecting(circleA, circleB);\n```\n\n[`distanceCenter`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html) returns the distance between two circles\' centers. This requires that both circles are positioned. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html) returns the distance between the perimeter of two circles.\n\n```js\n// repl-pad#3\nconst toCenter = Circles.distanceCenter(circleA, circleB);\nconst toExterior = Circles.distanceFromExterior(circleA, circleB);\n```\n\n## Interpolate & point by angle\n\nGet the _x,y_ coordinate of a point on the perimeter of the circle at specified angle (in radians) with [`point`](https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html).\n\n```js\n// repl-pad#2\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Circles.point(circle, angleRadian, origin?):Point\nconst ptA = Circles.point(circle, Math.PI); // {x,y}\n```\n\nGet the x,y coordinate at a relative distance along circle\n\n```js\n// repl-pad#2\n// Get x,y at 75% along circle\nconst ptB = Circles.interpolate(circle, 0.75); // {x,y}\n```\n\n## Comparison\n\nEquality\n\n```js\n// Returns true if `a` and `b` circles have the same value\nCircles.isEqual(a, b);\n```\n\n', "html": '<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>\n</div>\n<p>A circle.</p>\n<p>The ixfx circle is described at the least by its radius:</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Circle</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// eg:</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>A circle is said to be <em>positioned</em> if it also includes <code is:raw>x</code> and <code is:raw>y</code> fields.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">CirclePositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>If a circle is positioned, it can be used with any of the <a href="../point/">Point</a> functions as well.</p>\n<h2 id="intersection">Intersection</h2>\n<p>Get the <a href="../point/">points</a> of intersection between a line and circle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html"><code is:raw>intersectionLine</code></a>. It returns an array of zero to three points, depending on the geometry.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token comment">// Circle and line to check</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersectionLine</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Get the points of intersection between two circles with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html"><code is:raw>intersections</code></a></p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersections</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// pts will be empty if there are no intersections</span>\n<span class="token comment">//  this can also be the case if circles are identical, or one completely encloses the other</span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code is:raw>isIntersecting</code></a>: <em>true</em> if two circles are overlapping or identical</li>\n</ul>\n<h2 id="area">Area</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html"><code is:raw>bbox</code></a> yields a rectangle that encompasses the circle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields: { x, y, width, height }</span>\nCircles<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>   </code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html"><code is:raw>area</code></a> computes the area of a circle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\nCircles<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="relating-circles">Relating circles</h2>\n<p>Check whether <code is:raw>circleB</code> is completely contained by <code is:raw>circleA</code> with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html"><code is:raw>isContainedBy</code></a>. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code is:raw>isIntersecting</code></a> returns <em>true</em> if two circles are overlapping or identical.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token keyword">const</span> circleA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> circleB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields: true/false</span>\nCircles<span class="token punctuation">.</span><span class="token function">isContainedBy</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\nCircles<span class="token punctuation">.</span><span class="token function">isIntersecting</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html"><code is:raw>distanceCenter</code></a> returns the distance between two circles\' centers. This requires that both circles are positioned. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html"><code is:raw>distanceFromExterior</code></a> returns the distance between the perimeter of two circles.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">const</span> toCenter <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceCenter</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> toExterior <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="interpolate--point-by-angle">Interpolate &#x26; point by angle</h2>\n<p>Get the <em>x,y</em> coordinate of a point on the perimeter of the circle at specified angle (in radians) with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html"><code is:raw>point</code></a>.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Circles.point(circle, angleRadian, origin?):Point</span>\n<span class="token keyword">const</span> ptA <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">point</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre>\n<p>Get the x,y coordinate at a relative distance along circle</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token comment">// Get x,y at 75% along circle</span>\n<span class="token keyword">const</span> ptB <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre>\n<h2 id="comparison">Comparison</h2>\n<p>Equality</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Returns true if `a` and `b` circles have the same value</span>\nCircles<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>' } };
const $$metadata = createMetadata("/src/pages/types/geometry/circle.md", { modules: [{ module: $$module1, specifier: "astro/components", assert: {} }, { module: $$module1$1, specifier: "../../../layouts/MainLayout.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [{ type: "inline", value: `
import '/src/components/ReplPad';
` }] });
const $$Astro = createAstro("/src/pages/types/geometry/circle.md", "https://clinth.github.io/ixfx-docs/", "file:///Users/af4766/repos/ixfx-docs/");
const $$Circle = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Circle;
  const $$content = { "title": "Circle", "astro": { "headers": [{ "depth": 2, "slug": "intersection", "text": "Intersection" }, { "depth": 2, "slug": "area", "text": "Area" }, { "depth": 2, "slug": "relating-circles", "text": "Relating circles" }, { "depth": 2, "slug": "interpolate--point-by-angle", "text": "Interpolate & point by angle" }, { "depth": 2, "slug": "comparison", "text": "Comparison" }], "source": '\n<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>\n</div>\n\nA circle.\n\nThe ixfx circle is described at the least by its radius:\n\n```typescript\ntype Circle = {\n  radius: number\n}\n\n// eg:\nconst c = { radius: 100 };\n```\n\nA circle is said to be _positioned_ if it also includes `x` and `y` fields.\n\n```typescript\ntype CirclePositioned = {\n  radius: number,\n  x: number,\n  y: number\n}\n\nconst c = { radius: 100, x: 50, y: 50 };\n```\n\nIf a circle is positioned, it can be used with any of the [Point](../point/) functions as well.\n\n## Intersection\n\nGet the [points](../point/) of intersection between a line and circle with [`intersectionLine`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html). It returns an array of zero to three points, depending on the geometry.\n\n```js\n// repl-pad\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// Circle and line to check\nconst circle = { radius: 10, x: 100, y: 100};\nconst line = {a: {x: 0, y: 0}, b: { x: 100, y: 100 } };\n\nconst pts = Circles.intersectionLine(circle, line);\n```\n\nGet the points of intersection between two circles with [`intersections`](https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html)\n\n```js\nconst pts = Circles.intersections(circleA, circleB);\n// pts will be empty if there are no intersections\n//  this can also be the case if circles are identical, or one completely encloses the other\n```\n\nSee also:\n* [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html): _true_ if two circles are overlapping or identical\n\n## Area\n\n[`bbox`](https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html) yields a rectangle that encompasses the circle.\n\n```js\n// repl-pad#1\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Yields: { x, y, width, height }\nCircles.bbox(circle);   \n``` \n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html) computes the area of a circle.\n\n```js\n// repl-pad#1\nCircles.area(circle);\n```\n\n\n## Relating circles\n\nCheck whether `circleB` is completely contained by `circleA` with [`isContainedBy`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html). [`isIntersecting`](https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html) returns _true_ if two circles are overlapping or identical.\n\n```js\n// repl-pad#3\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\n\nconst circleA = { radius: 10, x: 100, y: 100};\nconst circleB = { radius: 10, x: 150, y: 100};\n\n// Yields: true/false\nCircles.isContainedBy(circleA, circleB);\nCircles.isIntersecting(circleA, circleB);\n```\n\n[`distanceCenter`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html) returns the distance between two circles\' centers. This requires that both circles are positioned. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html) returns the distance between the perimeter of two circles.\n\n```js\n// repl-pad#3\nconst toCenter = Circles.distanceCenter(circleA, circleB);\nconst toExterior = Circles.distanceFromExterior(circleA, circleB);\n```\n\n## Interpolate & point by angle\n\nGet the _x,y_ coordinate of a point on the perimeter of the circle at specified angle (in radians) with [`point`](https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html).\n\n```js\n// repl-pad#2\nimport { Circles } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst circle = { radius: 10, x: 100, y: 100};\n\n// Circles.point(circle, angleRadian, origin?):Point\nconst ptA = Circles.point(circle, Math.PI); // {x,y}\n```\n\nGet the x,y coordinate at a relative distance along circle\n\n```js\n// repl-pad#2\n// Get x,y at 75% along circle\nconst ptB = Circles.interpolate(circle, 0.75); // {x,y}\n```\n\n## Comparison\n\nEquality\n\n```js\n// Returns true if `a` and `b` circles have the same value\nCircles.isEqual(a, b);\n```\n\n', "html": '<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>\n</div>\n<p>A circle.</p>\n<p>The ixfx circle is described at the least by its radius:</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Circle</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// eg:</span>\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>A circle is said to be <em>positioned</em> if it also includes <code is:raw>x</code> and <code is:raw>y</code> fields.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">CirclePositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>If a circle is positioned, it can be used with any of the <a href="../point/">Point</a> functions as well.</p>\n<h2 id="intersection">Intersection</h2>\n<p>Get the <a href="../point/">points</a> of intersection between a line and circle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html"><code is:raw>intersectionLine</code></a>. It returns an array of zero to three points, depending on the geometry.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token comment">// Circle and line to check</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersectionLine</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Get the points of intersection between two circles with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html"><code is:raw>intersections</code></a></p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersections</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// pts will be empty if there are no intersections</span>\n<span class="token comment">//  this can also be the case if circles are identical, or one completely encloses the other</span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code is:raw>isIntersecting</code></a>: <em>true</em> if two circles are overlapping or identical</li>\n</ul>\n<h2 id="area">Area</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html"><code is:raw>bbox</code></a> yields a rectangle that encompasses the circle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields: { x, y, width, height }</span>\nCircles<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>   </code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html"><code is:raw>area</code></a> computes the area of a circle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\nCircles<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="relating-circles">Relating circles</h2>\n<p>Check whether <code is:raw>circleB</code> is completely contained by <code is:raw>circleA</code> with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html"><code is:raw>isContainedBy</code></a>. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code is:raw>isIntersecting</code></a> returns <em>true</em> if two circles are overlapping or identical.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token keyword">const</span> circleA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> circleB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields: true/false</span>\nCircles<span class="token punctuation">.</span><span class="token function">isContainedBy</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\nCircles<span class="token punctuation">.</span><span class="token function">isIntersecting</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html"><code is:raw>distanceCenter</code></a> returns the distance between two circles\' centers. This requires that both circles are positioned. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html"><code is:raw>distanceFromExterior</code></a> returns the distance between the perimeter of two circles.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">const</span> toCenter <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceCenter</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> toExterior <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="interpolate--point-by-angle">Interpolate &#x26; point by angle</h2>\n<p>Get the <em>x,y</em> coordinate of a point on the perimeter of the circle at specified angle (in radians) with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html"><code is:raw>point</code></a>.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Circles.point(circle, angleRadian, origin?):Point</span>\n<span class="token keyword">const</span> ptA <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">point</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre>\n<p>Get the x,y coordinate at a relative distance along circle</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token comment">// Get x,y at 75% along circle</span>\n<span class="token keyword">const</span> ptB <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre>\n<h2 id="comparison">Comparison</h2>\n<p>Equality</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Returns true if `a` and `b` circles have the same value</span>\nCircles<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>' } };
  const SCRIPTS = [
    { props: { "type": "module", "hoist": true }, children: `import '/src/components/ReplPad';` }
  ];
  for (const SCRIPT of SCRIPTS)
    $$result.scripts.add(SCRIPT);
  return render`${renderComponent($$result, "Layout", $$MainLayout, { "content": $$content }, { "default": () => render`<div class="tip">
<ul>
<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Circles.html">Geometry.Circles module</a></li>
</ul></div><p>A circle.</p><p>The ixfx circle is described at the least by its radius:</p><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Circle</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// eg:</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>A circle is said to be <em>positioned</em> if it also includes <code>x</code> and <code>y</code> fields.</p><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">CirclePositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> radius<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>If a circle is positioned, it can be used with any of the <a href="../point/">Point</a> functions as well.</p><h2 id="intersection">Intersection</h2><p>Get the <a href="../point/">points</a> of intersection between a line and circle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersectionLine.html"><code>intersectionLine</code></a>. It returns an array of zero to three points, depending on the geometry.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token comment">// Circle and line to check</span>
<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersectionLine</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Get the points of intersection between two circles with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.intersections.html"><code>intersections</code></a></p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> pts <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">intersections</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// pts will be empty if there are no intersections</span>
<span class="token comment">//  this can also be the case if circles are identical, or one completely encloses the other</span></code></pre><p>See also:</p><ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code>isIntersecting</code></a>: <em>true</em> if two circles are overlapping or identical</li>
</ul><h2 id="area">Area</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.bbox.html"><code>bbox</code></a> yields a rectangle that encompasses the circle.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Yields: { x, y, width, height }</span>
Circles<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>   </code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.area.html"><code>area</code></a> computes the area of a circle.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
Circles<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="relating-circles">Relating circles</h2><p>Check whether <code>circleB</code> is completely contained by <code>circleA</code> with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isContainedBy.html"><code>isContainedBy</code></a>. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.isIntersecting.html"><code>isIntersecting</code></a> returns <em>true</em> if two circles are overlapping or identical.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token keyword">const</span> circleA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> circleB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Yields: true/false</span>
Circles<span class="token punctuation">.</span><span class="token function">isContainedBy</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>
Circles<span class="token punctuation">.</span><span class="token function">isIntersecting</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceCenter.html"><code>distanceCenter</code></a> returns the distance between two circles' centers. This requires that both circles are positioned. <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.distanceFromExterior.html"><code>distanceFromExterior</code></a> returns the distance between the perimeter of two circles.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">const</span> toCenter <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceCenter</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> toExterior <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>circleA<span class="token punctuation">,</span> circleB<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="interpolate--point-by-angle">Interpolate &#x26; point by angle</h2><p>Get the <em>x,y</em> coordinate of a point on the perimeter of the circle at specified angle (in radians) with <a href="https://clinth.github.io/ixfx/functions/Geometry.Circles.point.html"><code>point</code></a>.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Circles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Circles.point(circle, angleRadian, origin?):Point</span>
<span class="token keyword">const</span> ptA <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">point</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre><p>Get the x,y coordinate at a relative distance along circle</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// Get x,y at 75% along circle</span>
<span class="token keyword">const</span> ptB <span class="token operator">=</span> Circles<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x,y}</span></code></pre><h2 id="comparison">Comparison</h2><p>Equality</p><pre class="language-js"><code class="language-js"><span class="token comment">// Returns true if \`a\` and \`b\` circles have the same value</span>
Circles<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>` })}`;
});

export { $$metadata, $$Circle as default, frontmatter, metadata };
