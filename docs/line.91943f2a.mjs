import { c as createMetadata, a as createAstro, b as createComponent, r as render, d as renderComponent } from './chunks/index.7bfc2e7e.mjs';
import { $ as $$module1, a as $$MainLayout } from './chunks/MainLayout.fae6d6b7.mjs';
import { $ as $$module2 } from './chunks/DemoElement.a29296a2.mjs';
import 'shorthash';
import 'serialize-javascript';
import 'preact/hooks';
import 'preact/jsx-runtime';
import 'lit';
import 'lit/decorators.js';
import './chunks/styles.9b8f8965.mjs';

const metadata = { "headers": [{ "depth": 2, "slug": "initialising", "text": "Initialising" }, { "depth": 2, "slug": "interpolation", "text": "Interpolation" }, { "depth": 2, "slug": "angles", "text": "Angles" }, { "depth": 2, "slug": "length--distances", "text": "Length & distances" }, { "depth": 2, "slug": "areas", "text": "Areas" }, { "depth": 2, "slug": "transforming", "text": "Transforming" }, { "depth": 2, "slug": "conversions", "text": "Conversions" }, { "depth": 2, "slug": "normalise", "text": "Normalise" }, { "depth": 2, "slug": "random", "text": "Random" }, { "depth": 2, "slug": "applying-functions", "text": "Applying functions" }, { "depth": 2, "slug": "math-operations", "text": "Math operations" }, { "depth": 2, "slug": "comparisons", "text": "Comparisons" }], "source": '\n<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>\n</div>\n\nA line is defined by two [Points](../point/)\n\n```typescript\ntype Line = {\n  a: Point,\n  b: Point\n}\n```\n\nFor example:\n```js\n// Line from 0,0 to 200,200\nconst line = {\n  a: {x: 0,   y:0 },\n  b: {x: 200, y:200 }\n}\n```\n\n## Initialising\n\nLines can be defined with both `a` and `b` fields as shown above. Alternatively, functions can initialise a line for you:\n\n```js\n// repl-pad#1\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// fromFlatArray([x1,y1,x2,y])\nconst a = Lines.fromFlatArray([0, 0, 200, 200]);\n\n// fromNumbers(x1,y1,x2,y2)\nconst b = Lines.fromNumbers(0, 0, 200, 200);\n\n// fromPoints(a:Point, a:Point)\nconst c = Lines.fromPoints({ x:0, y:0 }, { x:200, y:200 });\n```\n\n## Interpolation\n\n[`interpolate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html) allows you to calculate a point between the _a_ and _b_ points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 200, 200);\n\n// Get { x, y } at 50% along line\nLines.interpolate(0.5, line);\n\n// Get {x,y} at 80% between point A and B\nLines.interpolate(0.8, { x:0, y:0 }, { x:200, y:200 });\n```\n\n## Angles\n\n[Slope (gradient)](https://en.wikipedia.org/wiki/Slope) of line with [`slope`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope).\n\n```js\n// repl-pad#3\nimport { Lines, degreeToRadian } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Create line 0,0 -> 200,200\nconst line = Lines.fromNumbers(0,0,200,200);\n\n// Returns number\nLines.slope(line);\nLines.slope({x:10,y:10}, {x:20,y:20}); // Provide two points intead\n```\n\nAngle in radians of line to a point\n\n```js\n// repl-pad#3\n// Returns angle of line, in radians\nLines.angleRadian(line);\n```\n\nReturn a rotated line with [`rotate`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate).\n\n<demo-element title="Point math" src="/geometry/line-math/" />\n\n## Length & distances\n\nLength of the line can be calculated with [`length`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length).\n\n```js\n// repl-pad#2\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst line = Lines.fromNumbers(0,0,200,200);\nconst length = Lines.length(line); // Returns number\n```\n\nRelation of line to a point: [`distance`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance) and [`nearest`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest)\n\n```js\n// repl-pad#2\n// Closest distance of point to anywhere on a line\n// returns number\nLines.distance(line, {x:150, y:200});\n\n// Get the closest position on a line to some other point\n// returns {x,y}\nLines.nearest(line, {x:150, y:200});\n```\n\nIs a point within range of line?\n\n```js\n// repl-pad#2\n// True if 150,150 is within 100 distance of line\nLines.withinRange(line, {x:150,y:150}, 100);\n```\n\nSee also:\n* [`midpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html)\n\n## Areas\n\nCalculates a rectangle that encompasses line.\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Returns Rectangle { x, y, width, height }\nconst line = {\n  a: { x: 0,   y: 0   },\n  b: { x: 200, y: 200 }\n}\nconst rect = Lines.bbox(line);\n```\n\n## Transforming\n\n[`rotate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html) can, well, rotate a line.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// Rotate line by 0.1 radians around point 10,10\nLines.rotate(line, 0.1, {x:10, y:10});\n\n// Rotate line by 5 degrees around its center\nLines.rotate(line, degreeToRadian(5));\n\n// Rotate line by 5 degrees at 80% of the length of the line\nLines.rotate(line, degreeToRadian(5), Lines.interpolate(line, 0.8));\n\n// Rotate line by 5 degrees by its end point\nLines.rotate(line, degreeToRadian(5), line.b);\n```\n\n<demo-element title="Point math" src="/geometry/line-rotation/" />\n\nExtend the length of the line from its start position:\n\n```js\n// Lines.extendFromA(line:Line, distance:number): Line\n// Returns a new Line, ie { a:{x,y}, b:{x,y} }\nLines.extendFromA(line, 20);\n```\n\nSee also:\n* [`extendFromA`](https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html): Extends a line from its start\n* [`parallel`](https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html): Returns a line parallel to an input line at some distance\n* [`scaleFromMidpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html): Scales a line from its midpoint\n* [`perpendicularPoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html): Returns a point perpendicular to a line at a specified distance\n\n\n## Conversions\n\nConverting _from_ some other shape. These all return a Line (ie. `{a:{x,y}, b:{x,y}}`)\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Returns Line {a:{x,y}, b:}\nLines.fromPoints({x:0,y:0}, {x:100,y:100});\n\n// Convert from an array\n// ie. [x1,y1,x2,y2]\nLines.fromArray([0,0,100,100]);\n\n// Convert from positions\n// ie. x1,y1,x2,y2\nLines.fromNumbers(0,0,100,100);\n```\n\nConverting _to_ some other data shape\n\n```js\n// Yields [a.x,a.y,b.x,b.y]\nLines.toFlatArray(line.a, line.b);\n\n// Human-friendly string representation\nLines.toString(line);\n```\n\n\n## Normalise\n\nLines can be normalised with [`normaliseByRect`](https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html).\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\n// Line 1,1 -> 10,10\nconst l = Lines.fromNumbers(1, 1, 10, 10);\nconst ll = Lines.normaliseByRect(l, 10, 10);\n// Yields: 0.1,0.1 -> 1,1\n```\n\n## Random\n\nTo create a random line, leverage [`Points.random`](https://clinth.github.io/ixfx/functions/Geometry.Points.random.html)\n\n```js\nconst line = {\n  a: Points.random(),\n  b: Points.random()\n}\n```\n\n## Applying functions\n\nApply a function to start and end points of line:\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// A function that applies randomisation to x & y\nconst r = (p) => ({\n  x: p.x * Math.random(),\n  y: p.y * Math.random()\n});\n\n// Apply function to both start and end, returning result\nconst l = Lines.apply(line, r);\n```\n\n## Math operations\n\nLines has a few basic math functions: [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html), [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html), [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html)\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Line 1,1 -> 10,10\nconst line = Lines.fromNumbers(1,1,10,10);\n\n// Multiply both start and end points by given _x_ & _y_:\nconst lA = Lines.multiply(line, { x:2, y:3 });\n// Yields: 2,20 -> 3,30\n\nconst lB = Lines.sum(line, { x:2, y:3 });\n// Yields: 3,4 -> 12,13\n\nconst lC = Lines.subtract(line, { x:2, y:3 });\n// Yields: -1,-2 -> 8,7\n```\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html) compares the lines by value. If two lines have the same set of start and end points, it returns _true_.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst a = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\nconst b = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\n\na === b; // false, because they are different objects\n\nLines.isEqual(a, b); // true, because they have the same value\n```\n', "html": `<script type="module" hoist>
import '/src/components/ReplPad';
<\/script>
<div class="tip">
<ul>
<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>
</div>
<p>A line is defined by two <a href="../point/">Points</a></p>
<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Line</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> Point<span class="token punctuation">,</span>
  b<span class="token operator">:</span> Point
<span class="token punctuation">}</span></code></pre>
<p>For example:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Line from 0,0 to 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="initialising">Initialising</h2>
<p>Lines can be defined with both <code is:raw>a</code> and <code is:raw>b</code> fields as shown above. Alternatively, functions can initialise a line for you:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token comment">// fromFlatArray([x1,y1,x2,y])</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromFlatArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromNumbers(x1,y1,x2,y2)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromPoints(a:Point, a:Point)</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="interpolation">Interpolation</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html"><code is:raw>interpolate</code></a> allows you to calculate a point between the <em>a</em> and <em>b</em> points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get { x, y } at 50% along line</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get {x,y} at 80% between point A and B</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="angles">Angles</h2>
<p><a href="https://en.wikipedia.org/wiki/Slope">Slope (gradient)</a> of line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope"><code is:raw>slope</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines<span class="token punctuation">,</span> degreeToRadian <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Create line 0,0 -> 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Provide two points intead</span></code></pre>
<p>Angle in radians of line to a point</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token comment">// Returns angle of line, in radians</span>
Lines<span class="token punctuation">.</span><span class="token function">angleRadian</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Return a rotated line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate"><code is:raw>rotate</code></a>.</p>
<demo-element title="Point math" src="/geometry/line-math/" />
<h2 id="length--distances">Length &#x26; distances</h2>
<p>Length of the line can be calculated with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length"><code is:raw>length</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> length <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number</span></code></pre>
<p>Relation of line to a point: <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance"><code is:raw>distance</code></a> and <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest"><code is:raw>nearest</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// Closest distance of point to anywhere on a line</span>
<span class="token comment">// returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the closest position on a line to some other point</span>
<span class="token comment">// returns {x,y}</span>
Lines<span class="token punctuation">.</span><span class="token function">nearest</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Is a point within range of line?</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// True if 150,150 is within 100 distance of line</span>
Lines<span class="token punctuation">.</span><span class="token function">withinRange</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>See also:</p>
<ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html"><code is:raw>midpoint</code></a></li>
</ul>
<h2 id="areas">Areas</h2>
<p>Calculates a rectangle that encompasses line.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Rectangle { x, y, width, height }</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="transforming">Transforming</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html"><code is:raw>rotate</code></a> can, well, rotate a line.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 0.1 radians around point 10,10</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees around its center</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees at 80% of the length of the line</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees by its end point</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<demo-element title="Point math" src="/geometry/line-rotation/" />
<p>Extend the length of the line from its start position:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Lines.extendFromA(line:Line, distance:number): Line</span>
<span class="token comment">// Returns a new Line, ie { a:{x,y}, b:{x,y} }</span>
Lines<span class="token punctuation">.</span><span class="token function">extendFromA</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>See also:</p>
<ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html"><code is:raw>extendFromA</code></a>: Extends a line from its start</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html"><code is:raw>parallel</code></a>: Returns a line parallel to an input line at some distance</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html"><code is:raw>scaleFromMidpoint</code></a>: Scales a line from its midpoint</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html"><code is:raw>perpendicularPoint</code></a>: Returns a point perpendicular to a line at a specified distance</li>
</ul>
<h2 id="conversions">Conversions</h2>
<p>Converting <em>from</em> some other shape. These all return a Line (ie. <code is:raw>{a:{x,y}, b:{x,y}}</code>)</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Line {a:{x,y}, b:}</span>
Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from an array</span>
<span class="token comment">// ie. [x1,y1,x2,y2]</span>
Lines<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from positions</span>
<span class="token comment">// ie. x1,y1,x2,y2</span>
Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Converting <em>to</em> some other data shape</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Yields [a.x,a.y,b.x,b.y]</span>
Lines<span class="token punctuation">.</span><span class="token function">toFlatArray</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>a<span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Human-friendly string representation</span>
Lines<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="normalise">Normalise</h2>
<p>Lines can be normalised with <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html"><code is:raw>normaliseByRect</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ll <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">normaliseByRect</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 0.1,0.1 -> 1,1</span></code></pre>
<h2 id="random">Random</h2>
<p>To create a random line, leverage <a href="https://clinth.github.io/ixfx/functions/Geometry.Points.random.html"><code is:raw>Points.random</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="applying-functions">Applying functions</h2>
<p>Apply a function to start and end points of line:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// A function that applies randomisation to x &amp; y</span>
<span class="token keyword">const</span> <span class="token function-variable function">r</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> p<span class="token punctuation">.</span>x <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> p<span class="token punctuation">.</span>y <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Apply function to both start and end, returning result</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> <span class="token function">Lines</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="math-operations">Math operations</h2>
<p>Lines has a few basic math functions: <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html"><code is:raw>multiply</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html"><code is:raw>sum</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html"><code is:raw>subtract</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Multiply both start and end points by given _x_ &amp; _y_:</span>
<span class="token keyword">const</span> lA <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 2,20 -> 3,30</span>

<span class="token keyword">const</span> lB <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 3,4 -> 12,13</span>

<span class="token keyword">const</span> lC <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: -1,-2 -> 8,7</span></code></pre>
<h2 id="comparisons">Comparisons</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html"><code is:raw>isEqual</code></a> compares the lines by value. If two lines have the same set of start and end points, it returns <em>true</em>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

a <span class="token operator">===</span> b<span class="token punctuation">;</span> <span class="token comment">// false, because they are different objects</span>

Lines<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true, because they have the same value</span></code></pre>` };
const frontmatter = { "title": "Line", "astro": { "headers": [{ "depth": 2, "slug": "initialising", "text": "Initialising" }, { "depth": 2, "slug": "interpolation", "text": "Interpolation" }, { "depth": 2, "slug": "angles", "text": "Angles" }, { "depth": 2, "slug": "length--distances", "text": "Length & distances" }, { "depth": 2, "slug": "areas", "text": "Areas" }, { "depth": 2, "slug": "transforming", "text": "Transforming" }, { "depth": 2, "slug": "conversions", "text": "Conversions" }, { "depth": 2, "slug": "normalise", "text": "Normalise" }, { "depth": 2, "slug": "random", "text": "Random" }, { "depth": 2, "slug": "applying-functions", "text": "Applying functions" }, { "depth": 2, "slug": "math-operations", "text": "Math operations" }, { "depth": 2, "slug": "comparisons", "text": "Comparisons" }], "source": '\n<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>\n</div>\n\nA line is defined by two [Points](../point/)\n\n```typescript\ntype Line = {\n  a: Point,\n  b: Point\n}\n```\n\nFor example:\n```js\n// Line from 0,0 to 200,200\nconst line = {\n  a: {x: 0,   y:0 },\n  b: {x: 200, y:200 }\n}\n```\n\n## Initialising\n\nLines can be defined with both `a` and `b` fields as shown above. Alternatively, functions can initialise a line for you:\n\n```js\n// repl-pad#1\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// fromFlatArray([x1,y1,x2,y])\nconst a = Lines.fromFlatArray([0, 0, 200, 200]);\n\n// fromNumbers(x1,y1,x2,y2)\nconst b = Lines.fromNumbers(0, 0, 200, 200);\n\n// fromPoints(a:Point, a:Point)\nconst c = Lines.fromPoints({ x:0, y:0 }, { x:200, y:200 });\n```\n\n## Interpolation\n\n[`interpolate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html) allows you to calculate a point between the _a_ and _b_ points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 200, 200);\n\n// Get { x, y } at 50% along line\nLines.interpolate(0.5, line);\n\n// Get {x,y} at 80% between point A and B\nLines.interpolate(0.8, { x:0, y:0 }, { x:200, y:200 });\n```\n\n## Angles\n\n[Slope (gradient)](https://en.wikipedia.org/wiki/Slope) of line with [`slope`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope).\n\n```js\n// repl-pad#3\nimport { Lines, degreeToRadian } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Create line 0,0 -> 200,200\nconst line = Lines.fromNumbers(0,0,200,200);\n\n// Returns number\nLines.slope(line);\nLines.slope({x:10,y:10}, {x:20,y:20}); // Provide two points intead\n```\n\nAngle in radians of line to a point\n\n```js\n// repl-pad#3\n// Returns angle of line, in radians\nLines.angleRadian(line);\n```\n\nReturn a rotated line with [`rotate`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate).\n\n<demo-element title="Point math" src="/geometry/line-math/" />\n\n## Length & distances\n\nLength of the line can be calculated with [`length`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length).\n\n```js\n// repl-pad#2\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst line = Lines.fromNumbers(0,0,200,200);\nconst length = Lines.length(line); // Returns number\n```\n\nRelation of line to a point: [`distance`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance) and [`nearest`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest)\n\n```js\n// repl-pad#2\n// Closest distance of point to anywhere on a line\n// returns number\nLines.distance(line, {x:150, y:200});\n\n// Get the closest position on a line to some other point\n// returns {x,y}\nLines.nearest(line, {x:150, y:200});\n```\n\nIs a point within range of line?\n\n```js\n// repl-pad#2\n// True if 150,150 is within 100 distance of line\nLines.withinRange(line, {x:150,y:150}, 100);\n```\n\nSee also:\n* [`midpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html)\n\n## Areas\n\nCalculates a rectangle that encompasses line.\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Returns Rectangle { x, y, width, height }\nconst line = {\n  a: { x: 0,   y: 0   },\n  b: { x: 200, y: 200 }\n}\nconst rect = Lines.bbox(line);\n```\n\n## Transforming\n\n[`rotate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html) can, well, rotate a line.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// Rotate line by 0.1 radians around point 10,10\nLines.rotate(line, 0.1, {x:10, y:10});\n\n// Rotate line by 5 degrees around its center\nLines.rotate(line, degreeToRadian(5));\n\n// Rotate line by 5 degrees at 80% of the length of the line\nLines.rotate(line, degreeToRadian(5), Lines.interpolate(line, 0.8));\n\n// Rotate line by 5 degrees by its end point\nLines.rotate(line, degreeToRadian(5), line.b);\n```\n\n<demo-element title="Point math" src="/geometry/line-rotation/" />\n\nExtend the length of the line from its start position:\n\n```js\n// Lines.extendFromA(line:Line, distance:number): Line\n// Returns a new Line, ie { a:{x,y}, b:{x,y} }\nLines.extendFromA(line, 20);\n```\n\nSee also:\n* [`extendFromA`](https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html): Extends a line from its start\n* [`parallel`](https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html): Returns a line parallel to an input line at some distance\n* [`scaleFromMidpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html): Scales a line from its midpoint\n* [`perpendicularPoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html): Returns a point perpendicular to a line at a specified distance\n\n\n## Conversions\n\nConverting _from_ some other shape. These all return a Line (ie. `{a:{x,y}, b:{x,y}}`)\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Returns Line {a:{x,y}, b:}\nLines.fromPoints({x:0,y:0}, {x:100,y:100});\n\n// Convert from an array\n// ie. [x1,y1,x2,y2]\nLines.fromArray([0,0,100,100]);\n\n// Convert from positions\n// ie. x1,y1,x2,y2\nLines.fromNumbers(0,0,100,100);\n```\n\nConverting _to_ some other data shape\n\n```js\n// Yields [a.x,a.y,b.x,b.y]\nLines.toFlatArray(line.a, line.b);\n\n// Human-friendly string representation\nLines.toString(line);\n```\n\n\n## Normalise\n\nLines can be normalised with [`normaliseByRect`](https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html).\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\n// Line 1,1 -> 10,10\nconst l = Lines.fromNumbers(1, 1, 10, 10);\nconst ll = Lines.normaliseByRect(l, 10, 10);\n// Yields: 0.1,0.1 -> 1,1\n```\n\n## Random\n\nTo create a random line, leverage [`Points.random`](https://clinth.github.io/ixfx/functions/Geometry.Points.random.html)\n\n```js\nconst line = {\n  a: Points.random(),\n  b: Points.random()\n}\n```\n\n## Applying functions\n\nApply a function to start and end points of line:\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// A function that applies randomisation to x & y\nconst r = (p) => ({\n  x: p.x * Math.random(),\n  y: p.y * Math.random()\n});\n\n// Apply function to both start and end, returning result\nconst l = Lines.apply(line, r);\n```\n\n## Math operations\n\nLines has a few basic math functions: [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html), [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html), [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html)\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Line 1,1 -> 10,10\nconst line = Lines.fromNumbers(1,1,10,10);\n\n// Multiply both start and end points by given _x_ & _y_:\nconst lA = Lines.multiply(line, { x:2, y:3 });\n// Yields: 2,20 -> 3,30\n\nconst lB = Lines.sum(line, { x:2, y:3 });\n// Yields: 3,4 -> 12,13\n\nconst lC = Lines.subtract(line, { x:2, y:3 });\n// Yields: -1,-2 -> 8,7\n```\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html) compares the lines by value. If two lines have the same set of start and end points, it returns _true_.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst a = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\nconst b = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\n\na === b; // false, because they are different objects\n\nLines.isEqual(a, b); // true, because they have the same value\n```\n', "html": `<script type="module" hoist>
import '/src/components/ReplPad';
<\/script>
<div class="tip">
<ul>
<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>
</div>
<p>A line is defined by two <a href="../point/">Points</a></p>
<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Line</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> Point<span class="token punctuation">,</span>
  b<span class="token operator">:</span> Point
<span class="token punctuation">}</span></code></pre>
<p>For example:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Line from 0,0 to 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="initialising">Initialising</h2>
<p>Lines can be defined with both <code is:raw>a</code> and <code is:raw>b</code> fields as shown above. Alternatively, functions can initialise a line for you:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token comment">// fromFlatArray([x1,y1,x2,y])</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromFlatArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromNumbers(x1,y1,x2,y2)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromPoints(a:Point, a:Point)</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="interpolation">Interpolation</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html"><code is:raw>interpolate</code></a> allows you to calculate a point between the <em>a</em> and <em>b</em> points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get { x, y } at 50% along line</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get {x,y} at 80% between point A and B</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="angles">Angles</h2>
<p><a href="https://en.wikipedia.org/wiki/Slope">Slope (gradient)</a> of line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope"><code is:raw>slope</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines<span class="token punctuation">,</span> degreeToRadian <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Create line 0,0 -> 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Provide two points intead</span></code></pre>
<p>Angle in radians of line to a point</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token comment">// Returns angle of line, in radians</span>
Lines<span class="token punctuation">.</span><span class="token function">angleRadian</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Return a rotated line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate"><code is:raw>rotate</code></a>.</p>
<demo-element title="Point math" src="/geometry/line-math/" />
<h2 id="length--distances">Length &#x26; distances</h2>
<p>Length of the line can be calculated with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length"><code is:raw>length</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> length <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number</span></code></pre>
<p>Relation of line to a point: <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance"><code is:raw>distance</code></a> and <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest"><code is:raw>nearest</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// Closest distance of point to anywhere on a line</span>
<span class="token comment">// returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the closest position on a line to some other point</span>
<span class="token comment">// returns {x,y}</span>
Lines<span class="token punctuation">.</span><span class="token function">nearest</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Is a point within range of line?</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// True if 150,150 is within 100 distance of line</span>
Lines<span class="token punctuation">.</span><span class="token function">withinRange</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>See also:</p>
<ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html"><code is:raw>midpoint</code></a></li>
</ul>
<h2 id="areas">Areas</h2>
<p>Calculates a rectangle that encompasses line.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Rectangle { x, y, width, height }</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="transforming">Transforming</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html"><code is:raw>rotate</code></a> can, well, rotate a line.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 0.1 radians around point 10,10</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees around its center</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees at 80% of the length of the line</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees by its end point</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<demo-element title="Point math" src="/geometry/line-rotation/" />
<p>Extend the length of the line from its start position:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Lines.extendFromA(line:Line, distance:number): Line</span>
<span class="token comment">// Returns a new Line, ie { a:{x,y}, b:{x,y} }</span>
Lines<span class="token punctuation">.</span><span class="token function">extendFromA</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>See also:</p>
<ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html"><code is:raw>extendFromA</code></a>: Extends a line from its start</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html"><code is:raw>parallel</code></a>: Returns a line parallel to an input line at some distance</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html"><code is:raw>scaleFromMidpoint</code></a>: Scales a line from its midpoint</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html"><code is:raw>perpendicularPoint</code></a>: Returns a point perpendicular to a line at a specified distance</li>
</ul>
<h2 id="conversions">Conversions</h2>
<p>Converting <em>from</em> some other shape. These all return a Line (ie. <code is:raw>{a:{x,y}, b:{x,y}}</code>)</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Line {a:{x,y}, b:}</span>
Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from an array</span>
<span class="token comment">// ie. [x1,y1,x2,y2]</span>
Lines<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from positions</span>
<span class="token comment">// ie. x1,y1,x2,y2</span>
Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Converting <em>to</em> some other data shape</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Yields [a.x,a.y,b.x,b.y]</span>
Lines<span class="token punctuation">.</span><span class="token function">toFlatArray</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>a<span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Human-friendly string representation</span>
Lines<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="normalise">Normalise</h2>
<p>Lines can be normalised with <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html"><code is:raw>normaliseByRect</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ll <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">normaliseByRect</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 0.1,0.1 -> 1,1</span></code></pre>
<h2 id="random">Random</h2>
<p>To create a random line, leverage <a href="https://clinth.github.io/ixfx/functions/Geometry.Points.random.html"><code is:raw>Points.random</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="applying-functions">Applying functions</h2>
<p>Apply a function to start and end points of line:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// A function that applies randomisation to x &amp; y</span>
<span class="token keyword">const</span> <span class="token function-variable function">r</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> p<span class="token punctuation">.</span>x <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> p<span class="token punctuation">.</span>y <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Apply function to both start and end, returning result</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> <span class="token function">Lines</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="math-operations">Math operations</h2>
<p>Lines has a few basic math functions: <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html"><code is:raw>multiply</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html"><code is:raw>sum</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html"><code is:raw>subtract</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Multiply both start and end points by given _x_ &amp; _y_:</span>
<span class="token keyword">const</span> lA <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 2,20 -> 3,30</span>

<span class="token keyword">const</span> lB <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 3,4 -> 12,13</span>

<span class="token keyword">const</span> lC <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: -1,-2 -> 8,7</span></code></pre>
<h2 id="comparisons">Comparisons</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html"><code is:raw>isEqual</code></a> compares the lines by value. If two lines have the same set of start and end points, it returns <em>true</em>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

a <span class="token operator">===</span> b<span class="token punctuation">;</span> <span class="token comment">// false, because they are different objects</span>

Lines<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true, because they have the same value</span></code></pre>` } };
const $$metadata = createMetadata("/src/pages/types/geometry/line.md", { modules: [{ module: $$module1, specifier: "../../../layouts/MainLayout.astro", assert: {} }, { module: $$module2, specifier: "../../../components/DemoElement.ts", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [{ type: "inline", value: `
import '/src/components/ReplPad';
` }] });
const $$Astro = createAstro("/src/pages/types/geometry/line.md", "https://clinth.github.io/ixfx-docs/", "file:///Users/af4766/repos/ixfx-docs/");
const $$Line = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Line;
  const $$content = { "title": "Line", "astro": { "headers": [{ "depth": 2, "slug": "initialising", "text": "Initialising" }, { "depth": 2, "slug": "interpolation", "text": "Interpolation" }, { "depth": 2, "slug": "angles", "text": "Angles" }, { "depth": 2, "slug": "length--distances", "text": "Length & distances" }, { "depth": 2, "slug": "areas", "text": "Areas" }, { "depth": 2, "slug": "transforming", "text": "Transforming" }, { "depth": 2, "slug": "conversions", "text": "Conversions" }, { "depth": 2, "slug": "normalise", "text": "Normalise" }, { "depth": 2, "slug": "random", "text": "Random" }, { "depth": 2, "slug": "applying-functions", "text": "Applying functions" }, { "depth": 2, "slug": "math-operations", "text": "Math operations" }, { "depth": 2, "slug": "comparisons", "text": "Comparisons" }], "source": '\n<script type="module" hoist>\nimport \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>\n</div>\n\nA line is defined by two [Points](../point/)\n\n```typescript\ntype Line = {\n  a: Point,\n  b: Point\n}\n```\n\nFor example:\n```js\n// Line from 0,0 to 200,200\nconst line = {\n  a: {x: 0,   y:0 },\n  b: {x: 200, y:200 }\n}\n```\n\n## Initialising\n\nLines can be defined with both `a` and `b` fields as shown above. Alternatively, functions can initialise a line for you:\n\n```js\n// repl-pad#1\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// fromFlatArray([x1,y1,x2,y])\nconst a = Lines.fromFlatArray([0, 0, 200, 200]);\n\n// fromNumbers(x1,y1,x2,y2)\nconst b = Lines.fromNumbers(0, 0, 200, 200);\n\n// fromPoints(a:Point, a:Point)\nconst c = Lines.fromPoints({ x:0, y:0 }, { x:200, y:200 });\n```\n\n## Interpolation\n\n[`interpolate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html) allows you to calculate a point between the _a_ and _b_ points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 200, 200);\n\n// Get { x, y } at 50% along line\nLines.interpolate(0.5, line);\n\n// Get {x,y} at 80% between point A and B\nLines.interpolate(0.8, { x:0, y:0 }, { x:200, y:200 });\n```\n\n## Angles\n\n[Slope (gradient)](https://en.wikipedia.org/wiki/Slope) of line with [`slope`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope).\n\n```js\n// repl-pad#3\nimport { Lines, degreeToRadian } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Create line 0,0 -> 200,200\nconst line = Lines.fromNumbers(0,0,200,200);\n\n// Returns number\nLines.slope(line);\nLines.slope({x:10,y:10}, {x:20,y:20}); // Provide two points intead\n```\n\nAngle in radians of line to a point\n\n```js\n// repl-pad#3\n// Returns angle of line, in radians\nLines.angleRadian(line);\n```\n\nReturn a rotated line with [`rotate`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate).\n\n<demo-element title="Point math" src="/geometry/line-math/" />\n\n## Length & distances\n\nLength of the line can be calculated with [`length`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length).\n\n```js\n// repl-pad#2\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst line = Lines.fromNumbers(0,0,200,200);\nconst length = Lines.length(line); // Returns number\n```\n\nRelation of line to a point: [`distance`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance) and [`nearest`](https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest)\n\n```js\n// repl-pad#2\n// Closest distance of point to anywhere on a line\n// returns number\nLines.distance(line, {x:150, y:200});\n\n// Get the closest position on a line to some other point\n// returns {x,y}\nLines.nearest(line, {x:150, y:200});\n```\n\nIs a point within range of line?\n\n```js\n// repl-pad#2\n// True if 150,150 is within 100 distance of line\nLines.withinRange(line, {x:150,y:150}, 100);\n```\n\nSee also:\n* [`midpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html)\n\n## Areas\n\nCalculates a rectangle that encompasses line.\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Returns Rectangle { x, y, width, height }\nconst line = {\n  a: { x: 0,   y: 0   },\n  b: { x: 200, y: 200 }\n}\nconst rect = Lines.bbox(line);\n```\n\n## Transforming\n\n[`rotate`](https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html) can, well, rotate a line.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// Rotate line by 0.1 radians around point 10,10\nLines.rotate(line, 0.1, {x:10, y:10});\n\n// Rotate line by 5 degrees around its center\nLines.rotate(line, degreeToRadian(5));\n\n// Rotate line by 5 degrees at 80% of the length of the line\nLines.rotate(line, degreeToRadian(5), Lines.interpolate(line, 0.8));\n\n// Rotate line by 5 degrees by its end point\nLines.rotate(line, degreeToRadian(5), line.b);\n```\n\n<demo-element title="Point math" src="/geometry/line-rotation/" />\n\nExtend the length of the line from its start position:\n\n```js\n// Lines.extendFromA(line:Line, distance:number): Line\n// Returns a new Line, ie { a:{x,y}, b:{x,y} }\nLines.extendFromA(line, 20);\n```\n\nSee also:\n* [`extendFromA`](https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html): Extends a line from its start\n* [`parallel`](https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html): Returns a line parallel to an input line at some distance\n* [`scaleFromMidpoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html): Scales a line from its midpoint\n* [`perpendicularPoint`](https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html): Returns a point perpendicular to a line at a specified distance\n\n\n## Conversions\n\nConverting _from_ some other shape. These all return a Line (ie. `{a:{x,y}, b:{x,y}}`)\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Returns Line {a:{x,y}, b:}\nLines.fromPoints({x:0,y:0}, {x:100,y:100});\n\n// Convert from an array\n// ie. [x1,y1,x2,y2]\nLines.fromArray([0,0,100,100]);\n\n// Convert from positions\n// ie. x1,y1,x2,y2\nLines.fromNumbers(0,0,100,100);\n```\n\nConverting _to_ some other data shape\n\n```js\n// Yields [a.x,a.y,b.x,b.y]\nLines.toFlatArray(line.a, line.b);\n\n// Human-friendly string representation\nLines.toString(line);\n```\n\n\n## Normalise\n\nLines can be normalised with [`normaliseByRect`](https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html).\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\n// Line 1,1 -> 10,10\nconst l = Lines.fromNumbers(1, 1, 10, 10);\nconst ll = Lines.normaliseByRect(l, 10, 10);\n// Yields: 0.1,0.1 -> 1,1\n```\n\n## Random\n\nTo create a random line, leverage [`Points.random`](https://clinth.github.io/ixfx/functions/Geometry.Points.random.html)\n\n```js\nconst line = {\n  a: Points.random(),\n  b: Points.random()\n}\n```\n\n## Applying functions\n\nApply a function to start and end points of line:\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst line = Lines.fromNumbers(0, 0, 100, 100);\n\n// A function that applies randomisation to x & y\nconst r = (p) => ({\n  x: p.x * Math.random(),\n  y: p.y * Math.random()\n});\n\n// Apply function to both start and end, returning result\nconst l = Lines.apply(line, r);\n```\n\n## Math operations\n\nLines has a few basic math functions: [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html), [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html), [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html)\n\n```js\n// repl-pad\nimport { Lines } from "https://unpkg.com/ixfx/dist/geometry.js";\n\n// Line 1,1 -> 10,10\nconst line = Lines.fromNumbers(1,1,10,10);\n\n// Multiply both start and end points by given _x_ & _y_:\nconst lA = Lines.multiply(line, { x:2, y:3 });\n// Yields: 2,20 -> 3,30\n\nconst lB = Lines.sum(line, { x:2, y:3 });\n// Yields: 3,4 -> 12,13\n\nconst lC = Lines.subtract(line, { x:2, y:3 });\n// Yields: -1,-2 -> 8,7\n```\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html) compares the lines by value. If two lines have the same set of start and end points, it returns _true_.\n\n```js\n// repl-pad\nimport { Lines } from \'https://unpkg.com/ixfx/dist/geometry.js\'\n\nconst a = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\nconst b = { a: {x:0,  y: 10 }, b: { x: 20, y: 20 }};\n\na === b; // false, because they are different objects\n\nLines.isEqual(a, b); // true, because they have the same value\n```\n', "html": `<script type="module" hoist>
import '/src/components/ReplPad';
<\/script>
<div class="tip">
<ul>
<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>
</div>
<p>A line is defined by two <a href="../point/">Points</a></p>
<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Line</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> Point<span class="token punctuation">,</span>
  b<span class="token operator">:</span> Point
<span class="token punctuation">}</span></code></pre>
<p>For example:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Line from 0,0 to 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="initialising">Initialising</h2>
<p>Lines can be defined with both <code is:raw>a</code> and <code is:raw>b</code> fields as shown above. Alternatively, functions can initialise a line for you:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token comment">// fromFlatArray([x1,y1,x2,y])</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromFlatArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromNumbers(x1,y1,x2,y2)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromPoints(a:Point, a:Point)</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="interpolation">Interpolation</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html"><code is:raw>interpolate</code></a> allows you to calculate a point between the <em>a</em> and <em>b</em> points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get { x, y } at 50% along line</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get {x,y} at 80% between point A and B</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="angles">Angles</h2>
<p><a href="https://en.wikipedia.org/wiki/Slope">Slope (gradient)</a> of line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope"><code is:raw>slope</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines<span class="token punctuation">,</span> degreeToRadian <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Create line 0,0 -> 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Provide two points intead</span></code></pre>
<p>Angle in radians of line to a point</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token comment">// Returns angle of line, in radians</span>
Lines<span class="token punctuation">.</span><span class="token function">angleRadian</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Return a rotated line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate"><code is:raw>rotate</code></a>.</p>
<demo-element title="Point math" src="/geometry/line-math/" />
<h2 id="length--distances">Length &#x26; distances</h2>
<p>Length of the line can be calculated with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length"><code is:raw>length</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> length <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number</span></code></pre>
<p>Relation of line to a point: <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance"><code is:raw>distance</code></a> and <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest"><code is:raw>nearest</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// Closest distance of point to anywhere on a line</span>
<span class="token comment">// returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the closest position on a line to some other point</span>
<span class="token comment">// returns {x,y}</span>
Lines<span class="token punctuation">.</span><span class="token function">nearest</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Is a point within range of line?</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// True if 150,150 is within 100 distance of line</span>
Lines<span class="token punctuation">.</span><span class="token function">withinRange</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>See also:</p>
<ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html"><code is:raw>midpoint</code></a></li>
</ul>
<h2 id="areas">Areas</h2>
<p>Calculates a rectangle that encompasses line.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Rectangle { x, y, width, height }</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="transforming">Transforming</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html"><code is:raw>rotate</code></a> can, well, rotate a line.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 0.1 radians around point 10,10</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees around its center</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees at 80% of the length of the line</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees by its end point</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<demo-element title="Point math" src="/geometry/line-rotation/" />
<p>Extend the length of the line from its start position:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Lines.extendFromA(line:Line, distance:number): Line</span>
<span class="token comment">// Returns a new Line, ie { a:{x,y}, b:{x,y} }</span>
Lines<span class="token punctuation">.</span><span class="token function">extendFromA</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>See also:</p>
<ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html"><code is:raw>extendFromA</code></a>: Extends a line from its start</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html"><code is:raw>parallel</code></a>: Returns a line parallel to an input line at some distance</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html"><code is:raw>scaleFromMidpoint</code></a>: Scales a line from its midpoint</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html"><code is:raw>perpendicularPoint</code></a>: Returns a point perpendicular to a line at a specified distance</li>
</ul>
<h2 id="conversions">Conversions</h2>
<p>Converting <em>from</em> some other shape. These all return a Line (ie. <code is:raw>{a:{x,y}, b:{x,y}}</code>)</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Line {a:{x,y}, b:}</span>
Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from an array</span>
<span class="token comment">// ie. [x1,y1,x2,y2]</span>
Lines<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from positions</span>
<span class="token comment">// ie. x1,y1,x2,y2</span>
Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Converting <em>to</em> some other data shape</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Yields [a.x,a.y,b.x,b.y]</span>
Lines<span class="token punctuation">.</span><span class="token function">toFlatArray</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>a<span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Human-friendly string representation</span>
Lines<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="normalise">Normalise</h2>
<p>Lines can be normalised with <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html"><code is:raw>normaliseByRect</code></a>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ll <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">normaliseByRect</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 0.1,0.1 -> 1,1</span></code></pre>
<h2 id="random">Random</h2>
<p>To create a random line, leverage <a href="https://clinth.github.io/ixfx/functions/Geometry.Points.random.html"><code is:raw>Points.random</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre>
<h2 id="applying-functions">Applying functions</h2>
<p>Apply a function to start and end points of line:</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// A function that applies randomisation to x &amp; y</span>
<span class="token keyword">const</span> <span class="token function-variable function">r</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> p<span class="token punctuation">.</span>x <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> p<span class="token punctuation">.</span>y <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Apply function to both start and end, returning result</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> <span class="token function">Lines</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h2 id="math-operations">Math operations</h2>
<p>Lines has a few basic math functions: <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html"><code is:raw>multiply</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html"><code is:raw>sum</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html"><code is:raw>subtract</code></a></p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Multiply both start and end points by given _x_ &amp; _y_:</span>
<span class="token keyword">const</span> lA <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 2,20 -> 3,30</span>

<span class="token keyword">const</span> lB <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 3,4 -> 12,13</span>

<span class="token keyword">const</span> lC <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: -1,-2 -> 8,7</span></code></pre>
<h2 id="comparisons">Comparisons</h2>
<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html"><code is:raw>isEqual</code></a> compares the lines by value. If two lines have the same set of start and end points, it returns <em>true</em>.</p>
<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

a <span class="token operator">===</span> b<span class="token punctuation">;</span> <span class="token comment">// false, because they are different objects</span>

Lines<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true, because they have the same value</span></code></pre>` } };
  const SCRIPTS = [
    { props: { "type": "module", "hoist": true }, children: `import '/src/components/ReplPad';` }
  ];
  for (const SCRIPT of SCRIPTS)
    $$result.scripts.add(SCRIPT);
  return render`${renderComponent($$result, "Layout", $$MainLayout, { "content": $$content }, { "default": () => render`<div class="tip">
<ul>
<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html">Geometry.Lines module</a></li>
</ul></div><p>A line is defined by two <a href="../point/">Points</a></p><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Line</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> Point<span class="token punctuation">,</span>
  b<span class="token operator">:</span> Point
<span class="token punctuation">}</span></code></pre><p>For example:</p><pre class="language-js"><code class="language-js"><span class="token comment">// Line from 0,0 to 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre><h2 id="initialising">Initialising</h2><p>Lines can be defined with both <code>a</code> and <code>b</code> fields as shown above. Alternatively, functions can initialise a line for you:</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token comment">// fromFlatArray([x1,y1,x2,y])</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromFlatArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromNumbers(x1,y1,x2,y2)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fromPoints(a:Point, a:Point)</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="interpolation">Interpolation</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.interpolate.html"><code>interpolate</code></a> allows you to calculate a point between the <em>a</em> and <em>b</em> points (start and end) of a line. The interpolation is based on a percentage. 0 being the beginning of the line, 0.5 being halfway between the start and end, and 1 at the end.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get { x, y } at 50% along line</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get {x,y} at 80% between point A and B</span>
Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="angles">Angles</h2><p><a href="https://en.wikipedia.org/wiki/Slope">Slope (gradient)</a> of line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#slope"><code>slope</code></a>.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines<span class="token punctuation">,</span> degreeToRadian <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Create line 0,0 -> 200,200</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
Lines<span class="token punctuation">.</span><span class="token function">slope</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Provide two points intead</span></code></pre><p>Angle in radians of line to a point</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token comment">// Returns angle of line, in radians</span>
Lines<span class="token punctuation">.</span><span class="token function">angleRadian</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Return a rotated line with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#rotate"><code>rotate</code></a>.</p>${renderComponent($$result, "demo-element", "demo-element", { "title": "Point math", "src": "/geometry/line-math/" })}<h2 id="length--distances">Length &#x26; distances</h2><p>Length of the line can be calculated with <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#length"><code>length</code></a>.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> length <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number</span></code></pre><p>Relation of line to a point: <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#distance"><code>distance</code></a> and <a href="https://clinth.github.io/ixfx/modules/Geometry.Lines.html#nearest"><code>nearest</code></a></p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// Closest distance of point to anywhere on a line</span>
<span class="token comment">// returns number</span>
Lines<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get the closest position on a line to some other point</span>
<span class="token comment">// returns {x,y}</span>
Lines<span class="token punctuation">.</span><span class="token function">nearest</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Is a point within range of line?</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// True if 150,150 is within 100 distance of line</span>
Lines<span class="token punctuation">.</span><span class="token function">withinRange</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>See also:</p><ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.midpoint.html"><code>midpoint</code></a></li>
</ul><h2 id="areas">Areas</h2><p>Calculates a rectangle that encompasses line.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Rectangle { x, y, width, height }</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="transforming">Transforming</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.rotate.html"><code>rotate</code></a> can, well, rotate a line.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 0.1 radians around point 10,10</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees around its center</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees at 80% of the length of the line</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Lines<span class="token punctuation">.</span><span class="token function">interpolate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Rotate line by 5 degrees by its end point</span>
Lines<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token function">degreeToRadian</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>${renderComponent($$result, "demo-element", "demo-element", { "title": "Point math", "src": "/geometry/line-rotation/" })}<p>Extend the length of the line from its start position:</p><pre class="language-js"><code class="language-js"><span class="token comment">// Lines.extendFromA(line:Line, distance:number): Line</span>
<span class="token comment">// Returns a new Line, ie { a:{x,y}, b:{x,y} }</span>
Lines<span class="token punctuation">.</span><span class="token function">extendFromA</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>See also:</p><ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.extendFromA.html"><code>extendFromA</code></a>: Extends a line from its start</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.parallel.html"><code>parallel</code></a>: Returns a line parallel to an input line at some distance</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.scaleFromMidpoint.html"><code>scaleFromMidpoint</code></a>: Scales a line from its midpoint</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.perpendicularPoint.html"><code>perpendicularPoint</code></a>: Returns a point perpendicular to a line at a specified distance</li>
</ul><h2 id="conversions">Conversions</h2><p>Converting <em>from</em> some other shape. These all return a Line (ie. <code>{a:{x,y}, b:{x,y}}</code>)</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Returns Line {a:{x,y}, b:}</span>
Lines<span class="token punctuation">.</span><span class="token function">fromPoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from an array</span>
<span class="token comment">// ie. [x1,y1,x2,y2]</span>
Lines<span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Convert from positions</span>
<span class="token comment">// ie. x1,y1,x2,y2</span>
Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Converting <em>to</em> some other data shape</p><pre class="language-js"><code class="language-js"><span class="token comment">// Yields [a.x,a.y,b.x,b.y]</span>
Lines<span class="token punctuation">.</span><span class="token function">toFlatArray</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>a<span class="token punctuation">,</span> line<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Human-friendly string representation</span>
Lines<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="normalise">Normalise</h2><p>Lines can be normalised with <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.normaliseByRect.html"><code>normaliseByRect</code></a>.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ll <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">normaliseByRect</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 0.1,0.1 -> 1,1</span></code></pre><h2 id="random">Random</h2><p>To create a random line, leverage <a href="https://clinth.github.io/ixfx/functions/Geometry.Points.random.html"><code>Points.random</code></a></p><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> Points<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span></code></pre><h2 id="applying-functions">Applying functions</h2><p>Apply a function to start and end points of line:</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// A function that applies randomisation to x &amp; y</span>
<span class="token keyword">const</span> <span class="token function-variable function">r</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> p<span class="token punctuation">.</span>x <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">y</span><span class="token operator">:</span> p<span class="token punctuation">.</span>y <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Apply function to both start and end, returning result</span>
<span class="token keyword">const</span> l <span class="token operator">=</span> <span class="token function">Lines</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="math-operations">Math operations</h2><p>Lines has a few basic math functions: <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.multiply.html"><code>multiply</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.sum.html"><code>sum</code></a>, <a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.subtract.html"><code>subtract</code></a></p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token comment">// Line 1,1 -> 10,10</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Multiply both start and end points by given _x_ &amp; _y_:</span>
<span class="token keyword">const</span> lA <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 2,20 -> 3,30</span>

<span class="token keyword">const</span> lB <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: 3,4 -> 12,13</span>

<span class="token keyword">const</span> lC <span class="token operator">=</span> Lines<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Yields: -1,-2 -> 8,7</span></code></pre><h2 id="comparisons">Comparisons</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Lines.isEqual.html"><code>isEqual</code></a> compares the lines by value. If two lines have the same set of start and end points, it returns <em>true</em>.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Lines <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'https://unpkg.com/ixfx/dist/geometry.js'</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

a <span class="token operator">===</span> b<span class="token punctuation">;</span> <span class="token comment">// false, because they are different objects</span>

Lines<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true, because they have the same value</span></code></pre>` })}`;
});

export { $$metadata, $$Line as default, frontmatter, metadata };
