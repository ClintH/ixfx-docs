import { c as createMetadata, a as createAstro, b as createComponent, r as render, d as renderComponent } from './chunks/index.7bfc2e7e.mjs';
import { $ as $$module1, a as $$MainLayout } from './chunks/MainLayout.fae6d6b7.mjs';
import { $ as $$module2 } from './chunks/DemoElement.a29296a2.mjs';
import 'shorthash';
import 'serialize-javascript';
import 'preact/hooks';
import 'preact/jsx-runtime';
import 'lit';
import 'lit/decorators.js';
import './chunks/styles.9b8f8965.mjs';

const metadata = { "headers": [], "source": '\n\n<div class="tip"><ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>\n<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>\n</ul></div>\n\nWhen a function may succeed after some attempts, you might need a _retry_ logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.\n\nThis can be achieved using [`retryFunction`](https://clinth.github.io/ixfx/functions/Flow.retryFunction.html).\n\nIn the example, we will try up to five times to run the async function `doSomething`, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.\n\n```js\nimport { retry } from "https://unpkg.com/ixfx/dist/flow.js"\n\nconst doSomething = () => {\n  // If this function throws an error or returns undefined,\n  // it\'s assumed to have failed\n\n  // for it to succeed it has to return a value\n}\n\nconst result = await retryFunction(doSomething, { limitAttempts: 5, startAt: 1000 });\nif (result.success) {\n  // Yay result.value will contain the result of `doSomething`\n} else {\n  // result.message tells why it failed\n}\n```\n\nSee also:\n* [`waitFor`](https://clinth.github.io/ixfx/functions/Flow.waitFor.html): call a function and be notified if it doesn\'t finish within a certain time', "html": '<div class="tip"><ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>\n<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>\n</ul></div>\n<p>When a function may succeed after some attempts, you might need a <em>retry</em> logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.</p>\n<p>This can be achieved using <a href="https://clinth.github.io/ixfx/functions/Flow.retryFunction.html"><code is:raw>retryFunction</code></a>.</p>\n<p>In the example, we will try up to five times to run the async function <code is:raw>doSomething</code>, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> retry <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/flow.js"</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// If this function throws an error or returns undefined,</span>\n  <span class="token comment">// it\'s assumed to have failed</span>\n\n  <span class="token comment">// for it to succeed it has to return a value</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">retryFunction</span><span class="token punctuation">(</span>doSomething<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">limitAttempts</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">startAt</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Yay result.value will contain the result of `doSomething`</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token comment">// result.message tells why it failed</span>\n<span class="token punctuation">}</span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Flow.waitFor.html"><code is:raw>waitFor</code></a>: call a function and be notified if it doesn\'t finish within a certain time</li>\n</ul>' };
const frontmatter = { "title": "Retrying", "astro": { "headers": [], "source": '\n\n<div class="tip"><ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>\n<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>\n</ul></div>\n\nWhen a function may succeed after some attempts, you might need a _retry_ logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.\n\nThis can be achieved using [`retryFunction`](https://clinth.github.io/ixfx/functions/Flow.retryFunction.html).\n\nIn the example, we will try up to five times to run the async function `doSomething`, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.\n\n```js\nimport { retry } from "https://unpkg.com/ixfx/dist/flow.js"\n\nconst doSomething = () => {\n  // If this function throws an error or returns undefined,\n  // it\'s assumed to have failed\n\n  // for it to succeed it has to return a value\n}\n\nconst result = await retryFunction(doSomething, { limitAttempts: 5, startAt: 1000 });\nif (result.success) {\n  // Yay result.value will contain the result of `doSomething`\n} else {\n  // result.message tells why it failed\n}\n```\n\nSee also:\n* [`waitFor`](https://clinth.github.io/ixfx/functions/Flow.waitFor.html): call a function and be notified if it doesn\'t finish within a certain time', "html": '<div class="tip"><ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>\n<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>\n</ul></div>\n<p>When a function may succeed after some attempts, you might need a <em>retry</em> logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.</p>\n<p>This can be achieved using <a href="https://clinth.github.io/ixfx/functions/Flow.retryFunction.html"><code is:raw>retryFunction</code></a>.</p>\n<p>In the example, we will try up to five times to run the async function <code is:raw>doSomething</code>, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> retry <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/flow.js"</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// If this function throws an error or returns undefined,</span>\n  <span class="token comment">// it\'s assumed to have failed</span>\n\n  <span class="token comment">// for it to succeed it has to return a value</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">retryFunction</span><span class="token punctuation">(</span>doSomething<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">limitAttempts</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">startAt</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Yay result.value will contain the result of `doSomething`</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token comment">// result.message tells why it failed</span>\n<span class="token punctuation">}</span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Flow.waitFor.html"><code is:raw>waitFor</code></a>: call a function and be notified if it doesn\'t finish within a certain time</li>\n</ul>' } };
const $$metadata = createMetadata("/src/pages/flow/retrying.md", { modules: [{ module: $$module1, specifier: "../../layouts/MainLayout.astro", assert: {} }, { module: $$module2, specifier: "../../components/DemoElement.ts", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro = createAstro("/src/pages/flow/retrying.md", "https://clinth.github.io/ixfx-docs/", "file:///Users/af4766/repos/ixfx-docs/");
const $$Retrying = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Retrying;
  const $$content = { "title": "Retrying", "astro": { "headers": [], "source": '\n\n<div class="tip"><ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>\n<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>\n</ul></div>\n\nWhen a function may succeed after some attempts, you might need a _retry_ logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.\n\nThis can be achieved using [`retryFunction`](https://clinth.github.io/ixfx/functions/Flow.retryFunction.html).\n\nIn the example, we will try up to five times to run the async function `doSomething`, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.\n\n```js\nimport { retry } from "https://unpkg.com/ixfx/dist/flow.js"\n\nconst doSomething = () => {\n  // If this function throws an error or returns undefined,\n  // it\'s assumed to have failed\n\n  // for it to succeed it has to return a value\n}\n\nconst result = await retryFunction(doSomething, { limitAttempts: 5, startAt: 1000 });\nif (result.success) {\n  // Yay result.value will contain the result of `doSomething`\n} else {\n  // result.message tells why it failed\n}\n```\n\nSee also:\n* [`waitFor`](https://clinth.github.io/ixfx/functions/Flow.waitFor.html): call a function and be notified if it doesn\'t finish within a certain time', "html": '<div class="tip"><ul>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>\n<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>\n</ul></div>\n<p>When a function may succeed after some attempts, you might need a <em>retry</em> logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.</p>\n<p>This can be achieved using <a href="https://clinth.github.io/ixfx/functions/Flow.retryFunction.html"><code is:raw>retryFunction</code></a>.</p>\n<p>In the example, we will try up to five times to run the async function <code is:raw>doSomething</code>, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> retry <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/flow.js"</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// If this function throws an error or returns undefined,</span>\n  <span class="token comment">// it\'s assumed to have failed</span>\n\n  <span class="token comment">// for it to succeed it has to return a value</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">retryFunction</span><span class="token punctuation">(</span>doSomething<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">limitAttempts</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">startAt</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Yay result.value will contain the result of `doSomething`</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token comment">// result.message tells why it failed</span>\n<span class="token punctuation">}</span></code></pre>\n<p>See also:</p>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Flow.waitFor.html"><code is:raw>waitFor</code></a>: call a function and be notified if it doesn\'t finish within a certain time</li>\n</ul>' } };
  return render`${renderComponent($$result, "Layout", $$MainLayout, { "content": $$content }, { "default": () => render`<div class="tip"><ul>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Flow.html">Flow module</a></li>
<li><a href="https://clinth.github.io/ixfx-demos/flow/">Online demos</a></li>
</ul></div><p>When a function may succeed after some attempts, you might need a <em>retry</em> logic - keep trying the function until it succeeds, or after a certain number of attempts. You want some kind of waiting period between each attempt, eg to wait for a network connection.</p><p>This can be achieved using <a href="https://clinth.github.io/ixfx/functions/Flow.retryFunction.html"><code>retryFunction</code></a>.</p><p>In the example, we will try up to five times to run the async function <code>doSomething</code>, starting with 1 second delay if it fails. This time gets longer and longer with each attempt.</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> retry <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/flow.js"</span>

<span class="token keyword">const</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token comment">// If this function throws an error or returns undefined,</span>
  <span class="token comment">// it's assumed to have failed</span>

  <span class="token comment">// for it to succeed it has to return a value</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">retryFunction</span><span class="token punctuation">(</span>doSomething<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">limitAttempts</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">startAt</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Yay result.value will contain the result of \`doSomething\`</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// result.message tells why it failed</span>
<span class="token punctuation">}</span></code></pre><p>See also:</p><ul>
<li><a href="https://clinth.github.io/ixfx/functions/Flow.waitFor.html"><code>waitFor</code></a>: call a function and be notified if it doesn't finish within a certain time</li>
</ul>` })}`;
});

export { $$metadata, $$Retrying as default, frontmatter, metadata };
