import { c as createMetadata, a as createAstro, b as createComponent, r as render, d as renderComponent } from './chunks/index.7bfc2e7e.mjs';
import { $ as $$module1, a as $$MainLayout } from './chunks/MainLayout.fae6d6b7.mjs';
import { $ as $$module2 } from './ModuleList.495e80c3.mjs';
import 'shorthash';
import 'serialize-javascript';
import 'preact/hooks';
import 'preact/jsx-runtime';
import 'lit';

const metadata = { "headers": [], "source": '\n1. [Get the latest code](https://github.com/ClintH/ixfx/archive/refs/heads/main.zip)\n\n2. Download and unzip. Grab the files from the `dist` folder and put them into a folder called `ixfx` in a directory containing your sketches.\n\nThus you should have:\n```\n|- ixfx\\\n|-- arrays.d.ts\n|-- arrays.js\n|-- ...\n|- index.html <-- your HTML file\n|- script.js  <-- your JS sketch\n```\n\nAssuming then the folder _ixfx_ is in the same parent folder as your sketch, you should then be able to import using a relative path:\n\n```js\nimport { Timers } from "./ixfx/bundle.js"\nTimers.continuously(...);\n```\n\nThis is how the ixfx demos are organised, you can see this in action [in the repository](https://github.com/clinth/ixfx-demos/).', "html": '<ol>\n<li>\n<p><a href="https://github.com/ClintH/ixfx/archive/refs/heads/main.zip">Get the latest code</a></p>\n</li>\n<li>\n<p>Download and unzip. Grab the files from the <code is:raw>dist</code> folder and put them into a folder called <code is:raw>ixfx</code> in a directory containing your sketches.</p>\n</li>\n</ol>\n<p>Thus you should have:</p>\n<pre class="language-null"><code is:raw class="language-null">|- ixfx\\\n|-- arrays.d.ts\n|-- arrays.js\n|-- ...\n|- index.html &lt;-- your HTML file\n|- script.js  &lt;-- your JS sketch</code></pre>\n<p>Assuming then the folder <em>ixfx</em> is in the same parent folder as your sketch, you should then be able to import using a relative path:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> Timers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./ixfx/bundle.js"</span>\nTimers<span class="token punctuation">.</span><span class="token function">continuously</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>This is how the ixfx demos are organised, you can see this in action <a href="https://github.com/clinth/ixfx-demos/">in the repository</a>.</p>' };
const frontmatter = { "title": "Importing via a ZIP", "description": "Importing the library", "astro": { "headers": [], "source": '\n1. [Get the latest code](https://github.com/ClintH/ixfx/archive/refs/heads/main.zip)\n\n2. Download and unzip. Grab the files from the `dist` folder and put them into a folder called `ixfx` in a directory containing your sketches.\n\nThus you should have:\n```\n|- ixfx\\\n|-- arrays.d.ts\n|-- arrays.js\n|-- ...\n|- index.html <-- your HTML file\n|- script.js  <-- your JS sketch\n```\n\nAssuming then the folder _ixfx_ is in the same parent folder as your sketch, you should then be able to import using a relative path:\n\n```js\nimport { Timers } from "./ixfx/bundle.js"\nTimers.continuously(...);\n```\n\nThis is how the ixfx demos are organised, you can see this in action [in the repository](https://github.com/clinth/ixfx-demos/).', "html": '<ol>\n<li>\n<p><a href="https://github.com/ClintH/ixfx/archive/refs/heads/main.zip">Get the latest code</a></p>\n</li>\n<li>\n<p>Download and unzip. Grab the files from the <code is:raw>dist</code> folder and put them into a folder called <code is:raw>ixfx</code> in a directory containing your sketches.</p>\n</li>\n</ol>\n<p>Thus you should have:</p>\n<pre class="language-null"><code is:raw class="language-null">|- ixfx\\\n|-- arrays.d.ts\n|-- arrays.js\n|-- ...\n|- index.html &lt;-- your HTML file\n|- script.js  &lt;-- your JS sketch</code></pre>\n<p>Assuming then the folder <em>ixfx</em> is in the same parent folder as your sketch, you should then be able to import using a relative path:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> Timers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./ixfx/bundle.js"</span>\nTimers<span class="token punctuation">.</span><span class="token function">continuously</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>This is how the ixfx demos are organised, you can see this in action <a href="https://github.com/clinth/ixfx-demos/">in the repository</a>.</p>' } };
const $$metadata = createMetadata("/src/pages/import-zip.md", { modules: [{ module: $$module1, specifier: "../layouts/MainLayout.astro", assert: {} }, { module: $$module2, specifier: "./ModuleList.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [] });
const $$Astro = createAstro("/src/pages/import-zip.md", "https://clinth.github.io/ixfx-docs/", "file:///Users/af4766/repos/ixfx-docs/");
const $$ImportZip = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$ImportZip;
  const $$content = { "title": "Importing via a ZIP", "description": "Importing the library", "astro": { "headers": [], "source": '\n1. [Get the latest code](https://github.com/ClintH/ixfx/archive/refs/heads/main.zip)\n\n2. Download and unzip. Grab the files from the `dist` folder and put them into a folder called `ixfx` in a directory containing your sketches.\n\nThus you should have:\n```\n|- ixfx\\\n|-- arrays.d.ts\n|-- arrays.js\n|-- ...\n|- index.html <-- your HTML file\n|- script.js  <-- your JS sketch\n```\n\nAssuming then the folder _ixfx_ is in the same parent folder as your sketch, you should then be able to import using a relative path:\n\n```js\nimport { Timers } from "./ixfx/bundle.js"\nTimers.continuously(...);\n```\n\nThis is how the ixfx demos are organised, you can see this in action [in the repository](https://github.com/clinth/ixfx-demos/).', "html": '<ol>\n<li>\n<p><a href="https://github.com/ClintH/ixfx/archive/refs/heads/main.zip">Get the latest code</a></p>\n</li>\n<li>\n<p>Download and unzip. Grab the files from the <code is:raw>dist</code> folder and put them into a folder called <code is:raw>ixfx</code> in a directory containing your sketches.</p>\n</li>\n</ol>\n<p>Thus you should have:</p>\n<pre class="language-null"><code is:raw class="language-null">|- ixfx\\\n|-- arrays.d.ts\n|-- arrays.js\n|-- ...\n|- index.html &lt;-- your HTML file\n|- script.js  &lt;-- your JS sketch</code></pre>\n<p>Assuming then the folder <em>ixfx</em> is in the same parent folder as your sketch, you should then be able to import using a relative path:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> Timers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./ixfx/bundle.js"</span>\nTimers<span class="token punctuation">.</span><span class="token function">continuously</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>This is how the ixfx demos are organised, you can see this in action <a href="https://github.com/clinth/ixfx-demos/">in the repository</a>.</p>' } };
  return render`${renderComponent($$result, "Layout", $$MainLayout, { "content": $$content }, { "default": () => render`<ol>
<li>
<p><a href="https://github.com/ClintH/ixfx/archive/refs/heads/main.zip">Get the latest code</a></p>
</li>
<li>
<p>Download and unzip. Grab the files from the <code>dist</code> folder and put them into a folder called <code>ixfx</code> in a directory containing your sketches.</p>
</li>
</ol><p>Thus you should have:</p><pre class="language-null"><code class="language-null">|- ixfx\\
|-- arrays.d.ts
|-- arrays.js
|-- ...
|- index.html &lt;-- your HTML file
|- script.js  &lt;-- your JS sketch</code></pre><p>Assuming then the folder <em>ixfx</em> is in the same parent folder as your sketch, you should then be able to import using a relative path:</p><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> Timers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./ixfx/bundle.js"</span>
Timers<span class="token punctuation">.</span><span class="token function">continuously</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>This is how the ixfx demos are organised, you can see this in action <a href="https://github.com/clinth/ixfx-demos/">in the repository</a>.</p>` })}`;
});

export { $$metadata, $$ImportZip as default, frontmatter, metadata };
