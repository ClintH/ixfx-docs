import { c as createMetadata, a as createAstro, b as createComponent, r as render, d as renderComponent } from './chunks/index.7bfc2e7e.mjs';
import { $ as $$module1, a as $$MainLayout } from './chunks/MainLayout.fae6d6b7.mjs';
import 'shorthash';
import 'serialize-javascript';
import 'preact/hooks';
import 'preact/jsx-runtime';
import 'lit';

const metadata = { "headers": [{ "depth": 2, "slug": "initialising", "text": "Initialising" }, { "depth": 2, "slug": "area", "text": "Area" }, { "depth": 2, "slug": "relations", "text": "Relations" }, { "depth": 2, "slug": "conversions", "text": "Conversions" }, { "depth": 2, "slug": "corners-and-edges", "text": "Corners and edges" }, { "depth": 2, "slug": "math-operations", "text": "Math operations" }, { "depth": 2, "slug": "comparisons", "text": "Comparisons" }], "source": '\n<script type="module" hoist>\n  import \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>\n</div>\n\nRectangles are defined as having a width and height.\n\n```typescript\ntype Rect = {\n  width: number\n  height: number\n}\n```\n\nRectangles are _positioned_ if they also have _x_ and _y_ fields. The coordinate designates the top-left corner of the rectangle.\n\n```typescript\ntype RectPositioned = {\n  width: number\n  height: number\n  x: number\n  y: number\n}\n```\n\n## Initialising\n\nRectangles can be created simply as a plain object:\n\n```js\n// Un-positioned rectangle of width & height\nconst rectA = { width: 50, height: 10 };\n\n// Positioned rectangle with top-left at 10,10\nconst rectB = { width: 100, height: 50, x: 10, y: 10 };\n```\n\nThere are also several helper functions to base the rectangle on some shape you already have.\n\nFrom a center point with [`fromCenter`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter)\n\n```js\n// repl-pad#1\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;\n\n// Create a rect with a center at 10,0\n// a width of 100, height 200\nconst r1 = Rects.fromCenter({x: 10, y: 0}, 100, 200);\n```\n\nFrom the size of an element with [`fromElement`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement):\n\n```js\n// repl-pad#1\n// Rects.fromElement(el:HTMLElement):Rect\nconst r2 = Rects.fromElement(document.querySelector(`body`));\n```\n\nFrom its top-left corner with [`fromTopLeft`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft):\n\n```js\n// repl-pad#1\n// fromTopLeft(origin: Point, width: number, height: number): RectPositioned\n\n// Create a rect with top-left corner at 10,0\n// a width of 100 and height of 200\nconst r3 = Rects.fromTopLeft({x:10,y:0}, 100, 200);\n```\n\nInitialises a rectangle that can encompass all the provided points:\n\n```js\n// repl-pad\nimport { Points } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst r = Points.bbox({x:10, y:10}, {x:0,y:0});\n```\n\n[`fromNumbers`](https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html) allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width & height. If four numbers are given, the first two are considered the top-left corner coordinate.\n\n```js\n// repl-pad#1\n// width: 100, height: 200\nRects.fromNumbers(100, 200);\n// top-left: 50,20 width: 100, height: 200\nRects.fromNumbers(50, 20, 100, 200);\n```\n\n## Area\n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html) computes the area of a rectangle\n\n```js\n// repl-pad#2\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\n// Yields a number\nRects.area(rect);\n```\n\nCompute the center [Point](../point/) of a rectangle with [`center`](https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html).\n\n```js\n// repl-pad#2\n// yields {x,y}\nconst pt = Rects.center(rect);\n```\n\n## Relations\n\n[`distanceFromCenter`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html) returns the distance of a point (or any positioned thing) to the center of a rectangle. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html) is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nRects.distanceFromCenter(rect, { x: 90, y: 200 });\nRects.distanceFromExterior(rect, {x : 90, y: 200 });\n```\n\n[`intersectsPoint`](https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html) returns _true_ if a point is within, or on the boundary of a rectangle.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\nRects.intersectsPoint(rect, {x: 0, y: 0 }); // true\nRects.intersectsPoint(rect, {x: 50, y: 50}); // true\n```\n\n## Conversions\n\n\n## Corners and edges\n\n[`corners`](https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html) returns a set of four [Points](../point/) for each corner: top-left, top-right, bottom-right, bottom-left.\n\n```js\n// repl-pad#3\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nconst pts = Rects.corners(rect);\n```\n\n[`edges`](https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html) returns four [Lines](../line/) - top, right, bottom, left.\n\n```js\n// repl-pad#3\nRects.edges(rect);\n```\n\n[`lengths`](https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html) returns the lengths of each edge (top, right, bottom, left).\n\n```js\n// repl-pad#3\nRects.lengths(rect);\n```\n\n[`getEdgeX`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html) and [`getEdgeY`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html) return the _x_ or _y_ coordinate of an edge. Signal which edge with a string: right, bottom, left or top.\n\n```js\n// repl-pad#3\n// x-coordinate of the right edge\nRects.getEdgeX(rect, `right`);\n\n// y-coordinate of the top edge\nRects.getEdgeY(rect, `top`);\n```\n\n## Math operations\n\n* [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html): minus rectangle width/height\n* [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html): adds rectangle width/height\n* [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html)\n\nNote all the math operations return a new rectangle, the inputs are not modified.\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html) returns _true_ if the rectangle properties are the same. [`isEqualSize`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html) ignores the position of the rectangles and compares based on width and height.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js";\n\nconst rectA = { width: 10, height: 10, x: 10, y: 10 };\nconst rectB = { width: 10, height: 10, x: 20, y: 20 };\n\nRects.isEqualSize(rectA, rectB); // true\nRects.isEqual(rectA, rectB); // false\n```', "html": '<script type="module" hoist>\n  import \'/src/components/ReplPad\';\n<\/script>\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>\n</div>\n<p>Rectangles are defined as having a width and height.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Rect</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token builtin">number</span>\n  height<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span></code></pre>\n<p>Rectangles are <em>positioned</em> if they also have <em>x</em> and <em>y</em> fields. The coordinate designates the top-left corner of the rectangle.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">RectPositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token builtin">number</span>\n  height<span class="token operator">:</span> <span class="token builtin">number</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="initialising">Initialising</h2>\n<p>Rectangles can be created simply as a plain object:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Un-positioned rectangle of width &amp; height</span>\n<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Positioned rectangle with top-left at 10,10</span>\n<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>There are also several helper functions to base the rectangle on some shape you already have.</p>\n<p>From a center point with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter"><code is:raw>fromCenter</code></a></p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token comment">// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;</span>\n\n<span class="token comment">// Create a rect with a center at 10,0</span>\n<span class="token comment">// a width of 100, height 200</span>\n<span class="token keyword">const</span> r1 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromCenter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>From the size of an element with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement"><code is:raw>fromElement</code></a>:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// Rects.fromElement(el:HTMLElement):Rect</span>\n<span class="token keyword">const</span> r2 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromElement</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>From its top-left corner with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft"><code is:raw>fromTopLeft</code></a>:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// fromTopLeft(origin: Point, width: number, height: number): RectPositioned</span>\n\n<span class="token comment">// Create a rect with top-left corner at 10,0</span>\n<span class="token comment">// a width of 100 and height of 200</span>\n<span class="token keyword">const</span> r3 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromTopLeft</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Initialises a rectangle that can encompass all the provided points:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Points <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> r <span class="token operator">=</span> Points<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html"><code is:raw>fromNumbers</code></a> allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width &#x26; height. If four numbers are given, the first two are considered the top-left corner coordinate.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// width: 100, height: 200</span>\nRects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// top-left: 50,20 width: 100, height: 200</span>\nRects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="area">Area</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html"><code is:raw>area</code></a> computes the area of a rectangle</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields a number</span>\nRects<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Compute the center <a href="../point/">Point</a> of a rectangle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html"><code is:raw>center</code></a>.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token comment">// yields {x,y}</span>\n<span class="token keyword">const</span> pt <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="relations">Relations</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html"><code is:raw>distanceFromCenter</code></a> returns the distance of a point (or any positioned thing) to the center of a rectangle. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html"><code is:raw>distanceFromExterior</code></a> is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nRects<span class="token punctuation">.</span><span class="token function">distanceFromCenter</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nRects<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span> <span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html"><code is:raw>intersectsPoint</code></a> returns <em>true</em> if a point is within, or on the boundary of a rectangle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nRects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\nRects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></code></pre>\n<h2 id="conversions">Conversions</h2>\n<h2 id="corners-and-edges">Corners and edges</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html"><code is:raw>corners</code></a> returns a set of four <a href="../point/">Points</a> for each corner: top-left, top-right, bottom-right, bottom-left.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pts <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">corners</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html"><code is:raw>edges</code></a> returns four <a href="../line/">Lines</a> - top, right, bottom, left.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\nRects<span class="token punctuation">.</span><span class="token function">edges</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html"><code is:raw>lengths</code></a> returns the lengths of each edge (top, right, bottom, left).</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\nRects<span class="token punctuation">.</span><span class="token function">lengths</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html"><code is:raw>getEdgeX</code></a> and <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html"><code is:raw>getEdgeY</code></a> return the <em>x</em> or <em>y</em> coordinate of an edge. Signal which edge with a string: right, bottom, left or top.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token comment">// x-coordinate of the right edge</span>\nRects<span class="token punctuation">.</span><span class="token function">getEdgeX</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">right</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// y-coordinate of the top edge</span>\nRects<span class="token punctuation">.</span><span class="token function">getEdgeY</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">top</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="math-operations">Math operations</h2>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html"><code is:raw>subtract</code></a>: minus rectangle width/height</li>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html"><code is:raw>sum</code></a>: adds rectangle width/height</li>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html"><code is:raw>multiply</code></a></li>\n</ul>\n<p>Note all the math operations return a new rectangle, the inputs are not modified.</p>\n<h2 id="comparisons">Comparisons</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html"><code is:raw>isEqual</code></a> returns <em>true</em> if the rectangle properties are the same. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html"><code is:raw>isEqualSize</code></a> ignores the position of the rectangles and compares based on width and height.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nRects<span class="token punctuation">.</span><span class="token function">isEqualSize</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\nRects<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></code></pre>' };
const frontmatter = { "title": "Rectangle", "astro": { "headers": [{ "depth": 2, "slug": "initialising", "text": "Initialising" }, { "depth": 2, "slug": "area", "text": "Area" }, { "depth": 2, "slug": "relations", "text": "Relations" }, { "depth": 2, "slug": "conversions", "text": "Conversions" }, { "depth": 2, "slug": "corners-and-edges", "text": "Corners and edges" }, { "depth": 2, "slug": "math-operations", "text": "Math operations" }, { "depth": 2, "slug": "comparisons", "text": "Comparisons" }], "source": '\n<script type="module" hoist>\n  import \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>\n</div>\n\nRectangles are defined as having a width and height.\n\n```typescript\ntype Rect = {\n  width: number\n  height: number\n}\n```\n\nRectangles are _positioned_ if they also have _x_ and _y_ fields. The coordinate designates the top-left corner of the rectangle.\n\n```typescript\ntype RectPositioned = {\n  width: number\n  height: number\n  x: number\n  y: number\n}\n```\n\n## Initialising\n\nRectangles can be created simply as a plain object:\n\n```js\n// Un-positioned rectangle of width & height\nconst rectA = { width: 50, height: 10 };\n\n// Positioned rectangle with top-left at 10,10\nconst rectB = { width: 100, height: 50, x: 10, y: 10 };\n```\n\nThere are also several helper functions to base the rectangle on some shape you already have.\n\nFrom a center point with [`fromCenter`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter)\n\n```js\n// repl-pad#1\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;\n\n// Create a rect with a center at 10,0\n// a width of 100, height 200\nconst r1 = Rects.fromCenter({x: 10, y: 0}, 100, 200);\n```\n\nFrom the size of an element with [`fromElement`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement):\n\n```js\n// repl-pad#1\n// Rects.fromElement(el:HTMLElement):Rect\nconst r2 = Rects.fromElement(document.querySelector(`body`));\n```\n\nFrom its top-left corner with [`fromTopLeft`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft):\n\n```js\n// repl-pad#1\n// fromTopLeft(origin: Point, width: number, height: number): RectPositioned\n\n// Create a rect with top-left corner at 10,0\n// a width of 100 and height of 200\nconst r3 = Rects.fromTopLeft({x:10,y:0}, 100, 200);\n```\n\nInitialises a rectangle that can encompass all the provided points:\n\n```js\n// repl-pad\nimport { Points } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst r = Points.bbox({x:10, y:10}, {x:0,y:0});\n```\n\n[`fromNumbers`](https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html) allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width & height. If four numbers are given, the first two are considered the top-left corner coordinate.\n\n```js\n// repl-pad#1\n// width: 100, height: 200\nRects.fromNumbers(100, 200);\n// top-left: 50,20 width: 100, height: 200\nRects.fromNumbers(50, 20, 100, 200);\n```\n\n## Area\n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html) computes the area of a rectangle\n\n```js\n// repl-pad#2\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\n// Yields a number\nRects.area(rect);\n```\n\nCompute the center [Point](../point/) of a rectangle with [`center`](https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html).\n\n```js\n// repl-pad#2\n// yields {x,y}\nconst pt = Rects.center(rect);\n```\n\n## Relations\n\n[`distanceFromCenter`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html) returns the distance of a point (or any positioned thing) to the center of a rectangle. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html) is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nRects.distanceFromCenter(rect, { x: 90, y: 200 });\nRects.distanceFromExterior(rect, {x : 90, y: 200 });\n```\n\n[`intersectsPoint`](https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html) returns _true_ if a point is within, or on the boundary of a rectangle.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\nRects.intersectsPoint(rect, {x: 0, y: 0 }); // true\nRects.intersectsPoint(rect, {x: 50, y: 50}); // true\n```\n\n## Conversions\n\n\n## Corners and edges\n\n[`corners`](https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html) returns a set of four [Points](../point/) for each corner: top-left, top-right, bottom-right, bottom-left.\n\n```js\n// repl-pad#3\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nconst pts = Rects.corners(rect);\n```\n\n[`edges`](https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html) returns four [Lines](../line/) - top, right, bottom, left.\n\n```js\n// repl-pad#3\nRects.edges(rect);\n```\n\n[`lengths`](https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html) returns the lengths of each edge (top, right, bottom, left).\n\n```js\n// repl-pad#3\nRects.lengths(rect);\n```\n\n[`getEdgeX`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html) and [`getEdgeY`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html) return the _x_ or _y_ coordinate of an edge. Signal which edge with a string: right, bottom, left or top.\n\n```js\n// repl-pad#3\n// x-coordinate of the right edge\nRects.getEdgeX(rect, `right`);\n\n// y-coordinate of the top edge\nRects.getEdgeY(rect, `top`);\n```\n\n## Math operations\n\n* [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html): minus rectangle width/height\n* [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html): adds rectangle width/height\n* [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html)\n\nNote all the math operations return a new rectangle, the inputs are not modified.\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html) returns _true_ if the rectangle properties are the same. [`isEqualSize`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html) ignores the position of the rectangles and compares based on width and height.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js";\n\nconst rectA = { width: 10, height: 10, x: 10, y: 10 };\nconst rectB = { width: 10, height: 10, x: 20, y: 20 };\n\nRects.isEqualSize(rectA, rectB); // true\nRects.isEqual(rectA, rectB); // false\n```', "html": '<script type="module" hoist>\n  import \'/src/components/ReplPad\';\n<\/script>\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>\n</div>\n<p>Rectangles are defined as having a width and height.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Rect</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token builtin">number</span>\n  height<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span></code></pre>\n<p>Rectangles are <em>positioned</em> if they also have <em>x</em> and <em>y</em> fields. The coordinate designates the top-left corner of the rectangle.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">RectPositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token builtin">number</span>\n  height<span class="token operator">:</span> <span class="token builtin">number</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="initialising">Initialising</h2>\n<p>Rectangles can be created simply as a plain object:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Un-positioned rectangle of width &amp; height</span>\n<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Positioned rectangle with top-left at 10,10</span>\n<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>There are also several helper functions to base the rectangle on some shape you already have.</p>\n<p>From a center point with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter"><code is:raw>fromCenter</code></a></p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token comment">// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;</span>\n\n<span class="token comment">// Create a rect with a center at 10,0</span>\n<span class="token comment">// a width of 100, height 200</span>\n<span class="token keyword">const</span> r1 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromCenter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>From the size of an element with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement"><code is:raw>fromElement</code></a>:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// Rects.fromElement(el:HTMLElement):Rect</span>\n<span class="token keyword">const</span> r2 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromElement</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>From its top-left corner with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft"><code is:raw>fromTopLeft</code></a>:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// fromTopLeft(origin: Point, width: number, height: number): RectPositioned</span>\n\n<span class="token comment">// Create a rect with top-left corner at 10,0</span>\n<span class="token comment">// a width of 100 and height of 200</span>\n<span class="token keyword">const</span> r3 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromTopLeft</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Initialises a rectangle that can encompass all the provided points:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Points <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> r <span class="token operator">=</span> Points<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html"><code is:raw>fromNumbers</code></a> allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width &#x26; height. If four numbers are given, the first two are considered the top-left corner coordinate.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// width: 100, height: 200</span>\nRects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// top-left: 50,20 width: 100, height: 200</span>\nRects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="area">Area</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html"><code is:raw>area</code></a> computes the area of a rectangle</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields a number</span>\nRects<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Compute the center <a href="../point/">Point</a> of a rectangle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html"><code is:raw>center</code></a>.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token comment">// yields {x,y}</span>\n<span class="token keyword">const</span> pt <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="relations">Relations</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html"><code is:raw>distanceFromCenter</code></a> returns the distance of a point (or any positioned thing) to the center of a rectangle. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html"><code is:raw>distanceFromExterior</code></a> is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nRects<span class="token punctuation">.</span><span class="token function">distanceFromCenter</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nRects<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span> <span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html"><code is:raw>intersectsPoint</code></a> returns <em>true</em> if a point is within, or on the boundary of a rectangle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nRects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\nRects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></code></pre>\n<h2 id="conversions">Conversions</h2>\n<h2 id="corners-and-edges">Corners and edges</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html"><code is:raw>corners</code></a> returns a set of four <a href="../point/">Points</a> for each corner: top-left, top-right, bottom-right, bottom-left.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pts <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">corners</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html"><code is:raw>edges</code></a> returns four <a href="../line/">Lines</a> - top, right, bottom, left.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\nRects<span class="token punctuation">.</span><span class="token function">edges</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html"><code is:raw>lengths</code></a> returns the lengths of each edge (top, right, bottom, left).</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\nRects<span class="token punctuation">.</span><span class="token function">lengths</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html"><code is:raw>getEdgeX</code></a> and <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html"><code is:raw>getEdgeY</code></a> return the <em>x</em> or <em>y</em> coordinate of an edge. Signal which edge with a string: right, bottom, left or top.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token comment">// x-coordinate of the right edge</span>\nRects<span class="token punctuation">.</span><span class="token function">getEdgeX</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">right</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// y-coordinate of the top edge</span>\nRects<span class="token punctuation">.</span><span class="token function">getEdgeY</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">top</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="math-operations">Math operations</h2>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html"><code is:raw>subtract</code></a>: minus rectangle width/height</li>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html"><code is:raw>sum</code></a>: adds rectangle width/height</li>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html"><code is:raw>multiply</code></a></li>\n</ul>\n<p>Note all the math operations return a new rectangle, the inputs are not modified.</p>\n<h2 id="comparisons">Comparisons</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html"><code is:raw>isEqual</code></a> returns <em>true</em> if the rectangle properties are the same. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html"><code is:raw>isEqualSize</code></a> ignores the position of the rectangles and compares based on width and height.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nRects<span class="token punctuation">.</span><span class="token function">isEqualSize</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\nRects<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></code></pre>' } };
const $$metadata = createMetadata("/src/pages/types/geometry/rect.md", { modules: [{ module: $$module1, specifier: "../../../layouts/MainLayout.astro", assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: /* @__PURE__ */ new Set([]), hoisted: [{ type: "inline", value: `
  import '/src/components/ReplPad';
` }] });
const $$Astro = createAstro("/src/pages/types/geometry/rect.md", "https://clinth.github.io/ixfx-docs/", "file:///Users/af4766/repos/ixfx-docs/");
const $$Rect = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Rect;
  const $$content = { "title": "Rectangle", "astro": { "headers": [{ "depth": 2, "slug": "initialising", "text": "Initialising" }, { "depth": 2, "slug": "area", "text": "Area" }, { "depth": 2, "slug": "relations", "text": "Relations" }, { "depth": 2, "slug": "conversions", "text": "Conversions" }, { "depth": 2, "slug": "corners-and-edges", "text": "Corners and edges" }, { "depth": 2, "slug": "math-operations", "text": "Math operations" }, { "depth": 2, "slug": "comparisons", "text": "Comparisons" }], "source": '\n<script type="module" hoist>\n  import \'/src/components/ReplPad\';\n<\/script>\n\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>\n</div>\n\nRectangles are defined as having a width and height.\n\n```typescript\ntype Rect = {\n  width: number\n  height: number\n}\n```\n\nRectangles are _positioned_ if they also have _x_ and _y_ fields. The coordinate designates the top-left corner of the rectangle.\n\n```typescript\ntype RectPositioned = {\n  width: number\n  height: number\n  x: number\n  y: number\n}\n```\n\n## Initialising\n\nRectangles can be created simply as a plain object:\n\n```js\n// Un-positioned rectangle of width & height\nconst rectA = { width: 50, height: 10 };\n\n// Positioned rectangle with top-left at 10,10\nconst rectB = { width: 100, height: 50, x: 10, y: 10 };\n```\n\nThere are also several helper functions to base the rectangle on some shape you already have.\n\nFrom a center point with [`fromCenter`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter)\n\n```js\n// repl-pad#1\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\n\n// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;\n\n// Create a rect with a center at 10,0\n// a width of 100, height 200\nconst r1 = Rects.fromCenter({x: 10, y: 0}, 100, 200);\n```\n\nFrom the size of an element with [`fromElement`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement):\n\n```js\n// repl-pad#1\n// Rects.fromElement(el:HTMLElement):Rect\nconst r2 = Rects.fromElement(document.querySelector(`body`));\n```\n\nFrom its top-left corner with [`fromTopLeft`](https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft):\n\n```js\n// repl-pad#1\n// fromTopLeft(origin: Point, width: number, height: number): RectPositioned\n\n// Create a rect with top-left corner at 10,0\n// a width of 100 and height of 200\nconst r3 = Rects.fromTopLeft({x:10,y:0}, 100, 200);\n```\n\nInitialises a rectangle that can encompass all the provided points:\n\n```js\n// repl-pad\nimport { Points } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst r = Points.bbox({x:10, y:10}, {x:0,y:0});\n```\n\n[`fromNumbers`](https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html) allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width & height. If four numbers are given, the first two are considered the top-left corner coordinate.\n\n```js\n// repl-pad#1\n// width: 100, height: 200\nRects.fromNumbers(100, 200);\n// top-left: 50,20 width: 100, height: 200\nRects.fromNumbers(50, 20, 100, 200);\n```\n\n## Area\n\n[`area`](https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html) computes the area of a rectangle\n\n```js\n// repl-pad#2\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\n// Yields a number\nRects.area(rect);\n```\n\nCompute the center [Point](../point/) of a rectangle with [`center`](https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html).\n\n```js\n// repl-pad#2\n// yields {x,y}\nconst pt = Rects.center(rect);\n```\n\n## Relations\n\n[`distanceFromCenter`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html) returns the distance of a point (or any positioned thing) to the center of a rectangle. [`distanceFromExterior`](https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html) is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nRects.distanceFromCenter(rect, { x: 90, y: 200 });\nRects.distanceFromExterior(rect, {x : 90, y: 200 });\n```\n\n[`intersectsPoint`](https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html) returns _true_ if a point is within, or on the boundary of a rectangle.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\nRects.intersectsPoint(rect, {x: 0, y: 0 }); // true\nRects.intersectsPoint(rect, {x: 50, y: 50}); // true\n```\n\n## Conversions\n\n\n## Corners and edges\n\n[`corners`](https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html) returns a set of four [Points](../point/) for each corner: top-left, top-right, bottom-right, bottom-left.\n\n```js\n// repl-pad#3\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js"\nconst rect = {x:0, y:0, width: 100, height: 100};\n\nconst pts = Rects.corners(rect);\n```\n\n[`edges`](https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html) returns four [Lines](../line/) - top, right, bottom, left.\n\n```js\n// repl-pad#3\nRects.edges(rect);\n```\n\n[`lengths`](https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html) returns the lengths of each edge (top, right, bottom, left).\n\n```js\n// repl-pad#3\nRects.lengths(rect);\n```\n\n[`getEdgeX`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html) and [`getEdgeY`](https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html) return the _x_ or _y_ coordinate of an edge. Signal which edge with a string: right, bottom, left or top.\n\n```js\n// repl-pad#3\n// x-coordinate of the right edge\nRects.getEdgeX(rect, `right`);\n\n// y-coordinate of the top edge\nRects.getEdgeY(rect, `top`);\n```\n\n## Math operations\n\n* [`subtract`](https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html): minus rectangle width/height\n* [`sum`](https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html): adds rectangle width/height\n* [`multiply`](https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html)\n\nNote all the math operations return a new rectangle, the inputs are not modified.\n\n## Comparisons\n\n[`isEqual`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html) returns _true_ if the rectangle properties are the same. [`isEqualSize`](https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html) ignores the position of the rectangles and compares based on width and height.\n\n```js\n// repl-pad\nimport { Rects } from "https://unpkg.com/ixfx/dist/geometry.js";\n\nconst rectA = { width: 10, height: 10, x: 10, y: 10 };\nconst rectB = { width: 10, height: 10, x: 20, y: 20 };\n\nRects.isEqualSize(rectA, rectB); // true\nRects.isEqual(rectA, rectB); // false\n```', "html": '<script type="module" hoist>\n  import \'/src/components/ReplPad\';\n<\/script>\n<div class="tip">\n<ul>\n<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>\n<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>\n</div>\n<p>Rectangles are defined as having a width and height.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Rect</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token builtin">number</span>\n  height<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span></code></pre>\n<p>Rectangles are <em>positioned</em> if they also have <em>x</em> and <em>y</em> fields. The coordinate designates the top-left corner of the rectangle.</p>\n<pre class="language-typescript"><code is:raw class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">RectPositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token builtin">number</span>\n  height<span class="token operator">:</span> <span class="token builtin">number</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span></code></pre>\n<h2 id="initialising">Initialising</h2>\n<p>Rectangles can be created simply as a plain object:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// Un-positioned rectangle of width &amp; height</span>\n<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Positioned rectangle with top-left at 10,10</span>\n<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>There are also several helper functions to base the rectangle on some shape you already have.</p>\n<p>From a center point with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter"><code is:raw>fromCenter</code></a></p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n\n<span class="token comment">// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;</span>\n\n<span class="token comment">// Create a rect with a center at 10,0</span>\n<span class="token comment">// a width of 100, height 200</span>\n<span class="token keyword">const</span> r1 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromCenter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>From the size of an element with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement"><code is:raw>fromElement</code></a>:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// Rects.fromElement(el:HTMLElement):Rect</span>\n<span class="token keyword">const</span> r2 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromElement</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">body</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>From its top-left corner with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft"><code is:raw>fromTopLeft</code></a>:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// fromTopLeft(origin: Point, width: number, height: number): RectPositioned</span>\n\n<span class="token comment">// Create a rect with top-left corner at 10,0</span>\n<span class="token comment">// a width of 100 and height of 200</span>\n<span class="token keyword">const</span> r3 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromTopLeft</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Initialises a rectangle that can encompass all the provided points:</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Points <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> r <span class="token operator">=</span> Points<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html"><code is:raw>fromNumbers</code></a> allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width &#x26; height. If four numbers are given, the first two are considered the top-left corner coordinate.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#1</span>\n<span class="token comment">// width: 100, height: 200</span>\nRects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// top-left: 50,20 width: 100, height: 200</span>\nRects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="area">Area</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html"><code is:raw>area</code></a> computes the area of a rectangle</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Yields a number</span>\nRects<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Compute the center <a href="../point/">Point</a> of a rectangle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html"><code is:raw>center</code></a>.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#2</span>\n<span class="token comment">// yields {x,y}</span>\n<span class="token keyword">const</span> pt <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="relations">Relations</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html"><code is:raw>distanceFromCenter</code></a> returns the distance of a point (or any positioned thing) to the center of a rectangle. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html"><code is:raw>distanceFromExterior</code></a> is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nRects<span class="token punctuation">.</span><span class="token function">distanceFromCenter</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nRects<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span> <span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html"><code is:raw>intersectsPoint</code></a> returns <em>true</em> if a point is within, or on the boundary of a rectangle.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nRects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\nRects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></code></pre>\n<h2 id="conversions">Conversions</h2>\n<h2 id="corners-and-edges">Corners and edges</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html"><code is:raw>corners</code></a> returns a set of four <a href="../point/">Points</a> for each corner: top-left, top-right, bottom-right, bottom-left.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>\n<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> pts <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">corners</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html"><code is:raw>edges</code></a> returns four <a href="../line/">Lines</a> - top, right, bottom, left.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\nRects<span class="token punctuation">.</span><span class="token function">edges</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html"><code is:raw>lengths</code></a> returns the lengths of each edge (top, right, bottom, left).</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\nRects<span class="token punctuation">.</span><span class="token function">lengths</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html"><code is:raw>getEdgeX</code></a> and <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html"><code is:raw>getEdgeY</code></a> return the <em>x</em> or <em>y</em> coordinate of an edge. Signal which edge with a string: right, bottom, left or top.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad#3</span>\n<span class="token comment">// x-coordinate of the right edge</span>\nRects<span class="token punctuation">.</span><span class="token function">getEdgeX</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">right</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// y-coordinate of the top edge</span>\nRects<span class="token punctuation">.</span><span class="token function">getEdgeY</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">top</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="math-operations">Math operations</h2>\n<ul>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html"><code is:raw>subtract</code></a>: minus rectangle width/height</li>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html"><code is:raw>sum</code></a>: adds rectangle width/height</li>\n<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html"><code is:raw>multiply</code></a></li>\n</ul>\n<p>Note all the math operations return a new rectangle, the inputs are not modified.</p>\n<h2 id="comparisons">Comparisons</h2>\n<p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html"><code is:raw>isEqual</code></a> returns <em>true</em> if the rectangle properties are the same. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html"><code is:raw>isEqualSize</code></a> ignores the position of the rectangles and compares based on width and height.</p>\n<pre class="language-js"><code is:raw class="language-js"><span class="token comment">// repl-pad</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nRects<span class="token punctuation">.</span><span class="token function">isEqualSize</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\nRects<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></code></pre>' } };
  const SCRIPTS = [
    { props: { "type": "module", "hoist": true }, children: `import '/src/components/ReplPad';` }
  ];
  for (const SCRIPT of SCRIPTS)
    $$result.scripts.add(SCRIPT);
  return render`${renderComponent($$result, "Layout", $$MainLayout, { "content": $$content }, { "default": () => render`<div class="tip">
<ul>
<li>Demos <a href="https://clinth.github.io/ixfx-demos/geometry/">Geometry</a> (<a href="https://github.com/ClintH/ixfx-demos/tree/main/geometry">source</a>)</li>
<li>API Reference <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html">Geometry.Rects module</a></li>
</ul></div><p>Rectangles are defined as having a width and height.</p><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">Rect</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span></code></pre><p>Rectangles are <em>positioned</em> if they also have <em>x</em> and <em>y</em> fields. The coordinate designates the top-left corner of the rectangle.</p><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">type</span> <span class="token class-name">RectPositioned</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span></code></pre><h2 id="initialising">Initialising</h2><p>Rectangles can be created simply as a plain object:</p><pre class="language-js"><code class="language-js"><span class="token comment">// Un-positioned rectangle of width &amp; height</span>
<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Positioned rectangle with top-left at 10,10</span>
<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>There are also several helper functions to base the rectangle on some shape you already have.</p><p>From a center point with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromCenter"><code>fromCenter</code></a></p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>

<span class="token comment">// Rects.fromCenter(origin:Point, width:number, height:number):RectPositioned;</span>

<span class="token comment">// Create a rect with a center at 10,0</span>
<span class="token comment">// a width of 100, height 200</span>
<span class="token keyword">const</span> r1 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromCenter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>From the size of an element with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromElement"><code>fromElement</code></a>:</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token comment">// Rects.fromElement(el:HTMLElement):Rect</span>
<span class="token keyword">const</span> r2 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromElement</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">body</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>From its top-left corner with <a href="https://clinth.github.io/ixfx/modules/Geometry.Rects.html#fromTopLeft"><code>fromTopLeft</code></a>:</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token comment">// fromTopLeft(origin: Point, width: number, height: number): RectPositioned</span>

<span class="token comment">// Create a rect with top-left corner at 10,0</span>
<span class="token comment">// a width of 100 and height of 200</span>
<span class="token keyword">const</span> r3 <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">fromTopLeft</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Initialises a rectangle that can encompass all the provided points:</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Points <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> r <span class="token operator">=</span> Points<span class="token punctuation">.</span><span class="token function">bbox</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.fromNumbers.html"><code>fromNumbers</code></a> allows you to create a rectangle from a set of number parameters. If two numbers are used, its assumed to be width &#x26; height. If four numbers are given, the first two are considered the top-left corner coordinate.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#1</span>
<span class="token comment">// width: 100, height: 200</span>
Rects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// top-left: 50,20 width: 100, height: 200</span>
Rects<span class="token punctuation">.</span><span class="token function">fromNumbers</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="area">Area</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.area.html"><code>area</code></a> computes the area of a rectangle</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Yields a number</span>
Rects<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>Compute the center <a href="../point/">Point</a> of a rectangle with <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.center.html"><code>center</code></a>.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#2</span>
<span class="token comment">// yields {x,y}</span>
<span class="token keyword">const</span> pt <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="relations">Relations</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromCenter.html"><code>distanceFromCenter</code></a> returns the distance of a point (or any positioned thing) to the center of a rectangle. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.distanceFromExterior.html"><code>distanceFromExterior</code></a> is similar, but yields the distance to the perimeter. If the point is within the rectangle, 0 is returned.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

Rects<span class="token punctuation">.</span><span class="token function">distanceFromCenter</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Rects<span class="token punctuation">.</span><span class="token function">distanceFromExterior</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span> <span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.intersectsPoint.html"><code>intersectsPoint</code></a> returns <em>true</em> if a point is within, or on the boundary of a rectangle.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Rects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Rects<span class="token punctuation">.</span><span class="token function">intersectsPoint</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></code></pre><h2 id="conversions">Conversions</h2><h2 id="corners-and-edges">Corners and edges</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.corners.html"><code>corners</code></a> returns a set of four <a href="../point/">Points</a> for each corner: top-left, top-right, bottom-right, bottom-left.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span>
<span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> pts <span class="token operator">=</span> Rects<span class="token punctuation">.</span><span class="token function">corners</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.edges.html"><code>edges</code></a> returns four <a href="../line/">Lines</a> - top, right, bottom, left.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
Rects<span class="token punctuation">.</span><span class="token function">edges</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.lengths.html"><code>lengths</code></a> returns the lengths of each edge (top, right, bottom, left).</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
Rects<span class="token punctuation">.</span><span class="token function">lengths</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeX.html"><code>getEdgeX</code></a> and <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.getEdgeY.html"><code>getEdgeY</code></a> return the <em>x</em> or <em>y</em> coordinate of an edge. Signal which edge with a string: right, bottom, left or top.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad#3</span>
<span class="token comment">// x-coordinate of the right edge</span>
Rects<span class="token punctuation">.</span><span class="token function">getEdgeX</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">right</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// y-coordinate of the top edge</span>
Rects<span class="token punctuation">.</span><span class="token function">getEdgeY</span><span class="token punctuation">(</span>rect<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">top</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="math-operations">Math operations</h2><ul>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.subtract.html"><code>subtract</code></a>: minus rectangle width/height</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.sum.html"><code>sum</code></a>: adds rectangle width/height</li>
<li><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.multiply.html"><code>multiply</code></a></li>
</ul><p>Note all the math operations return a new rectangle, the inputs are not modified.</p><h2 id="comparisons">Comparisons</h2><p><a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqual.html"><code>isEqual</code></a> returns <em>true</em> if the rectangle properties are the same. <a href="https://clinth.github.io/ixfx/functions/Geometry.Rects.isEqualSize.html"><code>isEqualSize</code></a> ignores the position of the rectangles and compares based on width and height.</p><pre class="language-js"><code class="language-js"><span class="token comment">// repl-pad</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Rects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"https://unpkg.com/ixfx/dist/geometry.js"</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> rectA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> rectB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

Rects<span class="token punctuation">.</span><span class="token function">isEqualSize</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Rects<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>rectA<span class="token punctuation">,</span> rectB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></code></pre>` })}`;
});

export { $$metadata, $$Rect as default, frontmatter, metadata };
